From: "Saved by Windows Internet Explorer 8"
Subject: 14 The Query Optimizer
Date: Sun, 21 Mar 2010 02:00:51 -0400
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_0017_01CAC89A.55990190"
X-MimeOLE: Produced By Microsoft MimeOLE V6.0.6000.16669

This is a multi-part message in MIME format.

------=_NextPart_000_0017_01CAC89A.55990190
Content-Type: text/html;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/optimops.htm

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML lang=3Den-US><HEAD><TITLE>14 The Query Optimizer</TITLE>
<META content=3D"text/html; charset=3DISO-8859-1" =
http-equiv=3DContent-Type>
<META content=3Den-US http-equiv=3DContent-Language>
<META content=3Dtext/css http-equiv=3DContent-Style-Type>
<META content=3Dtext/javascript http-equiv=3DContent-Script-Type>
<META scheme=3Dhttp://www.robotstxt.org/ name=3Drobots content=3Dall>
<META name=3Ddoctitle=20
content=3D"Oracle=AE Database Performance Tuning Guide 10g Release 1 =
(10.1)">
<META name=3Dpartno content=3DB10752-01>
<META name=3Ddocid content=3DPFGRF><LINK title=3DHome rel=3DStart =
type=3Dtext/html=20
href=3D"../../index.htm"><LINK title=3DCopyright rel=3DCopyright =
type=3Dtext/html=20
href=3D"../../dcommon/html/cpyr.htm"><LINK title=3DDefault =
rel=3DStylesheet=20
type=3Dtext/css=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/dcommon/css/doccd.cs=
s"><LINK=20
title=3DContents rel=3DContents type=3Dtext/html href=3D"toc.htm"><LINK =
title=3DIndex=20
rel=3DIndex type=3Dtext/html href=3D"index.htm"><LINK title=3DGlossary =
rel=3DGlossary=20
type=3Dtext/html href=3D"glossary.htm"><LINK title=3DPrevious rel=3DPrev =
type=3Dtext/html=20
href=3D"sql_tune.htm"><LINK title=3DNext rel=3DNext type=3Dtext/html=20
href=3D"stats.htm"><LINK title=3D"PDF version" rel=3Dalternate =
type=3Dapplication/pdf=20
href=3D"../b10752.pdf">
<META name=3DGENERATOR content=3D"MSHTML 8.00.6001.18882"></HEAD>
<BODY>
<DIV class=3Dheader>
<P><A id=3Dtop=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#BEGIN"=20
name=3Dtop>Skip Headers</A></P>
<TABLE cellSpacing=3D0 summary=3D"" cellPadding=3D0 width=3D"100%">
  <TBODY>
  <TR>
    <TD vAlign=3Dtop align=3Dleft><FONT color=3D#330099=20
      face=3D"Helvetica, Arial, sans-serif"><STRONG>Oracle=AE Database =
Performance=20
      Tuning Guide<BR>10<I>g</I> Release 1 (10.1)</STRONG><BR>Part =
Number=20
      B10752-01</FONT></TD>
    <TD vAlign=3Dbottom align=3Dright>
      <TABLE cellSpacing=3D0 summary=3D"" cellPadding=3D0 width=3D270>
        <TBODY>
        <TR>
          <TD vAlign=3Dtop align=3Dmiddle><A=20
            =
href=3D"http://download.oracle.com/docs/cd/B14117_01/index.htm"><IMG=20
            border=3D0 alt=3D"Go to Documentation Home"=20
            =
src=3D"http://download.oracle.com/docs/cd/B14117_01/dcommon/gifs/prodicon=
.gif"><BR><FONT=20
            size=3D-2>Home</FONT></A></TD>
          <TD vAlign=3Dtop align=3Dmiddle><A=20
            =
href=3D"http://download.oracle.com/docs/cd/B14117_01/nav/portal_3.htm"><I=
MG=20
            border=3D0 alt=3D"Go to Book List"=20
            =
src=3D"http://download.oracle.com/docs/cd/B14117_01/dcommon/gifs/bookicon=
.gif"><BR><FONT=20
            size=3D-2>Book List</FONT></A></TD>
          <TD vAlign=3Dtop align=3Dmiddle><A=20
            =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/to=
c.htm"><IMG=20
            border=3D0 alt=3D"Go to Table of Contents"=20
            =
src=3D"http://download.oracle.com/docs/cd/B14117_01/dcommon/gifs/conticon=
.gif"><BR><FONT=20
            size=3D-2>Contents</FONT></A></TD>
          <TD vAlign=3Dtop align=3Dmiddle><A=20
            =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/in=
dex.htm"><IMG=20
            border=3D0 alt=3D"Go to Index"=20
            =
src=3D"http://download.oracle.com/docs/cd/B14117_01/dcommon/gifs/indxicon=
.gif"><BR><FONT=20
            size=3D-2>Index</FONT></A></TD>
          <TD vAlign=3Dtop align=3Dmiddle><A=20
            =
href=3D"http://download.oracle.com/docs/cd/B14117_01/mix.101/b12039/toc.h=
tm"><IMG=20
            border=3D0 alt=3D"Go to Master Index"=20
            =
src=3D"http://download.oracle.com/docs/cd/B14117_01/dcommon/gifs/mix.gif"=
><BR><FONT=20
            size=3D-2>Master&nbsp;Index</FONT></A></TD>
          <TD vAlign=3Dtop align=3Dmiddle><A=20
            =
href=3D"http://download.oracle.com/docs/cd/B14117_01/dcommon/html/feedbac=
k.htm"><IMG=20
            border=3D0 alt=3D"Go to Feedback page"=20
            =
src=3D"http://download.oracle.com/docs/cd/B14117_01/dcommon/gifs/feedback=
.gif"><BR><FONT=20
            =
size=3D-2>Feedback</FONT></A></TD></TR></TBODY></TABLE></TD></TR></TBODY>=
</TABLE>
<HR>

<TABLE cellSpacing=3D0 summary=3D"layout table" cellPadding=3D0 =
width=3D"100%">
  <TBODY>
  <TR>
    <TD vAlign=3Dtop align=3Dleft>
      <TABLE cellSpacing=3D0 summary=3D"layout table" cellPadding=3D0 =
width=3D90=20
      align=3Dleft>
        <TBODY>
        <TR>
          <TD vAlign=3Dtop align=3Dmiddle><A=20
            =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/sq=
l_tune.htm"><IMG=20
            border=3D0 alt=3D"Go to previous page"=20
            =
src=3D"http://download.oracle.com/docs/cd/B14117_01/dcommon/gifs/larrow.g=
if"><BR><FONT=20
            size=3D-2>Previous</FONT></A></TD>
          <TD vAlign=3Dtop align=3Dmiddle><A=20
            =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/st=
ats.htm"><IMG=20
            border=3D0 alt=3D"Go to next page"=20
            =
src=3D"http://download.oracle.com/docs/cd/B14117_01/dcommon/gifs/rarrow.g=
if"><BR><FONT=20
            size=3D-2>Next</FONT></A></TD></TR></TBODY></TABLE></TD>
    <TD vAlign=3Dtop align=3Dright><A=20
      =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752.pd=
f"><FONT=20
      size=3D-2>View PDF</FONT></A></TD></TR></TBODY></TABLE><A =
name=3DBEGIN></A></DIV>
<DIV class=3DIND><A name=3D721></A>
<H1 class=3DTitle><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">14<BR><A=20
name=3DPFGRF001>The Query Optimizer</A></FONT></H1><A name=3D28908></A>
<P class=3DBP>This chapter discusses SQL processing, optimization =
methods, and how=20
the optimizer chooses a specific plan to execute SQL.</P><A =
name=3D29099></A>
<P class=3DBP>The chapter contains the following sections:</P>
<UL class=3DLB1>
  <LI class=3DLB1 type=3Ddisc><A name=3D40569></A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#80658">Optimizer=20
  Operations</A>=20
  <LI class=3DLB1 type=3Ddisc><A name=3D38174></A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#38183">Choosing=20
  an Optimizer Goal</A>=20
  <LI class=3DLB1 type=3Ddisc><A name=3D81136></A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#81027">Enabling=20
  and Controlling Query Optimizer Features</A>=20
  <LI class=3DLB1 type=3Ddisc><A name=3D27818></A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#51003">Understanding=20
  the Query Optimizer</A>=20
  <LI class=3DLB1 type=3Ddisc><A name=3D46425></A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#35891">Understanding=20
  Access Paths for the Query Optimizer</A>=20
  <LI class=3DLB1 type=3Ddisc><A name=3D36857></A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#39473">Understanding=20
  Joins</A></LI></UL><A name=3D80658></A>
<H2 class=3DH1><A name=3DPFGRF10101><FONT color=3D#330099=20
face=3D"Arial, Helvetica, sans-serif">Optimizer =
Operations</FONT></A></H2><A=20
name=3D80654></A>
<P class=3DBP>A SQL statement can be executed in many different ways, =
such as full=20
table scans, index scans, nested loops, and hash joins. The query =
optimizer=20
determines the most efficient way to execute a SQL statement after =
considering=20
many factors related to the objects referenced and the conditions =
specified in=20
the query. This determination is an important step in the processing of =
any SQL=20
statement and can greatly affect execution time.</P><A name=3D73735></A>
<DIV align=3Dcenter>
<TABLE dir=3Dltr class=3DNote title=3D"This is a layout table to format =
a note"=20
border=3D0 cellSpacing=3D0 summary=3D"This is a layout table to format a =
note"=20
cellPadding=3D0 width=3D"80%">
  <TBODY>
  <TR class=3DNote>
    <TD class=3DNote>
      <HR>
      <A name=3D73733></A><FONT face=3D"Arial, Helvetica, =
sans-serif"><STRONG=20
      class=3DNH>Note:</STRONG></FONT> <A name=3D73734></A>
      <P class=3DNB>The optimizer might not make the same decisions from =
one=20
      version of Oracle to the next. In recent versions, the optimizer =
might=20
      make different decisions, because better information is =
available.</P>
      <HR>
    </TD></TR></TBODY></TABLE></DIV><A name=3D73728></A>
<P class=3DBP>The output from the optimizer is a plan that describes an =
optimum=20
method of execution. The Oracle server provides query =
optimization.</P><A=20
name=3D80695></A>
<P class=3DBP>For any SQL statement processed by Oracle, the optimizer =
performs=20
the operations listed in <A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#80705">Table&nbsp;14-1</A>.</P><A=20
name=3D80760></A>
<H5 class=3DTTW><A name=3D80760></A><A name=3D80705></A><STRONG><FONT=20
face=3D"Arial, Helvetica, sans-serif"><EM>Table 14-1 &nbsp;Optimizer=20
Operations</EM></FONT></STRONG></H5>
<TABLE dir=3Dltr class=3DFormalWide title=3D"" border=3D1 rules=3Dgroups =
cellSpacing=3D0=20
summary=3D"" cellPadding=3D3 width=3D"100%" frame=3Dhsides>
  <THEAD>
  <TR class=3DFormal>
    <TH class=3DFormal vAlign=3Dbottom scope=3Dcol align=3Dleft><A=20
      name=3D80709></A><FONT=20
      face=3D"Arial, Helvetica, =
sans-serif"><STRONG>Operation</STRONG></FONT></TH>
    <TH class=3DFormal vAlign=3Dbottom scope=3Dcol align=3Dleft><A=20
      name=3D80711></A><FONT=20
      face=3D"Arial, Helvetica, =
sans-serif"><STRONG>Description</STRONG></FONT></TH></TR></THEAD>
  <TBODY>
  <TR class=3DFormal vAlign=3Dtop align=3Dleft>
    <TD class=3DFormal><A name=3D80713></A>
      <P class=3DTB>Evaluation of expressions and conditions</P></TD>
    <TD class=3DFormal><A name=3D80715></A>
      <P class=3DTB>The optimizer first evaluates expressions and =
conditions=20
      containing constants as fully as possible.</P></TD></TR>
  <TR class=3DFormal vAlign=3Dtop align=3Dleft>
    <TD class=3DFormal><A name=3D80717></A>
      <P class=3DTB>Statement transformation</P></TD>
    <TD class=3DFormal><A name=3D80719></A>
      <P class=3DTB>For complex statements involving, for example, =
correlated=20
      subqueries or views, the optimizer might transform the original =
statement=20
      into an equivalent join statement.</P></TD></TR>
  <TR class=3DFormal vAlign=3Dtop align=3Dleft>
    <TD class=3DFormal><A name=3D80721></A>
      <P class=3DTB>Choice of optimizer goals</P></TD>
    <TD class=3DFormal><A name=3D80725></A>
      <P class=3DTB>The optimizer determines the goal of optimization. =
See <A=20
      =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#38183">"Choosing=20
      an Optimizer Goal"</A><A=20
      =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#38183"></A>.</P></TD></TR>
  <TR class=3DFormal vAlign=3Dtop align=3Dleft>
    <TD class=3DFormal><A name=3D80731></A>
      <P class=3DTB>Choice of access paths</P></TD>
    <TD class=3DFormal><A name=3D80733></A>
      <P class=3DTB>For each table accessed by the statement, the =
optimizer=20
      chooses one or more of the available access paths to obtain table =
data.=20
      See <A=20
      =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#35891">"Understanding=20
      Access Paths for the Query Optimizer"</A><A=20
      =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#35891"></A>.</P></TD></TR>
  <TR class=3DFormal vAlign=3Dtop align=3Dleft>
    <TD class=3DFormal><A name=3D80741></A>
      <P class=3DTB>Choice of join orders</P></TD>
    <TD class=3DFormal><A name=3D80743></A>
      <P class=3DTB>For a join statement that joins more than two =
tables, the=20
      optimizer chooses which pair of tables is joined first, and then =
which=20
      table is joined to the result, and so on. See <A=20
      =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#76331">"How=20
      the Query Optimizer Chooses Execution Plans for Joins"</A><A=20
      =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#76331"></A>.</P></TD></TR></TBODY></TABLE><A=20
name=3D73740></A>
<P class=3DBP>You can influence the optimizer's choices by setting the =
optimizer=20
goal, and by gathering representative statistics for the query =
optimizer. The=20
optimizer goal is either throughput or response time. See <A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#38183">"Choosing=20
an Optimizer Goal"</A><A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#38183"></A>=20
and <A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#50788">"Query=20
Optimizer Statistics in the Data Dictionary"</A><A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#50788"></A>.</P><A=20
name=3D72881></A>
<P class=3DBP>Sometimes, the application designer, who has more =
information about=20
a particular application's data than is available to the optimizer, can =
choose a=20
more effective way to execute a SQL statement. The application designer =
can use=20
hints in SQL statements to specify how the statement should be =
executed.</P><A=20
name=3D74148></A>
<DIV align=3Dcenter>
<TABLE dir=3Dltr class=3DNoteAlso title=3D"This is a layout table to =
format a note"=20
border=3D0 cellSpacing=3D0 summary=3D"This is a layout table to format a =
note"=20
cellPadding=3D0 width=3D"80%">
  <TBODY>
  <TR class=3DNoteAlso>
    <TD class=3DNoteAlso><A name=3D74131></A><FONT=20
      face=3D"Arial, Helvetica, sans-serif"><STRONG class=3DNH>See=20
      Also:</STRONG></FONT> <A name=3D74132></A>
      <UL class=3DNL>
        <LI class=3DNL type=3Ddisc><A name=3D74139></A><A =
class=3D"xlinkSRC CNCPT015"=20
        =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10743/sq=
lplsql.htm#CNCPT015"><EM=20
        class=3DItalic>Oracle Database Concepts</EM></A> for an overview =
of SQL=20
        processing and the optimizer=20
        <LI class=3DNL type=3Ddisc><A name=3D80969></A><A =
class=3D"olinkSRC ADDCI"=20
        =
href=3D"http://download.oracle.com/docs/cd/B14117_01/appdev.101/b10800/to=
c.htm"><EM=20
        class=3DItalic>Oracle Data Cartridge Developer's Guide</EM></A> =
for=20
        information about the extensible optimizer=20
        <LI class=3DNL type=3Ddisc><A name=3D80646></A><A=20
        =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#38183">"Choosing=20
        an Optimizer Goal"</A><A=20
        =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#38183"></A>=20
        for more information on optimization goals=20
        <LI class=3DNL type=3Ddisc><A name=3D74143></A><A=20
        =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/st=
ats.htm#13547">Chapter&nbsp;15,=20
        "Managing Optimizer Statistics"</A> for information on gathering =
and=20
        using statistics=20
        <LI class=3DNL type=3Ddisc><A name=3D74147></A><A=20
        =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/hi=
ntsref.htm#8326">Chapter&nbsp;17,=20
        "Optimizer Hints"</A> for more information about using hints in =
SQL=20
        statements</LI></UL></TD></TR></TBODY></TABLE></DIV><A =
name=3D38183></A>
<H2 class=3DH1><A name=3DPFGRF10102><FONT color=3D#330099=20
face=3D"Arial, Helvetica, sans-serif">Choosing an Optimizer =
Goal</FONT></A></H2><A=20
name=3D38185></A>
<P class=3DBP>By default, the goal of the query optimizer is the best =
throughput.=20
This means that it chooses the least amount of resources necessary to =
process=20
all rows accessed by the statement. Oracle can also optimize a statement =
with=20
the goal of best response time. This means that it uses the least amount =
of=20
resources necessary to process the first row accessed by a SQL =
statement.</P><A=20
name=3D38196></A>
<P class=3DBP>Choose a goal for the optimizer based on the needs of your =

application:</P>
<UL class=3DLB1>
  <LI class=3DLB1 type=3Ddisc><A name=3D38197></A>For applications =
performed in batch,=20
  such as Oracle Reports applications, optimize for best throughput. =
Usually,=20
  throughput is more important in batch applications, because the user=20
  initiating the application is only concerned with the time necessary =
for the=20
  application to complete. Response time is less important, because the =
user=20
  does not examine the results of individual statements while the =
application is=20
  running.=20
  <LI class=3DLB1 type=3Ddisc><A name=3D38198></A>For interactive =
applications, such=20
  as Oracle Forms applications or SQL*Plus queries, optimize for best =
response=20
  time. Usually, response time is important in interactive applications, =
because=20
  the interactive user is waiting to see the first row or first few rows =

  accessed by the statement.</LI></UL><A name=3D42389></A>
<P class=3DBP>The optimizer's behavior when choosing an optimization =
approach and=20
goal for a SQL statement is affected by the following factors:</P>
<UL class=3DLB1>
  <LI class=3DLB1 type=3Ddisc><A name=3D52867></A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#38218">OPTIMIZER_MODE=20
  Initialization Parameter</A>=20
  <LI class=3DLB1 type=3Ddisc><A name=3D38216></A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#72134">Optimizer=20
  SQL Hints for Changing the Query Optimizer Goal</A>=20
  <LI class=3DLB1 type=3Ddisc><A name=3D80803></A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#50788">Query=20
  Optimizer Statistics in the Data Dictionary</A></LI></UL><A =
name=3D38218></A>
<H3 class=3DH2><FONT color=3D#330099=20
face=3D"Arial, Helvetica, sans-serif">OPTIMIZER_MODE Initialization=20
Parameter</FONT></H3><A name=3D38222></A>
<P class=3DBP>The <CODE>OPTIMIZER_MODE</CODE> initialization parameter =
establishes=20
the default behavior for choosing an optimization approach for the =
instance. The=20
possible values and description are listed in <A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#78248">Table&nbsp;14-2</A>.</P><A=20
name=3D78289></A>
<H5 class=3DTTW><A name=3D78289></A><A name=3D78248></A><STRONG><FONT=20
face=3D"Arial, Helvetica, sans-serif"><EM>Table 14-2 =
&nbsp;OPTIMIZER_MODE=20
Parameter Values</EM></FONT></STRONG></H5>
<TABLE dir=3Dltr class=3DFormalWide title=3D"" border=3D1 rules=3Dgroups =
cellSpacing=3D0=20
summary=3D"" cellPadding=3D3 width=3D"100%" frame=3Dhsides>
  <THEAD>
  <TR class=3DFormal>
    <TH class=3DFormal vAlign=3Dbottom scope=3Dcol align=3Dleft><A=20
      name=3D78252></A><FONT=20
      face=3D"Arial, Helvetica, =
sans-serif"><STRONG>Value</STRONG></FONT></TH>
    <TH class=3DFormal vAlign=3Dbottom scope=3Dcol align=3Dleft><A=20
      name=3D78254></A><FONT=20
      face=3D"Arial, Helvetica, =
sans-serif"><STRONG>Description</STRONG></FONT></TH></TR></THEAD>
  <TBODY>
  <TR class=3DFormal vAlign=3Dtop align=3Dleft>
    <TD class=3DFormal><A name=3D78257></A>
      <P class=3DTB><CODE>ALL_ROWS</CODE></P></TD>
    <TD class=3DFormal><A name=3D78260></A>
      <P class=3DTB>The optimizer uses a cost-based approach for all SQL =

      statements in the session regardless of the presence of statistics =
and=20
      optimizes with a goal of best throughput (minimum resource use to =
complete=20
      the entire statement). This is the default value.</P></TD></TR>
  <TR class=3DFormal vAlign=3Dtop align=3Dleft>
    <TD class=3DFormal><A name=3D78264></A>
      <P class=3DTB><CODE>FIRST_ROWS_</CODE><EM =
class=3DItalic>n</EM></P></TD>
    <TD class=3DFormal><A name=3D78266></A>
      <P class=3DTB>The optimizer uses a cost-based approach, regardless =
of the=20
      presence of statistics, and optimizes with a goal of best response =
time to=20
      return the first <EM class=3DItalic>n</EM> number of rows; <EM=20
      class=3DItalic>n</EM> can equal 1, 10, 100, or 1000.</P></TD></TR>
  <TR class=3DFormal vAlign=3Dtop align=3Dleft>
    <TD class=3DFormal><A name=3D78269></A>
      <P class=3DTB><CODE>FIRST_ROWS</CODE></P></TD>
    <TD class=3DFormal><A name=3D78272></A>
      <P class=3DTB>The optimizer uses a mix of cost and heuristics to =
find a best=20
      plan for fast delivery of the first few rows. <A =
name=3D78273></A></P>
      <P class=3DTB>Note: Using heuristics sometimes leads the query =
optimizer to=20
      generate a plan with a cost that is significantly larger than the =
cost of=20
      a plan without applying the heuristic. <CODE>FIRST_ROWS</CODE> is=20
      available for backward compatibility and plan stability; use=20
      <CODE>FIRST_ROWS_</CODE><EM><CODE>n</CODE></EM> =
instead.</P></TD></TR>
  <TR class=3DFormal vAlign=3Dtop align=3Dleft>
    <TD class=3DFormal><A name=3D78276></A>
      <P class=3DTB><CODE>CHOOSE</CODE></P></TD>
    <TD class=3DFormal><A name=3D78278></A>
      <P class=3DTB>This parameter value has been =
desupported.</P></TD></TR>
  <TR class=3DFormal vAlign=3Dtop align=3Dleft>
    <TD class=3DFormal><A name=3D78285></A>
      <P class=3DTB><CODE>RULE</CODE></P></TD>
    <TD class=3DFormal><A name=3D78287></A>
      <P class=3DTB>This parameter value has been=20
desupported.</P></TD></TR></TBODY></TABLE><A name=3D72917></A>
<P class=3DBP>You can change the goal of the query optimizer for all SQL =

statements in a session by changing the parameter value in =
initialization file=20
or by the <CODE>ALTER</CODE> <CODE>SESSION</CODE> <CODE>SET</CODE>=20
<CODE>OPTIMIZER_MODE</CODE> statement. For example:</P>
<UL class=3DLB1>
  <LI class=3DLB1 type=3Ddisc><A name=3D76726></A>The following =
statement in an=20
  initialization parameter file changes the goal of the query optimizer =
for all=20
  sessions of the instance to best response time: <PRE class=3DCE1><A =
name=3D72906></A>OPTIMIZER_MODE =3D FIRST_ROWS_1
<A name=3D72907></A>
</PRE>
  <LI class=3DLB1 type=3Ddisc><A name=3D72894></A>The following SQL =
statement changes=20
  the goal of the query optimizer for the current session to best =
response time:=20
<PRE class=3DCE1><A name=3D38244></A>ALTER SESSION SET OPTIMIZER_MODE =
=3D FIRST_ROWS_1;
<A name=3D49442></A>
</PRE></LI></UL><A name=3D42412></A>
<P class=3DBP>If the optimizer uses the cost-based approach for a SQL =
statement,=20
and if some tables accessed by the statement have no statistics, then =
the=20
optimizer uses internal information, such as the number of data blocks =
allocated=20
to these tables, to estimate other statistics for these tables.</P><A=20
name=3D72134></A>
<H3 class=3DH2><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Optimizer=20
SQL Hints for Changing the Query Optimizer Goal</FONT></H3><A =
name=3D54859></A>
<P class=3DBP>To specify the goal of the query optimizer for an =
individual SQL=20
statement, use one of the hints in <A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#78312">Table&nbsp;14-3</A>.=20
Any of these hints in an individual SQL statement can override the=20
<CODE>OPTIMIZER_MODE</CODE> initialization parameter for that SQL =
statement.</P>
<H5 class=3DTT><A name=3D78358></A><A name=3D78312></A><STRONG><FONT=20
face=3D"Arial, Helvetica, sans-serif"><EM>Table 14-3 Hints for Changing =
the Query=20
Optimizer Goal</EM></FONT></STRONG></H5>
<TABLE dir=3Dltr class=3DFormal title=3D"" border=3D1 rules=3Dgroups =
cellSpacing=3D0=20
summary=3D"" cellPadding=3D3 width=3D"100%" frame=3Dhsides>
  <THEAD>
  <TR class=3DFormal>
    <TH class=3DFormal vAlign=3Dbottom scope=3Dcol align=3Dleft><A=20
      name=3D78316></A><FONT=20
      face=3D"Arial, Helvetica, =
sans-serif"><STRONG>Hint</STRONG></FONT></TH>
    <TH class=3DFormal vAlign=3Dbottom scope=3Dcol align=3Dleft><A=20
      name=3D78318></A><FONT=20
      face=3D"Arial, Helvetica, =
sans-serif"><STRONG>Description</STRONG></FONT></TH></TR></THEAD>
  <TBODY>
  <TR class=3DFormal vAlign=3Dtop align=3Dleft>
    <TD class=3DFormal><A name=3D78323></A>
      <P class=3DTB><CODE>FIRST_ROWS(n)</CODE></P></TD>
    <TD class=3DFormal><A name=3D78325></A>
      <P class=3DTB>This hint instructs Oracle to optimize an individual =
SQL=20
      statement with a goal of best response time to return the first n =
number=20
      of rows, where n equals any positive integer. The hint uses a =
cost-based=20
      approach for the SQL statement, regardless of the presence of=20
      statistic.</P></TD></TR>
  <TR class=3DFormal vAlign=3Dtop align=3Dleft>
    <TD class=3DFormal><A name=3D78333></A>
      <P class=3DTB><CODE>ALL_ROWS</CODE></P></TD>
    <TD class=3DFormal><A name=3D78335></A>
      <P class=3DTB>This hint explicitly chooses the cost-based approach =
to=20
      optimize a SQL statement with a goal of best =
throughput.</P></TD></TR>
  <TR class=3DFormal vAlign=3Dtop align=3Dleft>
    <TD class=3DFormal><A name=3D78338></A>
      <P class=3DTB><CODE>CPU_COSTING</CODE></P></TD>
    <TD class=3DFormal><A name=3D78340></A>
      <P class=3DTB>This hint turns CPU costing on for the SQL =
statement. This is=20
      the default cost model for the optimizer. The optimizer estimates =
the=20
      number and type of I/O operations, the number of CPU cycles the =
database=20
      will perform during execution of the given query, and uses system=20
      statistics to convert the number of CPU cycles and number of IOs =
to the=20
      estimated query execution time.</P></TD></TR>
  <TR class=3DFormal vAlign=3Dtop align=3Dleft>
    <TD class=3DFormal><A name=3D78343></A>
      <P class=3DTB><CODE>NO_CPU_COSTING</CODE></P></TD>
    <TD class=3DFormal><A name=3D78345></A>
      <P class=3DTB>This hint turns CPU costing off for the SQL =
statement. The=20
      optimizer uses the I/O cost model which measures everything in =
single=20
      block reads and ignores CPU cost.</P></TD></TR>
  <TR class=3DFormal vAlign=3Dtop align=3Dleft>
    <TD class=3DFormal><A name=3D78348></A>
      <P class=3DTB><CODE>CHOOSE</CODE></P></TD>
    <TD class=3DFormal><A name=3D78350></A>
      <P class=3DTB>This hint has been desupported.</P></TD></TR>
  <TR class=3DFormal vAlign=3Dtop align=3Dleft>
    <TD class=3DFormal><A name=3D78354></A>
      <P class=3DTB><CODE>RULE</CODE></P></TD>
    <TD class=3DFormal><A name=3D78356></A>
      <P class=3DTB>This hint has been =
desupported.</P></TD></TR></TBODY></TABLE><A=20
name=3D38313></A>
<DIV align=3Dcenter>
<TABLE dir=3Dltr class=3DNoteAlso title=3D"This is a layout table to =
format a note"=20
border=3D0 cellSpacing=3D0 summary=3D"This is a layout table to format a =
note"=20
cellPadding=3D0 width=3D"80%">
  <TBODY>
  <TR class=3DNoteAlso>
    <TD class=3DNoteAlso><A name=3D38308></A><FONT=20
      face=3D"Arial, Helvetica, sans-serif"><STRONG class=3DNH>See=20
      Also:</STRONG></FONT> <A name=3D38311></A>
      <P class=3DNB><A=20
      =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/hi=
ntsref.htm#8326">Chapter&nbsp;17,=20
      "Optimizer Hints"</A> for information on how to use=20
hints</P></TD></TR></TBODY></TABLE></DIV><A name=3D50788></A>
<H3 class=3DH2><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Query=20
Optimizer Statistics in the Data Dictionary</FONT></H3><A =
name=3D80814></A>
<P class=3DBP>The statistics used by the query optimizer are stored in =
the data=20
dictionary. You can collect exact or estimated statistics about physical =
storage=20
characteristics and data distribution in these schema objects by using =
the=20
<CODE>DBMS_STATS</CODE> package.</P><A name=3D73015></A>
<P class=3DBP>To maintain the effectiveness of the query optimizer, you =
must have=20
statistics that are representative of the data. For table columns that =
contain=20
values with large variations in number of duplicates, called skewed =
data, you=20
should collect histograms.</P><A name=3D51649></A>
<P class=3DBP>The resulting statistics provide the query optimizer with=20
information about data uniqueness and distribution. Using this =
information, the=20
query optimizer is able to compute plan costs with a high degree of =
accuracy.=20
This enables the query optimizer to choose the best execution plan based =
on the=20
least cost.</P><A name=3D78210></A>
<P class=3DBP>If no statistics are available when using query =
optimization, the=20
optimizer will do dynamic sampling depending on the setting of the=20
<CODE>OPTMIZER_DYNAMIC_SAMPLING</CODE> initialization parameter. This =
may cause=20
slower parse times so for best performance, the optimizer should have=20
representative optimizer statistics.</P><A name=3D51657></A>
<DIV align=3Dcenter>
<TABLE dir=3Dltr class=3DNoteAlso title=3D"This is a layout table to =
format a note"=20
border=3D0 cellSpacing=3D0 summary=3D"This is a layout table to format a =
note"=20
cellPadding=3D0 width=3D"80%">
  <TBODY>
  <TR class=3DNoteAlso>
    <TD class=3DNoteAlso><A name=3D51652></A><FONT=20
      face=3D"Arial, Helvetica, sans-serif"><STRONG class=3DNH>See=20
      Also:</STRONG></FONT> <A name=3D51656></A>
      <UL class=3DNL>
        <LI class=3DNL type=3Ddisc><A name=3D79207></A><A=20
        =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/st=
ats.htm#13547">Chapter&nbsp;15,=20
        "Managing Optimizer Statistics"</A>=20
        <LI class=3DNL type=3Ddisc><A name=3D82351></A><A=20
        =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/st=
ats.htm#42992">"Estimating=20
        Statistics with Dynamic Sampling"</A><A=20
        =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/st=
ats.htm#42992"></A></LI></UL></TD></TR></TBODY></TABLE></DIV><A=20
name=3D81027></A>
<H2 class=3DH1><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Enabling=20
and Controlling Query Optimizer Features</FONT></H2><A name=3D81028></A>
<P class=3DBP>This section contains some of the initialization =
parameters specific=20
to the optimizer. The following sections are especially useful when =
tuning=20
Oracle applications.</P><A name=3D81038></A>
<DIV align=3Dcenter>
<TABLE dir=3Dltr class=3DNoteAlso title=3D"This is a layout table to =
format a note"=20
border=3D0 cellSpacing=3D0 summary=3D"This is a layout table to format a =
note"=20
cellPadding=3D0 width=3D"80%">
  <TBODY>
  <TR class=3DNoteAlso>
    <TD class=3DNoteAlso><A name=3D81031></A><FONT=20
      face=3D"Arial, Helvetica, sans-serif"><STRONG class=3DNH>See=20
      Also:</STRONG></FONT> <A name=3D81037></A>
      <P class=3DNB><A class=3D"olinkSRC REFRN"=20
      =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10755/to=
c.htm"><EM=20
      class=3DItalic>Oracle Database Reference</EM></A> for information =
about=20
      initialization parameters</P></TD></TR></TBODY></TABLE></DIV><A =
name=3D81039></A>
<H3 class=3DH2><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Enabling=20
Query Optimizer Features</FONT></H3><A name=3D81040></A>
<P class=3DBP>You enable optimizer features by setting the=20
<CODE>OPTIMIZER_FEATURES_ENABLE</CODE> initialization parameter.</P><A=20
name=3D81044></A>
<H4 class=3DSH1><FONT=20
face=3D"Arial, Helvetica, sans-serif">OPTIMIZER_FEATURES_ENABLE=20
Parameter</FONT></H4><A name=3D81045></A>
<P class=3DBP>The <CODE>OPTIMIZER_FEATURES_ENABLE</CODE> parameter acts =
as an=20
umbrella parameter for the query optimizer. This parameter can be used =
to enable=20
a series of optimizer-related features, depending on the release. It =
accepts one=20
of a list of valid string values corresponding to the release numbers, =
such as=20
8.0.4, 8.1.7, and 9.2.0. For example, the following setting enables the =
use of=20
the optimizer features in generating query plans in Oracle 10<EM=20
class=3DItalic>g</EM>, Release 1.</P><PRE class=3DCE><A =
name=3D81046></A>OPTIMIZER_FEATURES_ENABLE=3D10.0.0;=20
<A name=3D81047></A>
</PRE><A name=3D81048></A>
<P class=3DBP>The <CODE>OPTIMIZER_FEATURES_ENABLE</CODE> parameter was =
introduced=20
with the main goal to allow customers to upgrade the Oracle server, yet =
preserve=20
the old behavior of the query optimizer after the upgrade. For example, =
when you=20
upgrade the Oracle server from release 8.1.5 to release 8.1.6, the =
default value=20
of the <CODE>OPTIMIZER_FEATURES_ENABLE</CODE> parameter changes from =
8.1.5 to=20
8.1.6. This upgrade results in the query optimizer enabling optimization =

features based on 8.1.6, as opposed to 8.1.5.</P><A name=3D81049></A>
<P class=3DBP>For plan stability or backward compatibility reasons, you =
might not=20
want the query plans to change because of new optimizer features in a =
new=20
release. In such a case, you can set the =
<CODE>OPTIMIZER_FEATURES_ENABLE</CODE>=20
parameter to an earlier version. For example, to preserve the behavior =
of the=20
query optimizer to release 8.1.5, set the parameter as follows:</P><PRE =
class=3DCE><A name=3D81050></A>OPTIMIZER_FEATURES_ENABLE=3D8.1.5;
<A name=3D81051></A>
</PRE><A name=3D81052></A>
<P class=3DBP>This statement disables all new optimizer features that =
were added=20
in releases following release 8.1.5.</P><A name=3D81057></A>
<DIV align=3Dcenter>
<TABLE dir=3Dltr class=3DNote title=3D"This is a layout table to format =
a note"=20
border=3D0 cellSpacing=3D0 summary=3D"This is a layout table to format a =
note"=20
cellPadding=3D0 width=3D"80%">
  <TBODY>
  <TR class=3DNote>
    <TD class=3DNote>
      <HR>
      <A name=3D81055></A><FONT face=3D"Arial, Helvetica, =
sans-serif"><STRONG=20
      class=3DNH>Note:</STRONG></FONT> <A name=3D81056></A>
      <P class=3DNB>If you upgrade to a new release and you want to =
enable the=20
      features available with that release, then you do not need to =
explicitly=20
      set the <CODE>OPTIMIZER_FEATURES_ENABLE</CODE> initialization=20
      parameter.</P>
      <HR>
    </TD></TR></TBODY></TABLE></DIV><A name=3D81058></A>
<P class=3DBP>Oracle Corporation does not recommend explicitly setting =
the=20
<CODE>OPTIMIZER_FEATURES_ENABLE</CODE> parameter to an earlier release. =
Instead,=20
execution plan or query performance issues should be resolved on a =
case-by-case=20
basis.</P><A name=3D81068></A>
<DIV align=3Dcenter>
<TABLE dir=3Dltr class=3DNoteAlso title=3D"This is a layout table to =
format a note"=20
border=3D0 cellSpacing=3D0 summary=3D"This is a layout table to format a =
note"=20
cellPadding=3D0 width=3D"80%">
  <TBODY>
  <TR class=3DNoteAlso>
    <TD class=3DNoteAlso><A name=3D81061></A><FONT=20
      face=3D"Arial, Helvetica, sans-serif"><STRONG class=3DNH>See=20
      Also:</STRONG></FONT> <A name=3D81067></A>
      <P class=3DNB><A class=3D"xlinkSRC REFRN10141"=20
      =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10755/in=
itparams143.htm#REFRN10141"><EM=20
      class=3DItalic>Oracle Database Reference</EM></A> for information =
about=20
      optimizer features that are enabled when you set the=20
      <CODE>OPTIMIZER_FEATURES_ENABLE</CODE> parameter to each of the =
release=20
      values</P></TD></TR></TBODY></TABLE></DIV><A name=3D81070></A>
<H3 class=3DH2><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Controlling=20
the Behavior of the Query Optimizer</FONT></H3><A name=3D81071></A>
<P class=3DBP>This section lists some initialization parameters that can =
be used=20
to control the behavior of the query optimizer. These parameters can be =
used to=20
enable various optimizer features in order to improve the performance of =
SQL=20
execution.</P><A name=3D81073></A>
<H4 class=3DSH1><FONT=20
face=3D"Arial, Helvetica, sans-serif">CURSOR_SHARING</FONT></H4><A =
name=3D81074></A>
<P class=3DBP>This parameter converts literal values in SQL statements =
to bind=20
variables. Converting the values improves cursor sharing and can affect =
the=20
execution plans of SQL statements. The optimizer generates the execution =
plan=20
based on the presence of the bind variables and not the actual literal=20
values.</P><A name=3D81076></A>
<H4 class=3DSH1><FONT=20
face=3D"Arial, Helvetica, =
sans-serif">DB_FILE_MULTIBLOCK_READ_COUNT</FONT></H4><A=20
name=3D81077></A>
<P class=3DBP>This parameter specifies the number of blocks that are =
read in a=20
single I/O during a full table scan or index fast full scan. The =
optimizer uses=20
the value of <CODE>DB_FILE_MULTIBLOCK_READ_COUNT</CODE> to cost full =
table scans=20
and index fast full scans. Larger values result in a cheaper cost for =
full table=20
scans and can result in the optimizer choosing a full table scan over an =
index=20
scan.</P><A name=3D81087></A>
<H4 class=3DSH1><FONT=20
face=3D"Arial, Helvetica, =
sans-serif">OPTIMIZER_INDEX_CACHING</FONT></H4><A=20
name=3D81088></A>
<P class=3DBP>This parameter controls the costing of an index probe in =
conjunction=20
with a nested loop. The range of values <CODE>0</CODE> to =
<CODE>100</CODE> for=20
<CODE>OPTIMIZER_INDEX_CACHING</CODE> indicates percentage of index =
blocks in the=20
buffer cache, which modifies the optimizer's assumptions about index =
caching for=20
nested loops and IN-list iterators. A value of <CODE>100</CODE> infers =
that 100%=20
of the index blocks are likely to be found in the buffer cache and the =
optimizer=20
adjusts the cost of an index probe or nested loop accordingly. Use =
caution when=20
using this parameter because execution plans can change in favor of =
index=20
caching.</P><A name=3D81090></A>
<H4 class=3DSH1><FONT=20
face=3D"Arial, Helvetica, =
sans-serif">OPTIMIZER_INDEX_COST_ADJ</FONT></H4><A=20
name=3D81091></A>
<P class=3DBP>This parameter can be used to adjust the cost of index =
probes. The=20
range of values is <CODE>1</CODE> to <CODE>10000</CODE>. The default =
value is=20
<CODE>100</CODE>, which means that indexes are evaluated as an access =
path based=20
on the normal costing model. A value of <CODE>10</CODE> means that the =
cost of=20
an index access path is one-tenth the normal cost of an index access =
path.</P><A=20
name=3D81094></A>
<H4 class=3DSH1><FONT=20
face=3D"Arial, Helvetica, sans-serif">OPTIMIZER_MODE</FONT></H4><A =
name=3D81095></A>
<P class=3DBP>This initialization parameter sets the mode of the =
optimizer at=20
instance startup. The possible values are <CODE>RULE</CODE>,=20
<CODE>CHOOSE</CODE>, <CODE>ALL_ROWS</CODE>, <CODE>FIRST_ROWS_</CODE><EM=20
class=3DItalic>n</EM>, and <CODE>FIRST_ROWS</CODE>. For description of =
these=20
parameter values, see <A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#38218">"OPTIMIZER_MODE=20
Initialization Parameter"</A><A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#38218"></A>.</P><A=20
name=3D82497></A>
<H4 class=3DSH1><FONT=20
face=3D"Arial, Helvetica, sans-serif">PGA_AGGREGATE_TARGET</FONT></H4><A =

name=3D82502></A>
<P class=3DBP>This parameter automatically controls the amount of memory =
allocated=20
for sorts and hash joins. Larger amounts of memory allocated for sorts =
or hash=20
joins reduce the optimizer cost of these operations. See <A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/me=
mory.htm#49321">"PGA=20
Memory Management"</A><A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/me=
mory.htm#49321"></A>.</P><A=20
name=3D81115></A>
<H4 class=3DSH1><FONT=20
face=3D"Arial, Helvetica, =
sans-serif">STAR_TRANSFORMATION_ENABLED</FONT></H4><A=20
name=3D81116></A>
<P class=3DBP>This parameter, if set to <CODE>true</CODE>, enables the =
query=20
optimizer to cost a star transformation for star queries. The star=20
transformation combines the bitmap indexes on the various fact table=20
columns.</P><A name=3D81127></A>
<DIV align=3Dcenter>
<TABLE dir=3Dltr class=3DNoteAlso title=3D"This is a layout table to =
format a note"=20
border=3D0 cellSpacing=3D0 summary=3D"This is a layout table to format a =
note"=20
cellPadding=3D0 width=3D"80%">
  <TBODY>
  <TR class=3DNoteAlso>
    <TD class=3DNoteAlso><A name=3D81119></A><FONT=20
      face=3D"Arial, Helvetica, sans-serif"><STRONG class=3DNH><STRONG=20
      class=3DBold>See Also</STRONG>:</STRONG></FONT> <A =
name=3D81125></A>
      <P class=3DNB><A class=3D"xlinkSRC REFRN001"=20
      =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10755/in=
itparams_part.htm#REFRN001"><EM=20
      class=3DItalic>Oracle Database Reference</EM></A> for complete =
information=20
      about each parameter</P></TD></TR></TBODY></TABLE></DIV><A =
name=3D51003></A>
<H2 class=3DH1><FONT color=3D#330099=20
face=3D"Arial, Helvetica, sans-serif">Understanding the Query=20
Optimizer</FONT></H2><A name=3D30271></A>
<P class=3DBP>The query optimizer determines which execution plan is =
most=20
efficient by considering available access paths and by factoring in =
information=20
based on statistics for the schema objects (tables or indexes) accessed =
by the=20
SQL statement. The query optimizer also considers hints, which are =
optimization=20
suggestions placed in a comment in the statement.</P><A =
name=3D39653></A>
<DIV align=3Dcenter>
<TABLE dir=3Dltr class=3DNoteAlso title=3D"This is a layout table to =
format a note"=20
border=3D0 cellSpacing=3D0 summary=3D"This is a layout table to format a =
note"=20
cellPadding=3D0 width=3D"80%">
  <TBODY>
  <TR class=3DNoteAlso>
    <TD class=3DNoteAlso><A name=3D39656></A><FONT=20
      face=3D"Arial, Helvetica, sans-serif"><STRONG class=3DNH>See=20
      Also:</STRONG></FONT> <A name=3D39657></A>
      <P class=3DNB><A=20
      =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/hi=
ntsref.htm#8326">Chapter&nbsp;17,=20
      "Optimizer Hints"</A> for detailed information on=20
hints</P></TD></TR></TBODY></TABLE></DIV><A name=3D27036></A>
<P class=3DBP>The query optimizer performs the following steps:</P>
<OL class=3DLN1 type=3D1>
  <LI class=3DLN1 type=3D1 value=3D1><A name=3D27037></A>The optimizer =
generates a set=20
  of potential plans for the SQL statement based on available access =
paths and=20
  hints.=20
  <LI class=3DLN1 type=3D1 value=3D2><A name=3D27038></A>The optimizer =
estimates the=20
  cost of each plan based on statistics in the data dictionary for the =
data=20
  distribution and storage characteristics of the tables, indexes, and=20
  partitions accessed by the statement.=20
  <P><A name=3D27039></A></P>
  <P class=3DBP1>The <STRONG class=3DGlossaryTerm>cost</STRONG> is an =
estimated=20
  value proportional to the expected resource use needed to execute the=20
  statement with a particular plan. The optimizer calculates the cost of =
access=20
  paths and join orders based on the estimated computer resources, which =

  includes I/O, CPU, and memory.</P><A name=3D27040></A>
  <P class=3DBP1>Serial plans with higher costs take more time to =
execute than=20
  those with smaller costs. When using a parallel plan, however, =
resource use is=20
  not directly related to elapsed time.</P>
  <LI class=3DLN1 type=3D1 value=3D3><A name=3D27041></A>The optimizer =
compares the=20
  costs of the plans and chooses the one with the lowest =
cost.</LI></OL><A=20
name=3D31112></A>
<H3 class=3DH2><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Components=20
of the Query Optimizer</FONT></H3><A name=3D31116></A>
<P class=3DBP>The query optimizer operations include:</P>
<UL class=3DLB1>
  <LI class=3DLB1 type=3Ddisc><A name=3D31120></A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#37241">Transforming=20
  Queries</A>=20
  <LI class=3DLB1 type=3Ddisc><A name=3D31124></A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#37300">Estimating</A>=20

  <LI class=3DLB1 type=3Ddisc><A name=3D31128></A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#37012">Generating=20
  Plans</A></LI></UL><A name=3D31132></A>
<P class=3DBP>Query optimizer components are illustrated in <A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#51246">Figure&nbsp;14-1</A>.</P><A=20
name=3D51246></A>
<H4 class=3DFT><FONT face=3D"Arial, Helvetica, sans-serif"><EM>Figure =
14-1 Query=20
Optimizer Components</EM></FONT></H4><A name=3D31138><IMG=20
alt=3D"Text description of pfgrf184.gif follows"=20
src=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/pfg=
rf184.gif"></A>=20

<P><A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/im=
g_text/pfgrf184.htm">Text=20
description of the illustration pfgrf184.gif</A></P><A name=3D37241></A>
<H4 class=3DH3><FONT color=3D#330099=20
face=3D"Arial, Helvetica, sans-serif">Transforming Queries</FONT></H4><A =

name=3D37738></A>
<P class=3DBP>The input to the query transformer is a parsed query, =
which is=20
represented by a set of query blocks. The query blocks are nested or=20
interrelated to each other. The form of the query determines how the =
query=20
blocks are interrelated to each other. The main objective of the query=20
transformer is to determine if it is advantageous to change the form of =
the=20
query so that it enables generation of a better query plan. Several =
different=20
query transformation techniques are employed by the query transformer,=20
including:</P>
<UL class=3DLB1>
  <LI class=3DLB1 type=3Ddisc><A name=3D55036></A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#37739">View=20
  Merging</A>=20
  <LI class=3DLB1 type=3Ddisc><A name=3D55041></A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#47932">Predicate=20
  Pushing</A>=20
  <LI class=3DLB1 type=3Ddisc><A name=3D55042></A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#37275">Subquery=20
  Unnesting</A>=20
  <LI class=3DLB1 type=3Ddisc><A name=3D55043></A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#37287">Query=20
  Rewrite with Materialized Views</A></LI></UL><A name=3D55037></A>
<P class=3DBP>Any combination of these transformations can be applied to =
a given=20
query.</P><A name=3D37739></A>
<H5 class=3DH4><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">View=20
Merging</FONT></H5><A name=3D37740></A>
<P class=3DBP>Each view referenced in a query is expanded by the parser =
into a=20
separate query block. The query block essentially represents the view=20
definition, and therefore the result of a view. One option for the =
optimizer is=20
to analyze the view query block separately and generate a view subplan. =
The=20
optimizer then processes the rest of the query by using the view subplan =
in the=20
generation of an overall query plan. This technique usually leads to a=20
suboptimal query plan, because the view is optimized separately from =
rest of the=20
query.</P><A name=3D37263></A>
<P class=3DBP>The query transformer then removes the potentially =
suboptimal plan=20
by merging the view query block into the query block that contains the =
view.=20
Most types of views are merged. When a view is merged, the query block=20
representing the view is merged into the containing query block. =
Generating a=20
subplan is no longer necessary, because the view query block is=20
eliminated.</P><A name=3D47932></A>
<H5 class=3DH4><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Predicate=20
Pushing</FONT></H5><A name=3D37270></A>
<P class=3DBP>For those views that are not merged, the query transformer =
can push=20
the relevant predicates from the containing query block into the view =
query=20
block. This technique improves the subplan of the nonmerged view, =
because the=20
pushed-in predicates can be used either to access indexes or to act as=20
filters.</P><A name=3D37275></A>
<H5 class=3DH4><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Subquery=20
Unnesting</FONT></H5><A name=3D37277></A>
<P class=3DBP>Often the performance of queries that contain subqueries =
can be=20
improved by unnesting the subqueries and converting them into joins. =
Most=20
subqueries are unnested by the query transformer. For those subqueries =
that are=20
not unnested, separate subplans are generated. To improve execution =
speed of the=20
overall query plan, the subplans are ordered in an efficient =
manner.</P><A=20
name=3D37287></A>
<H5 class=3DH4><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Query=20
Rewrite with Materialized Views</FONT></H5><A name=3D37289></A>
<P class=3DBP>A materialized view is like a query with a result that is=20
materialized and stored in a table. When a user query is found =
compatible with=20
the query associated with a materialized view, the user query can be =
rewritten=20
in terms of the materialized view. This technique improves the execution =
of the=20
user query, because most of the query result has been precomputed. The =
query=20
transformer looks for any materialized views that are compatible with =
the user=20
query and selects one or more materialized views to rewrite the user =
query. The=20
use of materialized views to rewrite a query is cost-based. That is, the =
query=20
is not rewritten if the plan generated without the materialized views =
has a=20
lower cost than the plan generated with the materialized views.</P><A=20
name=3D79381></A>
<H4 class=3DH3><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Peeking of=20
User-Defined Bind Variables</FONT></H4><A name=3D79382></A>
<P class=3DBP>The query optimizer peeks at the values of user-defined =
bind=20
variables on the first invocation of a cursor. This feature lets the =
optimizer=20
determine the selectivity of any <CODE>WHERE</CODE> clause condition, as =
well as=20
if literals have been used instead of bind variables. On subsequent =
invocations=20
of the cursor, no peeking takes place, and the cursor is shared, based =
on the=20
standard cursor-sharing criteria, even if subsequent invocations use =
different=20
bind values.</P><A name=3D79383></A>
<P class=3DBP>When bind variables are used in a statement, it is assumed =
that=20
cursor sharing is intended and that different invocations are supposed =
to use=20
the same execution plan. If different invocations of the cursor would=20
significantly benefit from different execution plans, then bind =
variables may=20
have been used inappropriately in the SQL statement. Bind peeking works =
for a=20
specific set of clients, not all clients.</P><A name=3D39979></A>
<DIV align=3Dcenter>
<TABLE dir=3Dltr class=3DNoteAlso title=3D"This is a layout table to =
format a note"=20
border=3D0 cellSpacing=3D0 summary=3D"This is a layout table to format a =
note"=20
cellPadding=3D0 width=3D"80%">
  <TBODY>
  <TR class=3DNoteAlso>
    <TD class=3DNoteAlso><A name=3D39982></A><FONT=20
      face=3D"Arial, Helvetica, sans-serif"><STRONG class=3DNH>See=20
      Also:</STRONG></FONT> <A name=3D50762></A>
      <P class=3DNB><A class=3D"olinkSRC DWHSG"=20
      =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10736/to=
c.htm"><EM=20
      class=3DItalic>Oracle Data Warehousing Guide</EM></A> for more =
information=20
      on query rewrite</P></TD></TR></TBODY></TABLE></DIV><A =
name=3D37300></A>
<H4 class=3DH3><FONT color=3D#330099=20
face=3D"Arial, Helvetica, sans-serif">Estimating</FONT></H4><A =
name=3D37302></A>
<P class=3DBP>The estimator generates three different types of =
measures:</P>
<UL class=3DLB1>
  <LI class=3DLB1 type=3Ddisc><A name=3D55102></A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#37309">Selectivity</A>=20

  <LI class=3DLB1 type=3Ddisc><A name=3D55107></A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#37340">Cardinality</A>=20

  <LI class=3DLB1 type=3Ddisc><A name=3D55108></A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#37379">Cost</A></LI></UL><A=20
name=3D55103></A>
<P class=3DBP>These measures are related to each other, and one is =
derived from=20
another. The end goal of the estimator is to estimate the overall cost =
of a=20
given plan. If statistics are available, then the estimator uses them to =
compute=20
the measures. The statistics improve the degree of accuracy of the=20
measures.</P><A name=3D37309></A>
<H5 class=3DH4><FONT color=3D#330099=20
face=3D"Arial, Helvetica, sans-serif">Selectivity</FONT></H5><A =
name=3D37792></A>
<P class=3DBP>The first measure, selectivity, represents a fraction of =
rows from a=20
row set. The row set can be a base table, a view, or the result of a =
join or a=20
<CODE>GROUP</CODE> <CODE>BY</CODE> operator. The selectivity is tied to =
a query=20
predicate, such as <CODE>last_name</CODE> =3D '<CODE>Smith</CODE>', or a =

combination of predicates, such as <CODE>last_name</CODE> =3D =
'<CODE>Smith</CODE>'=20
<CODE>AND</CODE> <CODE>job_type</CODE> =3D '<CODE>Clerk</CODE>'. A =
predicate acts=20
as a filter that filters a certain number of rows from a row set. =
Therefore, the=20
selectivity of a predicate indicates how many rows from a row set will =
pass the=20
predicate test. Selectivity lies in a value range from 0.0 to 1.0. A =
selectivity=20
of 0.0 means that no rows will be selected from a row set, and a =
selectivity of=20
1.0 means that all rows will be selected.</P><A name=3D82192></A>
<P class=3DBP>If no statistics are available then the optimizer either =
uses=20
dynamic sampling or an internal default value, depending on the value of =
the=20
<CODE>OPTIMIZER_DYNAMIC_SAMPLING</CODE> initialization parameter. =
Different=20
internal defaults are used, depending on the predicate type. For =
example, the=20
internal default for an equality predicate (<CODE>last_name</CODE> =3D=20
'<CODE>Smith</CODE>') is lower than the internal default for a range =
predicate=20
(<CODE>last_name</CODE> &gt; '<CODE>Smith</CODE>'). The estimator makes =
this=20
assumption because an equality predicate is expected to return a smaller =

fraction of rows than a range predicate. See <A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/st=
ats.htm#42992">"Estimating=20
Statistics with Dynamic Sampling"</A><A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/st=
ats.htm#42992"></A>.</P><A=20
name=3D82196></A>
<P class=3DBP>When statistics are available, the estimator uses them to =
estimate=20
selectivity. For example, for an equality predicate =
(<CODE>last_name</CODE> =3D=20
'<CODE>Smith</CODE>'), selectivity is set to the reciprocal of the =
number=20
<EM><CODE>n</CODE></EM> of distinct values of <CODE>last_name</CODE>, =
because=20
the query selects rows that all contain one out of =
<EM><CODE>n</CODE></EM>=20
distinct values. If a histogram is available on the =
<CODE>last_name</CODE>=20
column, then the estimator uses it instead of the number of distinct =
values. The=20
histogram captures the distribution of different values in a column, so =
it=20
yields better selectivity estimates. Having histograms on columns that =
contain=20
skewed data (in other words, values with large variations in number of=20
duplicates) greatly helps the query optimizer generate good selectivity=20
estimates.</P><A name=3D37340></A>
<H5 class=3DH4><FONT color=3D#330099=20
face=3D"Arial, Helvetica, sans-serif">Cardinality</FONT></H5><A =
name=3D37342></A>
<P class=3DBP>Cardinality represents the number of rows in a row set. =
Here, the=20
row set can be a base table, a view, or the result of a join or=20
<CODE>GROUP</CODE> <CODE>BY</CODE> operator.</P><A name=3D37379></A>
<H5 class=3DH4><FONT color=3D#330099=20
face=3D"Arial, Helvetica, sans-serif">Cost</FONT></H5><A =
name=3D37381></A>
<P class=3DBP>The cost represents units of work or resource used. The =
query=20
optimizer uses disk I/O, CPU usage, and memory usage as units of work. =
So, the=20
cost used by the query optimizer represents an estimate of the number of =
disk=20
I/Os and the amount of CPU and memory used in performing an operation. =
The=20
operation can be scanning a table, accessing rows from a table by using =
an=20
index, joining two tables together, or sorting a row set. The cost of a =
query=20
plan is the number of work units that are expected to be incurred when =
the query=20
is executed and its result produced.</P><A name=3D73318></A>
<P class=3DBP>The <STRONG class=3DBold>access</STRONG> <STRONG=20
class=3DBold>path</STRONG> determines the number of units of work =
required to get=20
data from a base table. The access path can be a table scan, a fast full =
index=20
scan, or an index scan. During table scan or fast full index scan, =
multiple=20
blocks are read from the disk in a single I/O operation. Therefore, the =
cost of=20
a table scan or a fast full index scan depends on the number of blocks =
to be=20
scanned and the multiblock read count value. The cost of an index scan =
depends=20
on the levels in the B-tree, the number of index leaf blocks to be =
scanned, and=20
the number of rows to be fetched using the rowid in the index keys. The =
cost of=20
fetching rows using rowids depends on the index clustering factor. See =
<A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#82434">"Assessing=20
I/O for Blocks, not Rows"</A><A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#82434"></A>.</P><A=20
name=3D37401></A>
<P class=3DBP>The <STRONG class=3DBold>join</STRONG> <STRONG=20
class=3DBold>cost</STRONG> represents the combination of the individual =
access=20
costs of the two row sets being joined, plus the cost of the join=20
operation.</P><A name=3D77973></A>
<DIV align=3Dcenter>
<TABLE dir=3Dltr class=3DNoteAlso title=3D"This is a layout table to =
format a note"=20
border=3D0 cellSpacing=3D0 summary=3D"This is a layout table to format a =
note"=20
cellPadding=3D0 width=3D"80%">
  <TBODY>
  <TR class=3DNoteAlso>
    <TD class=3DNoteAlso><A name=3D77965></A><FONT=20
      face=3D"Arial, Helvetica, sans-serif"><STRONG class=3DNH>See=20
      Also:</STRONG></FONT> <A name=3D77972></A>
      <P class=3DNB><A=20
      =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#39473">"Understanding=20
      Joins"</A><A=20
      =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#39473"></A>=20
      for more information on =
joins</P></TD></TR></TBODY></TABLE></DIV><A=20
name=3D37012></A>
<H4 class=3DH3><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Generating=20
Plans</FONT></H4><A name=3D37109></A>
<P class=3DBP>The main function of the plan generator is to try out =
different=20
possible plans for a given query and pick the one that has the lowest =
cost. Many=20
different plans are possible because of the various combinations of =
different=20
access paths, join methods, and join orders that can be used to access =
and=20
process data in different ways and produce the same result.</P><A=20
name=3D37115></A>
<P class=3DBP>A join order is the order in which different join items, =
such as=20
tables, are accessed and joined together. For example, in a join order =
of=20
<CODE>table1</CODE>, <CODE>table2</CODE>, and <CODE>table3</CODE>, table =

<CODE>table1</CODE> is accessed first. Next, <CODE>table2</CODE> is =
accessed,=20
and its data is joined to <CODE>table1</CODE> data to produce a join of=20
<CODE>table1</CODE> and <CODE>table2</CODE>. Finally, =
<CODE>table3</CODE> is=20
accessed, and its data is joined to the result of the join between=20
<CODE>table1</CODE> and <CODE>table2</CODE>.</P><A name=3D37121></A>
<P class=3DBP>The plan for a query is established by first generating =
subplans for=20
each of the nested subqueries and nonmerged views. Each nested subquery =
or=20
nonmerged view is represented by a separate query block. The query =
blocks are=20
optimized separately in a bottom-up order. That is, the innermost query =
block is=20
optimized first, and a subplan is generated for it. The outermost query =
block,=20
which represents the entire query, is optimized last.</P><A =
name=3D37128></A>
<P class=3DBP>The plan generator explores various plans for a query =
block by=20
trying out different access paths, join methods, and join orders. The =
number of=20
possible plans for a query block is proportional to the number of join =
items in=20
the <CODE>FROM</CODE> clause. This number rises exponentially with the =
number of=20
join items.</P><A name=3D37132></A>
<P class=3DBP>The plan generator uses an internal cutoff to reduce the =
number of=20
plans it tries when finding the one with the lowest cost. The cutoff is =
based on=20
the cost of the current best plan. If the current best cost is large, =
then the=20
plan generator tries harder (in other words, explores more alternate =
plans) to=20
find a better plan with lower cost. If the current best cost is small, =
then the=20
plan generator ends the search swiftly, because further cost improvement =
will=20
not be significant.</P><A name=3D37139></A>
<P class=3DBP>The cutoff works well if the plan generator starts with an =
initial=20
join order that produces a plan with cost close to optimal. Finding a =
good=20
initial join order is a difficult problem.</P><A name=3D73811></A>
<H3 class=3DH2><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Reading and=20
Understanding Execution Plans</FONT></H3><A name=3D73814></A>
<P class=3DBP>To execute a SQL statement, Oracle might need to perform =
many steps.=20
Each of these steps either retrieves rows of data physically from the =
database=20
or prepares them in some way for the user issuing the statement. The =
combination=20
of the steps Oracle uses to execute a statement is called an <STRONG=20
class=3DGlossaryTerm>execution plan</STRONG>. An execution plan includes =
an=20
<STRONG class=3DGlossaryTerm>access path</STRONG> for each table that =
the=20
statement accesses and an ordering of the tables (the <STRONG=20
class=3DGlossaryTerm>join order</STRONG>) with the appropriate <STRONG=20
class=3DGlossaryTerm>join method</STRONG>.</P><A name=3D73839></A>
<DIV align=3Dcenter>
<TABLE dir=3Dltr class=3DNoteAlso title=3D"This is a layout table to =
format a note"=20
border=3D0 cellSpacing=3D0 summary=3D"This is a layout table to format a =
note"=20
cellPadding=3D0 width=3D"80%">
  <TBODY>
  <TR class=3DNoteAlso>
    <TD class=3DNoteAlso><A name=3D73819></A><FONT=20
      face=3D"Arial, Helvetica, sans-serif"><STRONG class=3DNH><STRONG=20
      class=3DBold>See Also</STRONG>:</STRONG></FONT> <A =
name=3D73820></A>
      <UL class=3DNL>
        <LI class=3DNL type=3Ddisc><A name=3D73827></A><A=20
        =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#35891">"Understanding=20
        Access Paths for the Query Optimizer"</A><A=20
        =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#35891"></A>=20

        <LI class=3DNL type=3Ddisc><A name=3D73838></A><A=20
        =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/ex=
_plan.htm#19259">Chapter&nbsp;19,=20
        "Using EXPLAIN =
PLAN"</A></LI></UL></TD></TR></TBODY></TABLE></DIV><A=20
name=3D73843></A>
<H4 class=3DH3><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Overview of=20
EXPLAIN PLAN</FONT></H4><A name=3D73846></A>
<P class=3DBP>You can examine the execution plan chosen by the optimizer =
for a SQL=20
statement by using the EXPLAIN PLAN statement. When the statement is =
issued, the=20
optimizer chooses an execution plan and then inserts data describing the =
plan=20
into a database table. Simply issue the EXPLAIN PLAN statement and then =
query=20
the output table.</P><A name=3D73848></A>
<P class=3DBP>These are the basics of using the EXPLAIN PLAN =
statement:</P>
<UL class=3DLB1>
  <LI class=3DLB1 type=3Ddisc><A name=3D73849></A>Use the SQL script=20
  <CODE>UTLXPLAN</CODE>.<CODE>SQL</CODE> to create a sample output table =
called=20
  <CODE>PLAN_TABLE</CODE> in your schema. See <A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/ex=
_plan.htm#21502">"The=20
  PLAN_TABLE Output Table"</A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/ex=
_plan.htm#21502"></A>.=20

  <LI class=3DLB1 type=3Ddisc><A name=3D73856></A>Include the EXPLAIN =
PLAN FOR clause=20
  prior to the SQL statement. See <A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/ex=
_plan.htm#16889">"Running=20
  EXPLAIN PLAN"</A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/ex=
_plan.htm#16889"></A>.=20

  <LI class=3DLB1 type=3Ddisc><A name=3D73864></A>After issuing the =
EXPLAIN PLAN=20
  statement, use one of the scripts or package provided by Oracle to =
display the=20
  most recent plan table output. See <A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/ex=
_plan.htm#16939">"Displaying=20
  PLAN_TABLE Output"</A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/ex=
_plan.htm#16939"></A>.=20

  <LI class=3DLB1 type=3Ddisc><A name=3D73872></A>The execution order in =
EXPLAIN PLAN=20
  output begins with the line that is the furthest indented to the =
right. The=20
  next step is the parent of that line. If two lines are indented =
equally, then=20
  the top line is normally executed first.=20
  <P><A name=3D73880></A></P>
  <DIV align=3Dcenter>
  <TABLE dir=3Dltr class=3DNote title=3D"This is a layout table to =
format a note"=20
  border=3D0 cellSpacing=3D0 summary=3D"This is a layout table to format =
a note"=20
  cellPadding=3D0 width=3D"80%">
    <TBODY>
    <TR class=3DNote>
      <TD class=3DNote>
        <HR>
        <A name=3D73875></A><FONT face=3D"Arial, Helvetica, =
sans-serif"><STRONG=20
        class=3DNH>Notes:</STRONG></FONT> <A name=3D73876></A>
        <UL class=3DNL>
          <LI class=3DNL type=3Ddisc><A name=3D73877></A>The =
<CODE>EXPLAIN</CODE>=20
          <CODE>PLAN</CODE> output tables in this chapter were displayed =
with=20
          the <CODE>utlxpls.sql</CODE> script.=20
          <LI class=3DNL type=3Ddisc><A name=3D73879></A>The steps in =
the=20
          <CODE>EXPLAIN</CODE> <CODE>PLAN</CODE> output in this chapter =
may be=20
          different on your system. The optimizer may choose different =
execution=20
          plans, depending on database configurations.</LI></UL>
        <HR>
      </TD></TR></TBODY></TABLE></DIV></LI></UL><A name=3D73884></A>
<P class=3DBP><A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#73886">Example&nbsp;14-1</A>=20
uses EXPLAIN PLAN to examine a SQL statement that selects the=20
<CODE>employee_id</CODE>, <CODE>job_title</CODE>, <CODE>salary</CODE>, =
and=20
<CODE>department_name</CODE> for the employees whose IDs are less than=20
103.</P><A name=3D73886></A>
<H4 class=3DET><FONT face=3D"Arial, Helvetica, sans-serif"><EM>Example =
14-1 Using=20
EXPLAIN PLAN</EM></FONT></H4><PRE class=3DCE><A name=3D73887></A>EXPLAIN =
PLAN FOR
<A name=3D73888></A>SELECT e.employee_id, j.job_title, e.salary, =
d.department_name
<A name=3D73889></A>    FROM employees e, jobs j, departments d
<A name=3D73890></A>    WHERE  e.employee_id &lt; 103
<A name=3D73891></A>       AND e.job_id =3D j.job_id=20
<A name=3D73892></A>       AND e.department_id =3D d.department_id;
<A name=3D73893></A>
</PRE><A name=3D73897></A>
<P class=3DBP>The resulting output table in <A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#73899">Example&nbsp;14-2</A>=20
shows the execution plan chosen by the optimizer to execute the SQL =
statement in=20
the example:</P><A name=3D73899></A>
<H4 class=3DET><FONT face=3D"Arial, Helvetica, sans-serif"><EM>Example =
14-2 EXPLAIN=20
PLAN Output</EM></FONT></H4><PRE class=3DCEM><A =
name=3D73900></A>--------------------------------------------------------=
---------------------------
<A name=3D73901></A>| Id  | Operation                     |  Name        =
| Rows  | Bytes | Cost (%CPU)|
<A =
name=3D73902></A>--------------------------------------------------------=
---------------------------
<A name=3D73903></A>|   0 | SELECT STATEMENT              |              =
|     3 |   189 |    10  (10)|
<A name=3D73904></A>|   1 |  NESTED LOOPS                 |              =
|     3 |   189 |    10  (10)|
<A name=3D73905></A>|   2 |   NESTED LOOPS                |              =
|     3 |   141 |     7  (15)|
<A name=3D73906></A>|*  3 |    TABLE ACCESS FULL          | EMPLOYEES    =
|     3 |    60 |     4  (25)|
<A name=3D73907></A>|   4 |    TABLE ACCESS BY INDEX ROWID| JOBS         =
|    19 |   513 |     2  (50)|
<A name=3D73908></A>|*  5 |     INDEX UNIQUE SCAN         | JOB_ID_PK    =
|     1 |       |            |
<A name=3D73909></A>|   6 |   TABLE ACCESS BY INDEX ROWID | DEPARTMENTS  =
|    27 |   432 |     2  (50)|
<A name=3D73910></A>|*  7 |    INDEX UNIQUE SCAN          | DEPT_ID_PK   =
|     1 |       |            |
<A =
name=3D73911></A>--------------------------------------------------------=
---------------------------
<A name=3D73912></A>
<A name=3D73913></A>Predicate Information (identified by operation id):
<A name=3D73914></A>---------------------------------------------------
<A name=3D73915></A>   3 - filter("E"."EMPLOYEE_ID"&lt;103)
<A name=3D73916></A>   5 - access("E"."JOB_ID"=3D"J"."JOB_ID")
<A name=3D73917></A>   7 - =
access("E"."DEPARTMENT_ID"=3D"D"."DEPARTMENT_ID")
</PRE><A name=3D75195></A>
<H4 class=3DH3><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Steps in=20
the Execution Plan</FONT></H4><A name=3D73956></A>
<P class=3DBP>Each row in the output table corresponds to a single step =
in the=20
execution plan. Note that the step Ids with asterisks are listed in the=20
Predicate Information section.</P><A name=3D73972></A>
<DIV align=3Dcenter>
<TABLE dir=3Dltr class=3DNoteAlso title=3D"This is a layout table to =
format a note"=20
border=3D0 cellSpacing=3D0 summary=3D"This is a layout table to format a =
note"=20
cellPadding=3D0 width=3D"80%">
  <TBODY>
  <TR class=3DNoteAlso>
    <TD class=3DNoteAlso><A name=3D73959></A><FONT=20
      face=3D"Arial, Helvetica, sans-serif"><STRONG class=3DNH>See=20
      Also:</STRONG></FONT> <A name=3D73971></A>
      <P class=3DNB><A=20
      =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/ex=
_plan.htm#19259">Chapter&nbsp;19,=20
      "Using EXPLAIN PLAN"</A></P></TD></TR></TBODY></TABLE></DIV><A =
name=3D73975></A>
<P class=3DBP>Each step of the execution plan returns a set of rows that =
either is=20
used by the next step or, in the last step, is returned to the user or=20
application issuing the SQL statement. A set of rows returned by a step =
is=20
called a row set.</P><A name=3D73976></A>
<P class=3DBP>The numbering of the step Ids reflects the order in which =
they are=20
displayed in response to the <CODE>EXPLAIN</CODE> <CODE>PLAN</CODE> =
statement.=20
Each step of the execution plan either retrieves rows from the database =
or=20
accepts rows from one or more row sources as input.</P>
<UL class=3DLB1>
  <LI class=3DLB1 type=3Ddisc><A name=3D73982></A>The following steps in =
<A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#73899">Example&nbsp;14-2</A>=20
  physically retrieve data from an object in the database:=20
  <UL class=3DLB2>
    <LI class=3DLB2 type=3Ddisc><A name=3D73985></A>Step 3 reads all =
rows of the=20
    <CODE>employees</CODE> table.=20
    <LI class=3DLB2 type=3Ddisc><A name=3D74687></A>Step 5 looks up each =

    <CODE>job_id</CODE> in <CODE>JOB_ID_PK</CODE> index and finds the =
rowids of=20
    the associated rows in the <CODE>jobs</CODE> table.=20
    <LI class=3DLB2 type=3Ddisc><A name=3D74688></A>Step 4 retrieves the =
rows with=20
    rowids that were returned by Step 5 from the <CODE>jobs</CODE> =
table.=20
    <LI class=3DLB2 type=3Ddisc><A name=3D73986></A>Step 7 looks up each =

    <CODE>department_id</CODE> in <CODE>DEPT_ID_PK</CODE> index and =
finds the=20
    rowids of the associated rows in the <CODE>departments</CODE> table. =

    <LI class=3DLB2 type=3Ddisc><A name=3D73987></A>Step 6 retrieves the =
rows with=20
    rowids that were returned by Step 7 from the =
<CODE>departments</CODE>=20
    table.</LI></UL>
  <LI class=3DLB1 type=3Ddisc><A name=3D73991></A>The following steps in =
<A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#73899">Example&nbsp;14-2</A>=20
  operate on rows returned by the previous row source:=20
  <UL class=3DLB2>
    <LI class=3DLB2 type=3Ddisc><A name=3D73993></A>Step 2 performs the =
nested loop=20
    operation on <CODE>job_id</CODE> in the <CODE>jobs</CODE> and=20
    <CODE>employees</CODE> tables, accepting row sources from Steps 3 =
and 4,=20
    joining each row from Step 3 source to its corresponding row in Step =
4, and=20
    returning the resulting rows to Step 2.=20
    <LI class=3DLB2 type=3Ddisc><A name=3D73994></A>Step 1 performs the =
nested loop=20
    operation, accepting row sources from Step 2 and Step 6, joining =
each row=20
    from Step 2 source to its corresponding row in Step 6, and returning =
the=20
    resulting rows to Step 1.=20
    <P><A name=3D74020></A></P>
    <DIV align=3Dcenter>
    <TABLE dir=3Dltr class=3DNoteAlso=20
    title=3D"This is a layout table to format a note" border=3D0 =
cellSpacing=3D0=20
    summary=3D"This is a layout table to format a note" cellPadding=3D0=20
      width=3D"80%"><TBODY>
      <TR class=3DNoteAlso>
        <TD class=3DNoteAlso><A name=3D73998></A><FONT=20
          face=3D"Arial, Helvetica, sans-serif"><STRONG class=3DNH>See=20
          Also:</STRONG></FONT> <A name=3D73999></A>
          <UL class=3DNL>
            <LI class=3DNL type=3Ddisc><A name=3D74006></A><A=20
            =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#35891">"Understanding=20
            Access Paths for the Query Optimizer"</A><A=20
            =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#35891"></A>=20
            for more information on access paths=20
            <LI class=3DNL type=3Ddisc><A name=3D74019></A><A=20
            =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#39473">"Understanding=20
            Joins"</A><A=20
            =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#39473"></A>=20
            for more information on the methods by which Oracle joins =
row=20
            =
sources</LI></UL></TD></TR></TBODY></TABLE></DIV></LI></UL></LI></UL><A=20
name=3D35891></A>
<H2 class=3DH1><FONT color=3D#330099=20
face=3D"Arial, Helvetica, sans-serif">Understanding Access Paths for the =
Query=20
Optimizer</FONT></H2><A name=3D73132></A>
<P class=3DBP>Access paths are ways in which data is retrieved from the =
database.=20
In general, index access paths should be used for statements that =
retrieve a=20
small subset of table rows, while full scans are more efficient when =
accessing a=20
large portion of the table. Online transaction processing (OLTP) =
applications,=20
which consist of short-running SQL statements with high selectivity, =
often are=20
characterized by the use of index access paths. Decision support =
systems, on the=20
other hand, tend to use partitioned tables and perform full scans of the =

relevant partitions.</P><A name=3D73113></A>
<P class=3DBP>This section describes the data access paths that can be =
used to=20
locate and retrieve any row in any table.</P>
<UL class=3DLB1>
  <LI class=3DLB1 type=3Ddisc><A name=3D51065></A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#44852">Full=20
  Table Scans</A>=20
  <LI class=3DLB1 type=3Ddisc><A name=3D49340></A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#44964">Rowid=20
  Scans</A>=20
  <LI class=3DLB1 type=3Ddisc><A name=3D51563></A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#51691">Index=20
  Scans</A>=20
  <LI class=3DLB1 type=3Ddisc><A name=3D51069></A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#56090">Cluster=20
  Access</A>=20
  <LI class=3DLB1 type=3Ddisc><A name=3D51074></A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#48067">Hash=20
  Access</A>=20
  <LI class=3DLB1 type=3Ddisc><A name=3D73199></A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#79195">Sample=20
  Table Scans</A>=20
  <LI class=3DLB1 type=3Ddisc><A name=3D76733></A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#48061">How=20
  the Query Optimizer Chooses an Access Path</A></LI></UL><A =
name=3D44852></A>
<H3 class=3DH2><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Full Table=20
Scans</FONT></H3><A name=3D82214></A>
<P class=3DBP>This type of scan reads all rows from a table and filters =
out those=20
that do not meet the selection criteria. During a full table scan, all =
blocks in=20
the table that are under the high water mark are scanned. The high water =
mark=20
indicates the amount of used space, or space that had been formatted to =
receive=20
data. Each row is examined to determine whether it satisfies the =
statement's=20
<CODE>WHERE</CODE> clause.</P><A name=3D49401></A>
<P class=3DBP>When Oracle performs a full table scan, the blocks are =
read=20
sequentially. Because the blocks are adjacent, I/O calls larger than a =
single=20
block can be used to speed up the process. The size of the read calls =
range from=20
one block to the number of blocks indicated by the initialization =
parameter=20
<CODE>DB_FILE_MULTIBLOCK_READ_COUNT</CODE>. Using multiblock reads means =
a full=20
table scan can be performed very efficiently. Each block is read only=20
once.</P><A name=3D59622></A>
<P class=3DBP><A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#73899">Example&nbsp;14-2,=20
"EXPLAIN PLAN Output"</A><A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#73899"></A>=20
contains an example of a full table scan on the <CODE>employees</CODE>=20
table.</P><A name=3D74192></A>
<H4 class=3DH3><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Why a Full=20
Table Scan Is Faster for Accessing Large Amounts of Data</FONT></H4><A=20
name=3D74193></A>
<P class=3DBP>Full table scans are cheaper than index range scans when =
accessing a=20
large fraction of the blocks in a table. This is because full table =
scans can=20
use larger I/O calls, and making fewer large I/O calls is cheaper than =
making=20
many smaller calls.</P><A name=3D74203></A>
<H4 class=3DH3><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">When the=20
Optimizer Uses Full Table Scans</FONT></H4><A name=3D74204></A>
<P class=3DBP>The optimizer uses a full table scan in any of the =
following=20
cases:</P><A name=3D44889></A>
<H5 class=3DH4><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Lack of=20
Index</FONT></H5><A name=3D44890></A>
<P class=3DBP>If the query is unable to use any existing indexes, then =
it uses a=20
full table scan. For example, if there is a function used on the indexed =
column=20
in the query, the optimizer is unable to use the index and instead uses =
a full=20
table scan.</P><A name=3D77886></A>
<P class=3DBP>If you need to use the index for case-independent =
searches, then=20
either do not permit mixed-case data in the search columns or create a=20
function-based index, such as =
<CODE>UPPER</CODE>(<CODE>last_name</CODE>), on the=20
search column. See <A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/da=
ta_acc.htm#2185">"Using=20
Function-based Indexes for Performance"</A><A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/da=
ta_acc.htm#2185"></A>.</P><A=20
name=3D44892></A>
<H5 class=3DH4><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Large=20
Amount of Data</FONT></H5><A name=3D44893></A>
<P class=3DBP>If the optimizer thinks that the query will access most of =
the=20
blocks in the table, then it uses a full table scan, even though indexes =
might=20
be available.</P><A name=3D44895></A>
<H5 class=3DH4><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Small=20
Table</FONT></H5><A name=3D44896></A>
<P class=3DBP>If a table contains less than=20
<CODE>DB_FILE_MULTIBLOCK_READ_COUNT</CODE> blocks under the high water =
mark,=20
which can be read in a single I/O call, then a full table scan might be =
cheaper=20
than an index range scan, regardless of the fraction of tables being =
accessed or=20
indexes present.</P><A name=3D44901></A>
<H5 class=3DH4><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">High Degree=20
of Parallelism</FONT></H5><A name=3D44902></A>
<P class=3DBP>A high degree of parallelism for a table skews the =
optimizer toward=20
full table scans over range scans. Examine the <CODE>DEGREE</CODE> =
column in=20
<CODE>ALL_TABLES</CODE> for the table to determine the degree of=20
parallelism.</P><A name=3D44903></A>
<H4 class=3DH3><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Full Table=20
Scan Hints</FONT></H4><A name=3D44904></A>
<P class=3DBP>Use the hint <CODE>FULL(</CODE><EM><CODE>table</CODE></EM> =

<EM><CODE>alias</CODE></EM><CODE>)</CODE> if you want to force the use =
of a full=20
table scan. For more information on the <CODE>FULL</CODE> hint, see <A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/hi=
ntsref.htm#5078">"FULL"</A><A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/hi=
ntsref.htm#5078"></A>.</P><A=20
name=3D44951></A>
<H4 class=3DH3><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Parallel=20
Query Execution</FONT></H4><A name=3D44952></A>
<P class=3DBP>When a full table scan is required, response time can be =
improved by=20
using multiple parallel execution servers for scanning the table. =
Parallel=20
queries are used generally in low-concurrency data warehousing =
environments,=20
because of the potential resource usage.</P><A name=3D44962></A>
<DIV align=3Dcenter>
<TABLE dir=3Dltr class=3DNoteAlso title=3D"This is a layout table to =
format a note"=20
border=3D0 cellSpacing=3D0 summary=3D"This is a layout table to format a =
note"=20
cellPadding=3D0 width=3D"80%">
  <TBODY>
  <TR class=3DNoteAlso>
    <TD class=3DNoteAlso><A name=3D44955></A><FONT=20
      face=3D"Arial, Helvetica, sans-serif"><STRONG class=3DNH>See=20
      Also:</STRONG></FONT> <A name=3D44961></A>
      <P class=3DNB><A class=3D"olinkSRC DWHSG"=20
      =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10736/to=
c.htm"><EM=20
      class=3DItalic>Oracle Data Warehousing=20
Guide</EM></A></P></TD></TR></TBODY></TABLE></DIV><A name=3D44964></A>
<H3 class=3DH2><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Rowid=20
Scans</FONT></H3><A name=3D73080></A>
<P class=3DBP>The rowid of a row specifies the datafile and data block =
containing=20
the row and the location of the row in that block. Locating a row by =
specifying=20
its rowid is the fastest way to retrieve a single row, because the exact =

location of the row in the database is specified.</P><A =
name=3D48036></A>
<P class=3DBP>To access a table by rowid, Oracle first obtains the =
rowids of the=20
selected rows, either from the statement's <CODE>WHERE</CODE> clause or =
through=20
an index scan of one or more of the table's indexes. Oracle then locates =
each=20
selected row in the table based on its rowid.</P><A name=3D59653></A>
<P class=3DBP>In <A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#73899">Example&nbsp;14-2,=20
"EXPLAIN PLAN Output"</A><A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#73899"></A>,=20
an index scan is performed the <CODE>jobs</CODE> and =
<CODE>departments</CODE>=20
tables. The rowids retrieved are used to return the row data.</P><A=20
name=3D44981></A>
<H4 class=3DH3><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">When the=20
Optimizer Uses Rowids</FONT></H4><A name=3D44982></A>
<P class=3DBP>This is generally the second step after retrieving the =
rowid from an=20
index. The table access might be required for any columns in the =
statement not=20
present in the index.</P><A name=3D44983></A>
<P class=3DBP>Access by rowid does not need to follow every index scan. =
If the=20
index contains all the columns needed for the statement, then table =
access by=20
rowid might not occur.</P><A name=3D52359></A>
<DIV align=3Dcenter>
<TABLE dir=3Dltr class=3DNote title=3D"This is a layout table to format =
a note"=20
border=3D0 cellSpacing=3D0 summary=3D"This is a layout table to format a =
note"=20
cellPadding=3D0 width=3D"80%">
  <TBODY>
  <TR class=3DNote>
    <TD class=3DNote>
      <HR>
      <A name=3D52362></A><FONT face=3D"Arial, Helvetica, =
sans-serif"><STRONG=20
      class=3DNH>Note:</STRONG></FONT> <A name=3D52367></A>
      <P class=3DNB>Rowids are an internal Oracle representation of =
where data is=20
      stored. They can change between versions. Accessing data based on =
position=20
      is not recommended, because rows can move around due to row =
migration and=20
      chaining and also after export and import. Foreign keys should be =
based on=20
      primary keys. For more information on rowids, see <A=20
      class=3D"olinkSRC ADFNS"=20
      =
href=3D"http://download.oracle.com/docs/cd/B14117_01/appdev.101/b10795/to=
c.htm"><EM=20
      class=3DItalic>Oracle Database Application Developer's Guide -=20
      Fundamentals</EM></A>.</P>
      <HR>
    </TD></TR></TBODY></TABLE></DIV><A name=3D51691></A>
<H3 class=3DH2><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Index=20
Scans</FONT></H3><A name=3D73055></A>
<P class=3DBP>In this method, a row is retrieved by traversing the =
index, using=20
the indexed column values specified by the statement. An index scan =
retrieves=20
data from an index based on the value of one or more columns in the =
index. To=20
perform an index scan, Oracle searches the index for the indexed column =
values=20
accessed by the statement. If the statement accesses only columns of the =
index,=20
then Oracle reads the indexed column values directly from the index, =
rather than=20
from the table.</P><A name=3D51696></A>
<P class=3DBP>The index contains not only the indexed value, but also =
the rowids=20
of rows in the table having that value. Therefore, if the statement =
accesses=20
other columns in addition to the indexed columns, then Oracle can find =
the rows=20
in the table by using either a table access by rowid or a cluster =
scan.</P><A=20
name=3D51697></A>
<P class=3DBP>An index scan can be one of the following types:</P>
<UL class=3DLB1>
  <LI class=3DLB1 type=3Ddisc><A name=3D82474></A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#82434">Assessing=20
  I/O for Blocks, not Rows</A>=20
  <LI class=3DLB1 type=3Ddisc><A name=3D51790></A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#44987">Index=20
  Unique Scans</A>=20
  <LI class=3DLB1 type=3Ddisc><A name=3D52027></A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#45076">Index=20
  Range Scans</A>=20
  <LI class=3DLB1 type=3Ddisc><A name=3D52031></A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#45192">Index=20
  Range Scans Descending</A>=20
  <LI class=3DLB1 type=3Ddisc><A name=3D52035></A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#51553">Index=20
  Skip Scans</A>=20
  <LI class=3DLB1 type=3Ddisc><A name=3D52039></A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#51674">Full=20
  Scans</A>=20
  <LI class=3DLB1 type=3Ddisc><A name=3D52043></A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#51111">Fast=20
  Full Index Scans</A>=20
  <LI class=3DLB1 type=3Ddisc><A name=3D52048></A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#56069">Index=20
  Joins</A>=20
  <LI class=3DLB1 type=3Ddisc><A name=3D52053></A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#51818">Bitmap=20
  Indexes</A></LI></UL><A name=3D82434></A>
<H4 class=3DH3><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Assessing=20
I/O for Blocks, not Rows</FONT></H4><A name=3D82435></A>
<P class=3DBP>Oracle does I/O by blocks. Therefore, the optimizer's =
decision to=20
use full table scans is influenced by the percentage of blocks accessed, =
not=20
rows. This is called the index clustering factor. If blocks contain =
single rows,=20
then rows accessed and blocks accessed are the same.</P><A =
name=3D82436></A>
<P class=3DBP>However, most tables have multiple rows in each block. =
Consequently,=20
the desired number of rows could be clustered together in a few blocks, =
or they=20
could be spread out over a larger number of blocks.</P><A =
name=3D82437></A>
<P class=3DBP>Although the clustering factor is a property of the index, =
the=20
clustering factor actually relates to the spread of similar indexed =
column=20
values within data blocks in the table. A lower clustering factor =
indicates that=20
the individual rows are concentrated within fewer blocks in the table.=20
Conversely, a high clustering factor indicates that the individual rows =
are=20
scattered more randomly across blocks in the table. Therefore, a high =
clustering=20
factor means that it costs more to use a range scan to fetch rows by =
rowid,=20
because more blocks in the table need to be visited to return the data. =
<A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#82442">Example&nbsp;14-3</A>=20
shows how the clustering factor can affect cost.</P><A name=3D82442></A>
<H4 class=3DET><FONT face=3D"Arial, Helvetica, sans-serif"><EM>Example =
14-3 Effects=20
of Clustering Factor on Cost</EM></FONT></H4><A name=3D82443></A>
<P class=3DBP>Assume the following situation:</P>
<UL class=3DLB1>
  <LI class=3DLB1 type=3Ddisc><A name=3D82444></A>There is a table with =
9 rows.=20
  <LI class=3DLB1 type=3Ddisc><A name=3D82445></A>There is a nonunique =
index on=20
  <CODE>col1</CODE> for table.=20
  <LI class=3DLB1 type=3Ddisc><A name=3D82446></A>The <CODE>c1</CODE> =
column currently=20
  stores the values <CODE>A</CODE>, <CODE>B</CODE>, and <CODE>C</CODE>.=20
  <LI class=3DLB1 type=3Ddisc><A name=3D82447></A>The table only has =
three Oracle=20
  blocks.</LI></UL><A name=3D82448></A>
<P class=3DBP>Case 1: The index clustering factor is low for the rows as =
they are=20
arranged in the following diagram.</P><PRE class=3DCE><A =
name=3D82449></A>                 Block 1       Block 2        Block 3=20
<A name=3D82450></A>                 -------       -------        =
--------=20
<A name=3D82451></A>                 A  A  A       B  B  B        C  C  =
C=20
<A name=3D82452></A>
</PRE><A name=3D82453></A>
<P class=3DBP>This is because the rows that have the same indexed column =
values=20
for <CODE>c1</CODE> are located within the same physical blocks in the =
table.=20
The cost of using a range scan to return all of the rows that have the =
value=20
<CODE>A</CODE> is low, because only one block in the table needs to be=20
read.</P><A name=3D82454></A>
<P class=3DBP>Case 2: If the same rows in the table are rearranged so =
that the=20
index values are scattered across the table blocks (rather than =
colocated), then=20
the index clustering factor is higher.</P><PRE class=3DCE><A =
name=3D82455></A>                 Block 1       Block 2        Block 3=20
<A name=3D82456></A>                 -------       -------        =
--------
<A name=3D82457></A>                 A  B  C       A  B  C        A  B  =
C
<A name=3D82458></A>
</PRE><A name=3D82459></A>
<P class=3DBP>This is because all three blocks in the table must be read =
in order=20
to retrieve all rows with the value <CODE>A</CODE> in =
<CODE>col1</CODE>.</P><A=20
name=3D44987></A>
<H4 class=3DH3><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Index=20
Unique Scans</FONT></H4><A name=3D51799></A>
<P class=3DBP>This scan returns, at most, a single rowid. Oracle =
performs a unique=20
scan if a statement contains a <CODE>UNIQUE</CODE> or a =
<CODE>PRIMARY</CODE>=20
<CODE>KEY</CODE> constraint that guarantees that only a single row is=20
accessed.</P><A name=3D74352></A>
<P class=3DBP>In <A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#73899">Example&nbsp;14-2,=20
"EXPLAIN PLAN Output"</A><A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#73899"></A>,=20
an index scan is performed on the <CODE>jobs</CODE> and =
<CODE>departments</CODE>=20
tables, using the <CODE>job_id_pk</CODE> and <CODE>dept_id_pk</CODE> =
indexes=20
respectively.</P><A name=3D45012></A>
<H5 class=3DH4><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">When the=20
Optimizer Uses Index Unique Scans</FONT></H5><A name=3D45013></A>
<P class=3DBP>This access path is used when all columns of a unique =
(B-tree) index=20
or an index created as a result of a primary key constraint are =
specified with=20
equality conditions.</P><A name=3D45045></A>
<DIV align=3Dcenter>
<TABLE dir=3Dltr class=3DNoteAlso title=3D"This is a layout table to =
format a note"=20
border=3D0 cellSpacing=3D0 summary=3D"This is a layout table to format a =
note"=20
cellPadding=3D0 width=3D"80%">
  <TBODY>
  <TR class=3DNoteAlso>
    <TD class=3DNoteAlso><A name=3D45038></A><FONT=20
      face=3D"Arial, Helvetica, sans-serif"><STRONG class=3DNH>See=20
      Also:</STRONG></FONT> <A name=3D45044></A>
      <P class=3DNB><A class=3D"xlinkSRC CNCPT010"=20
      =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10743/sc=
hema.htm#CNCPT010"><EM=20
      class=3DItalic>Oracle Database Concepts</EM></A> for more details =
on index=20
      structures and for detailed information on how a B-tree is=20
  searched</P></TD></TR></TBODY></TABLE></DIV><A name=3D45072></A>
<H5 class=3DH4><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Index=20
Unique Scan Hints</FONT></H5><A name=3D45073></A>
<P class=3DBP>In general, you should not need to use a hint to do a =
unique scan.=20
There might be cases where the table is across a database link and being =

accessed from a local table, or where the table is small enough for the=20
optimizer to prefer a full table scan.</P><A name=3D45074></A>
<P class=3DBP>The hint <CODE>INDEX(</CODE><EM><CODE>alias=20
index_name</CODE></EM><CODE>)</CODE> specifies the index to use, but not =
an=20
access path (range scan or unique scan). For more information on the=20
<CODE>INDEX</CODE> hint, see <A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/hi=
ntsref.htm#5156">"INDEX"</A><A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/hi=
ntsref.htm#5156"></A>.</P><A=20
name=3D45076></A>
<H4 class=3DH3><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Index Range=20
Scans</FONT></H4><A name=3D45077></A>
<P class=3DBP>An index range scan is a common operation for accessing =
selective=20
data. It can be bounded (bounded on both sides) or unbounded (on one or =
both=20
sides). Data is returned in the ascending order of index columns. =
Multiple rows=20
with identical values are sorted in ascending order by rowid.</P><A=20
name=3D52067></A>
<P class=3DBP>If data must be sorted by order, then use the =
<CODE>ORDER</CODE>=20
<CODE>BY</CODE> clause, and do not rely on an index. If an index can be =
used to=20
satisfy an <CODE>ORDER</CODE> <CODE>BY</CODE> clause, then the optimizer =
uses=20
this option and avoids a sort.</P><A name=3D59703></A>
<P class=3DBP>In <A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#69272">Example&nbsp;14-4</A>,=20
the order has been imported from a legacy system, and you are querying =
the order=20
by the reference used in the legacy system. Assume this reference is the =

<CODE>order_date</CODE>.</P><A name=3D69272></A>
<H4 class=3DET><FONT face=3D"Arial, Helvetica, sans-serif"><EM>Example =
14-4 Index=20
Range Scan</EM></FONT></H4><PRE class=3DCE><A name=3D69267></A>SELECT =
order_status, order_id
<A name=3D65300></A>  FROM orders
<A name=3D65301></A> WHERE order_date =3D :b1;
<A name=3D64906></A>
</PRE><PRE class=3DCEM><A =
name=3D67341></A>--------------------------------------------------------=
-------------------------------
<A name=3D67342></A>| Id  | Operation                   |  Name          =
    | Rows  | Bytes | Cost (%CPU)|
<A =
name=3D67343></A>--------------------------------------------------------=
-------------------------------
<A name=3D67344></A>|   0 | SELECT STATEMENT            |                =
    |     1 |    20 |     3  (34)|
<A name=3D67345></A>|   1 |  TABLE ACCESS BY INDEX ROWID| ORDERS         =
    |     1 |    20 |     3  (34)|
<A name=3D67346></A>|*  2 |   INDEX RANGE SCAN          | =
ORD_ORDER_DATE_IX  |     1 |       |     2  (50)|
<A =
name=3D67347></A>--------------------------------------------------------=
-------------------------------
<A name=3D67348></A>
<A name=3D67349></A>Predicate Information (identified by operation id):
<A name=3D67350></A>---------------------------------------------------
<A name=3D67352></A>   2 - access("ORDERS"."ORDER_DATE"=3D:Z)
<A name=3D70857></A>
</PRE><A name=3D55574></A>
<P class=3DBP>This should be a highly selective query, and you should =
see the=20
query using the index on the column to retrieve the desired rows. The =
data=20
returned is sorted in ascending order by the rowids for the=20
<CODE>order_date</CODE>. Because the index column =
<CODE>order_date</CODE> is=20
identical for the selected rows here, the data is sorted by rowid.</P><A =

name=3D45089></A>
<H5 class=3DH4><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">When the=20
Optimizer Uses Index Range Scans</FONT></H5><A name=3D45090></A>
<P class=3DBP>The optimizer uses a range scan when it finds one or more =
leading=20
columns of an index specified in conditions, such as the following:</P>
<UL class=3DLB1>
  <LI class=3DLB1 type=3Ddisc><A name=3D45091></A><CODE>col1 =3D =
:b1</CODE>=20
  <LI class=3DLB1 type=3Ddisc><A name=3D55593></A><CODE>col1 &lt; =
:b1</CODE>=20
  <LI class=3DLB1 type=3Ddisc><A name=3D45093></A><CODE>col1 &gt; =
:b1</CODE>=20
  <LI class=3DLB1 type=3Ddisc><A name=3D45095></A><CODE>AND</CODE> =
combination of the=20
  preceding conditions for leading columns in the index=20
  <LI class=3DLB1 type=3Ddisc><A name=3D55642></A><CODE>col1 like =
'ASD%'</CODE>=20
  wild-card searches should not be in a leading position otherwise the =
condition=20
  <CODE>col1 like '%ASD'</CODE> does not result in a range =
scan.</LI></UL><A=20
name=3D45096></A>
<P class=3DBP>Range scans can use unique or nonunique indexes. Range =
scans avoid=20
sorting when index columns constitute the <CODE>ORDER</CODE>=20
<CODE>BY</CODE>/<CODE>GROUP</CODE> <CODE>BY</CODE> clause.</P><A =
name=3D45097></A>
<H5 class=3DH4><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Index Range=20
Scan Hints</FONT></H5><A name=3D45098></A>
<P class=3DBP>A hint might be required if the optimizer chooses some =
other index=20
or uses a full table scan. The hint=20
<CODE>INDEX(</CODE><EM><CODE>table_alias</CODE></EM>=20
<EM><CODE>index_name</CODE></EM><CODE>)</CODE> specifies the index to =
use. For=20
more information on the <CODE>INDEX</CODE> hint, see <A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/hi=
ntsref.htm#5156">"INDEX"</A><A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/hi=
ntsref.htm#5156"></A>.</P><A=20
name=3D45192></A>
<H4 class=3DH3><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Index Range=20
Scans Descending</FONT></H4><A name=3D45193></A>
<P class=3DBP>An index range scan descending is identical to an index =
range scan,=20
except that the data is returned in descending order. Indexes, by =
default, are=20
stored in ascending order. Usually, this scan is used when ordering data =
in a=20
descending order to return the most recent data first, or when seeking a =
value=20
less than a specified value.</P><A name=3D45218></A>
<H5 class=3DH4><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">When the=20
Optimizer Uses Index Range Scans Descending</FONT></H5><A =
name=3D45219></A>
<P class=3DBP>The optimizer uses index range scan descending when an =
order by=20
descending clause can be satisfied by an index.</P><A name=3D45220></A>
<H5 class=3DH4><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Index Range=20
Scan Descending Hints</FONT></H5><A name=3D45221></A>
<P class=3DBP>The hint =
<CODE>INDEX_DESC(</CODE><EM><CODE>table_alias</CODE></EM>=20
<EM><CODE>index_name</CODE></EM><CODE>)</CODE> is used for this access =
path. For=20
more information on the <CODE>INDEX_DESC</CODE> hint, see <A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/hi=
ntsref.htm#5259">"INDEX_DESC"</A><A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/hi=
ntsref.htm#5259"></A>.</P><A=20
name=3D51553></A>
<H4 class=3DH3><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Index Skip=20
Scans</FONT></H4><A name=3D51346></A>
<P class=3DBP>Index skip scans improve index scans by nonprefix columns. =
Often,=20
scanning index blocks is faster than scanning table data blocks.</P><A=20
name=3D56013></A>
<P class=3DBP>Skip scanning lets a composite index be split logically =
into smaller=20
subindexes. In skip scanning, the initial column of the composite index =
is not=20
specified in the query. In other words, it is skipped.</P><A =
name=3D56009></A>
<P class=3DBP>The number of logical subindexes is determined by the =
number of=20
distinct values in the initial column. Skip scanning is advantageous if =
there=20
are few distinct values in the leading column of the composite index and =
many=20
distinct values in the nonleading key of the index.</P><A =
name=3D55963></A>
<H4 class=3DET><FONT face=3D"Arial, Helvetica, sans-serif"><EM>Example =
14-5 Index=20
Skip Scan</EM></FONT></H4><A name=3D68954></A>
<P class=3DBP>Consider, for example, a table <CODE>employees</CODE>=20
(<CODE>sex</CODE>, <CODE>employee_id</CODE>, <CODE>address</CODE>) with =
a=20
composite index on (<CODE>sex</CODE>, <CODE>employee_id</CODE>). =
Splitting this=20
composite index would result in two logical subindexes, one for =
<CODE>M</CODE>=20
and one for <CODE>F</CODE>.</P><A name=3D52428></A>
<P class=3DBP>For this example, suppose you have the following index =
data:</P><PRE class=3DCE><A name=3D52430></A>('F',98)
<A name=3D52431></A>('F',100)
<A name=3D52432></A>('F',102)
<A name=3D52433></A>('F',104)
<A name=3D52434></A>('M',101)
<A name=3D52435></A>('M',103)
<A name=3D52436></A>('M',105)
<A name=3D52660></A>
</PRE><A name=3D52442></A>
<P class=3DBP>The index is split logically into the following two =
subindexes:</P>
<UL class=3DLB1>
  <LI class=3DLB1 type=3Ddisc><A name=3D52443></A>The first subindex has =
the keys with=20
  the value <CODE>F</CODE>.=20
  <LI class=3DLB1 type=3Ddisc><A name=3D52444></A>The second subindex =
has the keys=20
  with the value <CODE>M</CODE>.</LI></UL><A name=3D63517></A>
<H4 class=3DFT><FONT face=3D"Arial, Helvetica, sans-serif"><EM>Figure =
14-2 Index=20
Skip Scan Illustration</EM></FONT></H4><A name=3D62801><IMG=20
alt=3D"Text description of pfgrf197.gif follows"=20
src=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/pfg=
rf197.gif"></A>=20

<P><A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/im=
g_text/pfgrf197.htm">Text=20
description of the illustration pfgrf197.gif</A></P><A name=3D62790></A>
<P class=3DBP>The column <CODE>sex</CODE> is skipped in the following =
query:</P><PRE class=3DCE><A name=3D52561></A>SELECT *=20
<A name=3D52661></A>   FROM employees=20
<A name=3D52562></A>WHERE employee_id =3D 101;=20
<A name=3D52563></A>
</PRE><A name=3D52560></A>
<P class=3DBP>A complete scan of the index is not performed, but the =
subindex with=20
the value <CODE>F</CODE> is searched first, followed by a search of the =
subindex=20
with the value <CODE>M</CODE>.</P><A name=3D51674></A>
<H4 class=3DH3><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Full=20
Scans</FONT></H4><A name=3D51812></A>
<P class=3DBP>A full scan is available if a predicate references one of =
the=20
columns in the index. The predicate does not need to be an index driver. =
A full=20
scan is also available when there is no predicate, if both the following =

conditions are met:</P>
<UL class=3DLB1>
  <LI class=3DLB1 type=3Ddisc><A name=3D56044></A>All of the columns in =
the table=20
  referenced in the query are included in the index.=20
  <LI class=3DLB1 type=3Ddisc><A name=3D56049></A>At least one of the =
index columns is=20
  not null.</LI></UL><A name=3D56045></A>
<P class=3DBP>A full scan can be used to eliminate a sort operation, =
because the=20
data is ordered by the index key. It reads the blocks singly.</P><A=20
name=3D51111></A>
<H4 class=3DH3><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Fast Full=20
Index Scans</FONT></H4><A name=3D51954></A>
<P class=3DBP>Fast full index scans are an alternative to a full table =
scan when=20
the index contains all the columns that are needed for the query, and at =
least=20
one column in the index key has the <CODE>NOT</CODE> <CODE>NULL</CODE>=20
constraint. A fast full scan accesses the data in the index itself, =
without=20
accessing the table. It cannot be used to eliminate a sort operation, =
because=20
the data is not ordered by the index key. It reads the entire index =
using=20
multiblock reads, unlike a full index scan, and can be =
parallelized.</P><A=20
name=3D51952></A>
<P class=3DBP>You can specify it with the initialization parameter=20
<CODE>OPTIMIZER_FEATURES_ENABLE</CODE> or the <CODE>INDEX_FFS</CODE> =
hint. Fast=20
full index scans cannot be performed against bitmap indexes.</P><A=20
name=3D74450></A>
<P class=3DBP>A fast full scan is faster than a normal full index scan =
in that it=20
can use multiblock I/O and can be parallelized just like a table =
scan.</P><A=20
name=3D70987></A>
<H5 class=3DH4><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Fast Full=20
Index Scan Hints</FONT></H5><A name=3D74462></A>
<P class=3DBP>The fast full scan has a special index hint, =
<CODE>INDEX_FFS</CODE>,=20
which has the same format and arguments as the regular =
<CODE>INDEX</CODE> hint.=20
For more information on the <CODE>INDEX_FFS</CODE> hint, see <A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/hi=
ntsref.htm#5273">"INDEX_FFS"</A><A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/hi=
ntsref.htm#5273"></A>.</P><A=20
name=3D56069></A>
<H4 class=3DH3><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Index=20
Joins</FONT></H4><A name=3D56070></A>
<P class=3DBP>An index join is a hash join of several indexes that =
together=20
contain all the table columns that are referenced in the query. If an =
index join=20
is used, then no table access is needed, because all the relevant column =
values=20
can be retrieved from the indexes. An index join cannot be used to =
eliminate a=20
sort operation.</P><A name=3D69406></A>
<H5 class=3DH4><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Index Join=20
Hints</FONT></H5><A name=3D69407></A>
<P class=3DBP>You can specify an index join with the =
<CODE>INDEX_JOIN</CODE> hint.=20
For more information on the <CODE>INDEX_JOIN</CODE> hint, see <A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/hi=
ntsref.htm#5232">"INDEX_JOIN"</A><A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/hi=
ntsref.htm#5232"></A>.</P><A=20
name=3D51818></A>
<H4 class=3DH3><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Bitmap=20
Indexes</FONT></H4><A name=3D51927></A>
<P class=3DBP>A bitmap join uses a bitmap for key values and a mapping =
function=20
that converts each bit position to a rowid. Bitmaps can efficiently =
merge=20
indexes that correspond to several conditions in a <CODE>WHERE</CODE> =
clause,=20
using Boolean operations to resolve <CODE>AND</CODE> and <CODE>OR</CODE> =

conditions.</P><A name=3D57793></A>
<DIV align=3Dcenter>
<TABLE dir=3Dltr class=3DNote title=3D"This is a layout table to format =
a note"=20
border=3D0 cellSpacing=3D0 summary=3D"This is a layout table to format a =
note"=20
cellPadding=3D0 width=3D"80%">
  <TBODY>
  <TR class=3DNote>
    <TD class=3DNote>
      <HR>
      <A name=3D51940></A><FONT face=3D"Arial, Helvetica, =
sans-serif"><STRONG=20
      class=3DNH>Note:</STRONG></FONT> <A name=3D51941></A>
      <P class=3DNB>Bitmap indexes and bitmap join indexes are available =
only if=20
      you have purchased the Oracle Enterprise Edition.</P>
      <HR>
    </TD></TR></TBODY></TABLE></DIV><A name=3D51686></A>
<DIV align=3Dcenter>
<TABLE dir=3Dltr class=3DNoteAlso title=3D"This is a layout table to =
format a note"=20
border=3D0 cellSpacing=3D0 summary=3D"This is a layout table to format a =
note"=20
cellPadding=3D0 width=3D"80%">
  <TBODY>
  <TR class=3DNoteAlso>
    <TD class=3DNoteAlso><A name=3D56096></A><FONT=20
      face=3D"Arial, Helvetica, sans-serif"><STRONG class=3DNH>See=20
      Also:</STRONG></FONT> <A name=3D56097></A>
      <P class=3DNB><A class=3D"olinkSRC DWHSG"=20
      =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10736/to=
c.htm"><EM=20
      class=3DItalic>Oracle Data Warehousing Guide</EM></A> for more =
information=20
      about bitmap indexes</P></TD></TR></TBODY></TABLE></DIV><A =
name=3D56090></A>
<H3 class=3DH2><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Cluster=20
Access</FONT></H3><A name=3D48066></A>
<P class=3DBP>A cluster scan is used to retrieve, from a table stored in =
an=20
indexed cluster, all rows that have the same cluster key value. In an =
indexed=20
cluster, all rows with the same cluster key value are stored in the same =
data=20
block. To perform a cluster scan, Oracle first obtains the rowid of one =
of the=20
selected rows by scanning the cluster index. Oracle then locates the =
rows based=20
on this rowid.</P><A name=3D48067></A>
<H3 class=3DH2><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Hash=20
Access</FONT></H3><A name=3D48071></A>
<P class=3DBP>A hash scan is used to locate rows in a hash cluster, =
based on a=20
hash value. In a hash cluster, all rows with the same hash value are =
stored in=20
the same data block. To perform a hash scan, Oracle first obtains the =
hash value=20
by applying a hash function to a cluster key value specified by the =
statement.=20
Oracle then scans the data blocks containing rows with that hash =
value.</P><A=20
name=3D79195></A>
<H3 class=3DH2><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Sample=20
Table Scans</FONT></H3><A name=3D73153></A>
<P class=3DBP>A sample table scan retrieves a random sample of data from =
a simple=20
table or a complex <CODE>SELECT</CODE> statement, such as a statement =
involving=20
joins and views. This access path is used when a statement's =
<CODE>FROM</CODE>=20
clause includes the <CODE>SAMPLE</CODE> clause or the =
<CODE>SAMPLE</CODE>=20
<CODE>BLOCK</CODE> clause. To perform a sample table scan when sampling =
by rows=20
with the <CODE>SAMPLE</CODE> clause, Oracle reads a specified percentage =
of rows=20
in the table. To perform a sample table scan when sampling by blocks =
with the=20
<CODE>SAMPLE</CODE> <CODE>BLOCK</CODE> clause, Oracle reads a specified=20
percentage of table blocks.</P><A name=3D73166></A>
<P class=3DBP><A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#73168">Example&nbsp;14-6</A>=20
uses a sample table scan to access 1% of the <CODE>employees</CODE> =
table,=20
sampling by blocks.</P><A name=3D73168></A>
<H4 class=3DET><FONT face=3D"Arial, Helvetica, sans-serif"><EM>Example =
14-6 Sample=20
Table Scan</EM></FONT></H4><PRE class=3DCE><A name=3D73169></A>SELECT *=20
<A name=3D73170></A>    FROM employees SAMPLE BLOCK (1);=20
<A name=3D73171></A>
</PRE><A name=3D73173></A>
<P class=3DBP>The <CODE>EXPLAIN</CODE> <CODE>PLAN</CODE> output for this =
statement=20
might look like this:</P><PRE class=3DCE><A =
name=3D73176></A>--------------------------------------------------------=
-----------------
<A name=3D73177></A>| Id  | Operation            |  Name       | Rows  | =
Bytes | Cost (%CPU)|
<A =
name=3D73178></A>--------------------------------------------------------=
-----------------
<A name=3D73179></A>|   0 | SELECT STATEMENT     |             |     1 | =
   68 |     3  (34)|
<A name=3D73180></A>|   1 |  TABLE ACCESS SAMPLE | EMPLOYEES   |     1 | =
   68 |     3  (34)|
<A =
name=3D73181></A>--------------------------------------------------------=
-----------------
</PRE><A name=3D48061></A>
<H3 class=3DH2><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">How the=20
Query Optimizer Chooses an Access Path</FONT></H3><A name=3D36046></A>
<P class=3DBP>The query optimizer chooses an access path based on the =
following=20
factors:</P>
<UL class=3DLB1>
  <LI class=3DLB1 type=3Ddisc><A name=3D36047></A>The available access =
paths for the=20
  statement=20
  <LI class=3DLB1 type=3Ddisc><A name=3D82571></A>The estimated cost of =
executing the=20
  statement, using each access path or combination of paths</LI></UL><A=20
name=3D82573></A>
<P class=3DBP>To choose an access path, the optimizer first determines =
which=20
access paths are available by examining the conditions in the =
statement's=20
<CODE>WHERE</CODE> clause and its <CODE>FROM</CODE> clause. The =
optimizer then=20
generates a set of possible execution plans using available access paths =
and=20
estimates the cost of each plan, using the statistics for the index, =
columns,=20
and tables accessible to the statement. Finally, the optimizer chooses =
the=20
execution plan with the lowest estimated cost.</P><A name=3D73265></A>
<P class=3DBP>When choosing an access path, the query optimizer is =
influenced by=20
the following:</P>
<UL class=3DLB1>
  <LI class=3DLB1 type=3Ddisc><A name=3D73290></A>Optimizer Hints=20
  <P><A name=3D73291></A></P>
  <P class=3DBP1>The optimizer's choice among available access paths can =
be=20
  overridden with hints, except when the statement's <CODE>FROM</CODE> =
clause=20
  contains <CODE>SAMPLE</CODE> or <CODE>SAMPLE</CODE> =
<CODE>BLOCK</CODE>.</P><A=20
  name=3D73299></A>
  <DIV align=3Dcenter>
  <TABLE dir=3Dltr class=3DNoteAlso title=3D"This is a layout table to =
format a note"=20
  border=3D0 cellSpacing=3D0 summary=3D"This is a layout table to format =
a note"=20
  cellPadding=3D0 width=3D"80%">
    <TBODY>
    <TR class=3DNoteAlso>
      <TD class=3DNoteAlso><A name=3D73294></A><FONT=20
        face=3D"Arial, Helvetica, sans-serif"><STRONG class=3DNH>See=20
        Also:</STRONG></FONT> <A name=3D73298></A>
        <P class=3DNB><A=20
        =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/hi=
ntsref.htm#8326">Chapter&nbsp;17,=20
        "Optimizer Hints"</A> for information about hints in SQL=20
      statements</P></TD></TR></TBODY></TABLE></DIV>
  <LI class=3DLB1 type=3Ddisc><A name=3D73226></A>Old Statistics=20
  <P><A name=3D73227></A></P>
  <P class=3DBP1>For example, if a table has not been analyzed since it =
was=20
  created, and if it has less than =
<CODE>DB_FILE_MULTIBLOCK_READ_COUNT</CODE>=20
  blocks under the high water mark, then the optimizer thinks that the =
table is=20
  small and uses a full table scan. Review the =
<CODE>LAST_ANALYZED</CODE> and=20
  <CODE>BLOCKS</CODE> columns in the <CODE>ALL_TABLES</CODE> table to =
examine=20
  the statistics.</P></LI></UL><A name=3D39473></A>
<H2 class=3DH1><FONT color=3D#330099=20
face=3D"Arial, Helvetica, sans-serif">Understanding Joins</FONT></H2><A=20
name=3D80292></A>
<P class=3DBP>Joins are statements that retrieve data from more than one =
table. A=20
join is characterized by multiple tables in the <CODE>FROM</CODE> =
clause, and=20
the relationship between the tables is defined through the existence of =
a join=20
condition in the <CODE>WHERE</CODE> clause. In a join, one row set is =
called=20
inner, and the other is called outer.</P><A name=3D46643></A>
<P class=3DBP>This section discusses:</P>
<UL class=3DLB1>
  <LI class=3DLB1 type=3Ddisc><A name=3D76224></A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#36236">How=20
  the Query Optimizer Executes Join Statements</A>=20
  <LI class=3DLB1 type=3Ddisc><A name=3D76227></A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#76331">How=20
  the Query Optimizer Chooses Execution Plans for Joins</A>=20
  <LI class=3DLB1 type=3Ddisc><A name=3D76453></A>Join Methods:=20
  <UL class=3DLB2>
    <LI class=3DLB2 type=3Ddisc><A name=3D76457></A><A=20
    =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#49548">Nested=20
    Loop Joins</A>=20
    <LI class=3DLB2 type=3Ddisc><A name=3D76465></A><A=20
    =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#76074">Hash=20
    Joins</A>=20
    <LI class=3DLB2 type=3Ddisc><A name=3D76473></A><A=20
    =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#49759">Sort=20
    Merge Joins</A>=20
    <LI class=3DLB2 type=3Ddisc><A name=3D76481></A><A=20
    =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#45485">Cartesian=20
    Joins</A>=20
    <LI class=3DLB2 type=3Ddisc><A name=3D76485></A><A=20
    =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#50020">Outer=20
    Joins</A>=20
    <P><A name=3D50657></A></P>
    <DIV align=3Dcenter>
    <TABLE dir=3Dltr class=3DNoteAlso=20
    title=3D"This is a layout table to format a note" border=3D0 =
cellSpacing=3D0=20
    summary=3D"This is a layout table to format a note" cellPadding=3D0=20
      width=3D"80%"><TBODY>
      <TR class=3DNoteAlso>
        <TD class=3DNoteAlso><A name=3D50660></A><FONT=20
          face=3D"Arial, Helvetica, sans-serif"><STRONG class=3DNH>See=20
          Also:</STRONG></FONT> <A name=3D50661></A>
          <P class=3DNB><A class=3D"xlinkSRC SQLRF007"=20
          =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10759/qu=
eries.htm#SQLRF007"><EM=20
          class=3DItalic>Oracle Database SQL Reference</EM></A> for a =
discussion=20
          of =
joins</P></TD></TR></TBODY></TABLE></DIV></LI></UL></LI></UL><A=20
name=3D36236></A>
<H3 class=3DH2><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">How the=20
Query Optimizer Executes Join Statements</FONT></H3><A name=3D36240></A>
<P class=3DBP>To choose an execution plan for a join statement, the =
optimizer must=20
make these interrelated decisions:</P>
<UL class=3DLB1>
  <LI class=3DLB1 type=3Ddisc><A name=3D56263></A>Access Paths=20
  <P><A name=3D56265></A></P>
  <P class=3DBP1>As for simple statements, the optimizer must choose an =
access=20
  path to retrieve data from each table in the join statement.</P>
  <LI class=3DLB1 type=3Ddisc><A name=3D56279></A>Join Method=20
  <P><A name=3D56281></A></P>
  <P class=3DBP1>To join each pair of row sources, Oracle must perform a =
join=20
  operation. Join methods include nested loop, sort merge, cartesian, =
and hash=20
  joins.</P>
  <LI class=3DLB1 type=3Ddisc><A name=3D56287></A>Join Order=20
  <P><A name=3D56289></A></P>
  <P class=3DBP1>To execute a statement that joins more than two tables, =
Oracle=20
  joins two of the tables and then joins the resulting row source to the =
next=20
  table. This process is continued until all tables are joined into the=20
  result.</P><A name=3D56295></A>
  <DIV align=3Dcenter>
  <TABLE dir=3Dltr class=3DNoteAlso title=3D"This is a layout table to =
format a note"=20
  border=3D0 cellSpacing=3D0 summary=3D"This is a layout table to format =
a note"=20
  cellPadding=3D0 width=3D"80%">
    <TBODY>
    <TR class=3DNoteAlso>
      <TD class=3DNoteAlso><A name=3D56305></A><FONT=20
        face=3D"Arial, Helvetica, sans-serif"><STRONG class=3DNH>See=20
        Also:</STRONG></FONT> <A name=3D56307></A>
        <P class=3DNB><A=20
        =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#35891">"Understanding=20
        Access Paths for the Query Optimizer"</A><A=20
        =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#35891"></A></P></TD></TR></TBODY></TABLE></DIV></LI></UL><A=20
name=3D76331></A>
<H3 class=3DH2><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">How the=20
Query Optimizer Chooses Execution Plans for Joins</FONT></H3><A =
name=3D76332></A>
<P class=3DBP>The query optimizer considers the following when choosing =
an=20
execution plan:</P>
<UL class=3DLB1>
  <LI class=3DLB1 type=3Ddisc><A name=3D76333></A>The optimizer first =
determines=20
  whether joining two or more tables definitely results in a row source=20
  containing at most one row. The optimizer recognizes such situations =
based on=20
  <CODE>UNIQUE</CODE> and <CODE>PRIMARY</CODE> <CODE>KEY</CODE> =
constraints on=20
  the tables. If such a situation exists, then the optimizer places =
these tables=20
  first in the join order. The optimizer then optimizes the join of the=20
  remaining set of tables.=20
  <LI class=3DLB1 type=3Ddisc><A name=3D76334></A>For join statements =
with outer join=20
  conditions, the table with the outer join operator must come after the =
other=20
  table in the condition in the join order. The optimizer does not =
consider join=20
  orders that violate this rule. Similarly, when a subquery has been =
converted=20
  into an antijoin or semijoin, the tables from the subquery must come =
after=20
  those tables in the outer query block to which they were connected or=20
  correlated. However, hash antijoins and semijoins are able to override =
this=20
  ordering condition in certain circumstances.</LI></UL><A =
name=3D76336></A>
<P class=3DBP>With the query optimizer, the optimizer generates a set of =
execution=20
plans, according to possible join orders, join methods, and available =
access=20
paths. The optimizer then estimates the cost of each plan and chooses =
the one=20
with the lowest cost. The optimizer estimates costs in the following =
ways:</P>
<UL class=3DLB1>
  <LI class=3DLB1 type=3Ddisc><A name=3D76339></A>The cost of a nested =
loops operation=20
  is based on the cost of reading each selected row of the outer table =
and each=20
  of its matching rows of the inner table into memory. The optimizer =
estimates=20
  these costs using the statistics in the data dictionary.=20
  <LI class=3DLB1 type=3Ddisc><A name=3D76342></A>The cost of a sort =
merge join is=20
  based largely on the cost of reading all the sources into memory and =
sorting=20
  them.=20
  <LI class=3DLB1 type=3Ddisc><A name=3D78740></A>The cost of a hash =
join is based=20
  largely on the cost of building a hash table on one of the input sides =
to the=20
  join and using the rows from the other of the join to probe =
it.</LI></UL><A=20
name=3D76343></A>
<P class=3DBP>The optimizer also considers other factors when =
determining the cost=20
of each operation. For example:</P>
<UL class=3DLB1>
  <LI class=3DLB1 type=3Ddisc><A name=3D76344></A>A smaller sort area =
size is likely=20
  to increase the cost for a sort merge join because sorting takes more =
CPU time=20
  and I/O in a smaller sort area. See <A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/me=
mory.htm#49321">"PGA=20
  Memory Management"</A><A=20
  =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/me=
mory.htm#49321"></A>=20
  for information on sizing of SQL work areas.=20
  <LI class=3DLB1 type=3Ddisc><A name=3D76352></A>A larger multiblock =
read count is=20
  likely to decrease the cost for a sort merge join in relation to a =
nested loop=20
  join. If a large number of sequential blocks can be read from disk in =
a single=20
  I/O, then an index on the inner table for the nested loop join is less =
likely=20
  to improve performance over a full table scan. The multiblock read =
count is=20
  specified by the initialization parameter=20
  <CODE>DB_FILE_MULTIBLOCK_READ_COUNT</CODE>.</LI></UL><A =
name=3D76357></A>
<P class=3DBP>With the query optimizer, the optimizer's choice of join =
orders can=20
be overridden with the <CODE>ORDERED</CODE> hint. If the =
<CODE>ORDERED</CODE>=20
hint specifies a join order that violates the rule for an outer join, =
then the=20
optimizer ignores the hint and chooses the order. Also, you can override =
the=20
optimizer's choice of join method with hints.</P><A name=3D78643></A>
<DIV align=3Dcenter>
<TABLE dir=3Dltr class=3DNoteAlso title=3D"This is a layout table to =
format a note"=20
border=3D0 cellSpacing=3D0 summary=3D"This is a layout table to format a =
note"=20
cellPadding=3D0 width=3D"80%">
  <TBODY>
  <TR class=3DNoteAlso>
    <TD class=3DNoteAlso><A name=3D76360></A><FONT=20
      face=3D"Arial, Helvetica, sans-serif"><STRONG class=3DNH>See=20
      Also:</STRONG></FONT> <A name=3D76364></A>
      <P class=3DNB><A=20
      =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/hi=
ntsref.htm#8326">Chapter&nbsp;17,=20
      "Optimizer Hints"</A> for more information about optimizer=20
  hints</P></TD></TR></TBODY></TABLE></DIV><A name=3D49548></A>
<H3 class=3DH2><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Nested Loop=20
Joins</FONT></H3><A name=3D49549></A>
<P class=3DBP>Nested loop joins are useful when small subsets of data =
are being=20
joined and if the join condition is an efficient way of accessing the =
second=20
table.</P><A name=3D49550></A>
<P class=3DBP>It is very important to ensure that the inner table is =
driven from=20
(dependent on) the outer table. If the inner table's access path is =
independent=20
of the outer table, then the same rows are retrieved for every iteration =
of the=20
outer loop, degrading performance considerably. In such cases, hash =
joins=20
joining the two independent row sources perform better.</P><A =
name=3D56449></A>
<DIV align=3Dcenter>
<TABLE dir=3Dltr class=3DNoteAlso title=3D"This is a layout table to =
format a note"=20
border=3D0 cellSpacing=3D0 summary=3D"This is a layout table to format a =
note"=20
cellPadding=3D0 width=3D"80%">
  <TBODY>
  <TR class=3DNoteAlso>
    <TD class=3DNoteAlso><A name=3D56441></A><FONT=20
      face=3D"Arial, Helvetica, sans-serif"><STRONG class=3DNH>See=20
      Also:</STRONG></FONT> <A name=3D56448></A>
      <P class=3DNB><A=20
      =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#45485">"Cartesian=20
      Joins"</A><A=20
      =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#45485"></A></P></TD></TR></TBODY></TABLE></DIV><A=20
name=3D56450></A>
<P class=3DBP>A nested loop join involves the following steps:</P>
<OL class=3DLN1 type=3D1>
  <LI class=3DLN1 type=3D1 value=3D1><A name=3D56451></A>The optimizer =
determines the=20
  driving table and designates it as the outer table.=20
  <LI class=3DLN1 type=3D1 value=3D2><A name=3D49553></A>The other table =
is designated=20
  as the inner table.=20
  <LI class=3DLN1 type=3D1 value=3D3><A name=3D49554></A>For every row =
in the outer=20
  table, Oracle accesses all the rows in the inner table. The outer loop =
is for=20
  every row in outer table and the inner loop is for every row in the =
inner=20
  table. The outer loop appears before the inner loop in the execution =
plan, as=20
  follows: <PRE class=3DCE1><A name=3D49559></A>NESTED LOOPS=20
<A name=3D49560></A><EM class=3DItalic>outer_loop</EM>=20
<A name=3D49561></A><EM class=3DItalic>inner_loop</EM>=20
</PRE></LI></OL><A name=3D75285></A>
<H4 class=3DH3><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Nested Loop=20
Example</FONT></H4><A name=3D75428></A>
<P class=3DBP>This section discusses the outer and inner loops for one =
of the=20
nested loops in the query in <A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#73886">Example&nbsp;14-1</A><A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#73886"></A>.</P><PRE class=3DCEM><A name=3D75472></A>...
<A name=3D75601></A>|   2 |   NESTED LOOPS                |              =
|     3 |   141 |     7  (15)|
<A name=3D75473></A>|*  3 |    TABLE ACCESS FULL          | EMPLOYEES    =
|     3 |    60 |     4  (25)|
<A name=3D75474></A>|   4 |    TABLE ACCESS BY INDEX ROWID| JOBS         =
|    19 |   513 |     2  (50)|
<A name=3D75475></A>|*  5 |     INDEX UNIQUE SCAN         | JOB_ID_PK    =
|     1 |       |            |
<A name=3D75602></A>...
</PRE><A name=3D76769></A>
<P class=3DBP>In this example, the outer loop retrieves all the rows of =
the=20
<CODE>employees</CODE> table. For every employee retrieved by the outer =
loop,=20
the inner loop retrieves the associated row in the <CODE>jobs</CODE>=20
table.</P><A name=3D75433></A>
<H5 class=3DH4><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Outer=20
loop</FONT></H5><A name=3D75434></A>
<P class=3DBP>In the execution plan in <A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#73899">Example&nbsp;14-2</A><A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#73899"></A>,=20
the outer loop and the equivalent statement are as follows:</P><PRE =
class=3DCE><A name=3D75435></A>3 |    TABLE ACCESS FULL        | =
EMPLOYEES
<A name=3D75436></A>
<A name=3D76745></A>SELECT e.employee_id, e.salary
<A name=3D75438></A>  FROM employees e
<A name=3D75439></A> WHERE e.employee_id &lt; 103
</PRE><A name=3D75440></A>
<H5 class=3DH4><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Inner=20
loop</FONT></H5><A name=3D75441></A>
<P class=3DBP>The execution plan in <A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#73899">Example&nbsp;14-2</A><A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#73899"></A>=20
shows the inner loop being iterated for every row fetched from the outer =
loop,=20
as follows:</P><PRE class=3DCE><A name=3D75542></A>4 |    TABLE ACCESS =
BY INDEX ROWID| JOBS
<A name=3D75442></A>5 |     INDEX UNIQUE SCAN         | JOB_ID_PK
<A name=3D75445></A>
<A name=3D76750></A>SELECT j.job_title
<A name=3D75521></A> FROM jobs j
<A name=3D75522></A>    WHERE e.job_id =3D j.job_id=20
</PRE><A name=3D75573></A>
<H4 class=3DH3><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">When the=20
Optimizer Uses Nested Loop Joins</FONT></H4><A name=3D49597></A>
<P class=3DBP>The optimizer uses nested loop joins when joining small =
number of=20
rows, with a good driving condition between the two tables. You drive =
from the=20
outer loop to the inner loop, so the order of tables in the execution =
plan is=20
important.</P><A name=3D49598></A>
<P class=3DBP>The outer loop is the driving row source. It produces a =
set of rows=20
for driving the join condition. The row source can be a table accessed =
using an=20
index scan or a full table scan. Also, the rows can be produced from any =
other=20
operation. For example, the output from a nested loop join can be used =
as a row=20
source for another nested loop join.</P><A name=3D49599></A>
<P class=3DBP>The inner loop is iterated for every row returned from the =
outer=20
loop, ideally by an index scan. If the access path for the inner loop is =
not=20
dependent on the outer loop, then you can end up with a Cartesian =
product; for=20
every iteration of the outer loop, the inner loop produces the same set =
of rows.=20
Therefore, you should use other join methods when two independent row =
sources=20
are joined together.</P><A name=3D49600></A>
<H4 class=3DH3><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Nested Loop=20
Join Hints</FONT></H4><A name=3D49720></A>
<P class=3DBP>If the optimizer is choosing to use some other join =
method, you can=20
use the <CODE>USE_NL</CODE>(<CODE>table1 table2</CODE>) hint, where=20
<CODE>table1</CODE> and <CODE>table2</CODE> are the aliases of the =
tables being=20
joined.</P><A name=3D69519></A>
<P class=3DBP>For some SQL examples, the data is small enough for the =
optimizer to=20
prefer full table scans and use hash joins. This is the case for the SQL =
example=20
shown in <A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#49941">Example&nbsp;14-7,=20
"Hash Joins"</A><A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#49941"></A>.=20
However, you can add a <CODE>USE_NL</CODE> hint that changes the join =
method to=20
nested loop. For more information on the <CODE>USE_NL</CODE> hint, see =
<A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/hi=
ntsref.htm#5637">"USE_NL"</A><A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/hi=
ntsref.htm#5637"></A>.</P><A=20
name=3D49643></A>
<H4 class=3DH3><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Nesting=20
Nested Loops</FONT></H4><A name=3D49644></A>
<P class=3DBP>The outer loop of a nested loop can be a nested loop =
itself. You can=20
nest two or more outer loops together to join as many tables as needed. =
Each=20
loop is a data access method, as follows:</P><PRE class=3DCE><A =
name=3D53144></A>SELECT STATEMENT
<A name=3D49646></A> NESTED LOOP 3
<A name=3D49647></A>  NESTED LOOP 2          (OUTER LOOP 3.1)
<A name=3D49648></A>   NESTED LOOP 1         (OUTER LOOP 2.1)
<A name=3D49649></A>    OUTER LOOP 1.1     - #1
<A name=3D49650></A>    INNER LOOP 1.2     - #2
<A name=3D49651></A>   INNER LOOP 2.2      - #3
<A name=3D49652></A>  INNER LOOP 3.2       - #4
</PRE><A name=3D76074></A>
<H3 class=3DH2><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Hash=20
Joins</FONT></H3><A name=3D76075></A>
<P class=3DBP>Hash joins are used for joining large data sets. The =
optimizer uses=20
the smaller of two tables or data sources to build a hash table on the =
join key=20
in memory. It then scans the larger table, probing the hash table to =
find the=20
joined rows.</P><A name=3D49922></A>
<P class=3DBP>This method is best used when the smaller table fits in =
available=20
memory. The cost is then limited to a single read pass over the data for =
the two=20
tables.</P><A name=3D49936></A>
<H4 class=3DH3><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">When the=20
Optimizer Uses Hash Joins</FONT></H4><A name=3D49937></A>
<P class=3DBP>The optimizer uses a hash join to join two tables if they =
are joined=20
using an equijoin and if either of the following conditions are =
true:</P>
<UL class=3DLB1>
  <LI class=3DLB1 type=3Ddisc><A name=3D49938></A>A large amount of data =
needs to be=20
  joined.=20
  <LI class=3DLB1 type=3Ddisc><A name=3D49939></A>A large fraction of a =
small table=20
  needs to be joined.</LI></UL><A name=3D59494></A>
<P class=3DBP>In <A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#49941">Example&nbsp;14-7</A>,=20
the table <CODE>orders</CODE> is used to build the hash table, and=20
<CODE>order_items</CODE> is the larger table, which is scanned =
later.</P><A=20
name=3D49941></A>
<H4 class=3DET><FONT face=3D"Arial, Helvetica, sans-serif"><EM>Example =
14-7 Hash=20
Joins</EM></FONT></H4><PRE class=3DCE><A name=3D49942></A>SELECT =
o.customer_id, l.unit_price * l.quantity
<A name=3D49943></A>  FROM orders o ,order_items l
<A name=3D49944></A> WHERE l.order_id =3D o.order_id;
<A name=3D49945></A>
</PRE><PRE class=3DCEM><A =
name=3D67959></A>--------------------------------------------------------=
------------------
<A name=3D67960></A>| Id  | Operation            |  Name        | Rows  =
| Bytes | Cost (%CPU)|
<A =
name=3D67961></A>--------------------------------------------------------=
------------------
<A name=3D67962></A>|   0 | SELECT STATEMENT     |              |   665 =
| 13300 |     8  (25)|
<A name=3D67963></A>|*  1 |  HASH JOIN           |              |   665 =
| 13300 |     8  (25)|
<A name=3D67964></A>|   2 |   TABLE ACCESS FULL  | ORDERS       |   105 =
|   840 |     4  (25)|
<A name=3D67965></A>|   3 |   TABLE ACCESS FULL  | ORDER_ITEMS  |   665 =
|  7980 |     4  (25)|
<A =
name=3D67966></A>--------------------------------------------------------=
------------------
<A name=3D67967></A>
<A name=3D67968></A>Predicate Information (identified by operation id):
<A name=3D67969></A>---------------------------------------------------
<A name=3D67971></A>   1 - access("L"."ORDER_ID"=3D"O"."ORDER_ID")
</PRE><A name=3D49954></A>
<H4 class=3DH3><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Hash Join=20
Hints</FONT></H4><A name=3D49955></A>
<P class=3DBP>Apply the <CODE>USE_HASH</CODE> hint to advise the =
optimizer to use=20
a hash join when joining two tables together. See <A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/me=
mory.htm#49321">"PGA=20
Memory Management"</A><A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/me=
mory.htm#49321"></A>=20
for information on sizing of SQL work areas. For more information on the =

<CODE>USE_HASH</CODE> hint, see <A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/hi=
ntsref.htm#5683">"USE_HASH"</A><A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/hi=
ntsref.htm#5683"></A>.</P><A=20
name=3D49759></A>
<H3 class=3DH2><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Sort Merge=20
Joins</FONT></H3><A name=3D49760></A>
<P class=3DBP>Sort merge joins can be used to join rows from two =
independent=20
sources. Hash joins generally perform better than sort merge joins. On =
the other=20
hand, sort merge joins can perform better than hash joins if both of the =

following conditions exist:</P>
<UL class=3DLB1>
  <LI class=3DLB1 type=3Ddisc><A name=3D57204></A>The row sources are =
sorted already.=20
  <LI class=3DLB1 type=3Ddisc><A name=3D57213></A>A sort operation does =
not have to be=20
  done.</LI></UL><A name=3D57205></A>
<P class=3DBP>However, if a sort merge join involves choosing a slower =
access=20
method (an index scan as opposed to a full table scan), then the benefit =
of=20
using a sort merge might be lost.</P><A name=3D49762></A>
<P class=3DBP>Sort merge joins are useful when the join condition =
between two=20
tables is an inequality condition (but not a nonequality) like &lt;, =
&lt;=3D,=20
&gt;, or &gt;=3D. Sort merge joins perform better than nested loop joins =
for large=20
data sets. You cannot use hash joins unless there is an equality=20
condition.</P><A name=3D49764></A>
<P class=3DBP>In a merge join, there is no concept of a driving table. =
The join=20
consists of two steps:</P>
<OL class=3DLN1 type=3D1>
  <LI class=3DLN1 type=3D1 value=3D1><A name=3D49765></A>Sort join =
operation: Both the=20
  inputs are sorted on the join key.=20
  <LI class=3DLN1 type=3D1 value=3D2><A name=3D49766></A>Merge join =
operation: The=20
  sorted lists are merged together.</LI></OL><A name=3D49767></A>
<P class=3DBP>If the input is already sorted by the join column, then a =
sort join=20
operation is not performed for that row source.</P><A name=3D71718></A>
<H4 class=3DH3><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">When the=20
Optimizer Uses Sort Merge Joins</FONT></H4><A name=3D71719></A>
<P class=3DBP>The optimizer can choose a sort merge join over a hash =
join for=20
joining large amounts of data if any of the following conditions are =
true:</P>
<UL class=3DLB1>
  <LI class=3DLB1 type=3Ddisc><A name=3D71720></A>The join condition =
between two=20
  tables is not an equi-join.=20
  <LI class=3DLB1 type=3Ddisc><A name=3D71723></A>Because of sorts =
already required by=20
  other operations, the optimizer finds it is cheaper to use a sort =
merge than a=20
  hash join.</LI></UL><A name=3D69690></A>
<H4 class=3DH3><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Sort Merge=20
Join Hints</FONT></H4><A name=3D69691></A>
<P class=3DBP>To advise the optimizer to use a sort merge join, apply =
the=20
<CODE>USE_MERGE</CODE> hint. You might also need to give hints to force =
an=20
access path.</P><A name=3D69726></A>
<P class=3DBP>There are situations where it is better to override the =
optimize=20
with the <CODE>USE_MERGE</CODE> hint. For example, the optimizer can =
choose a=20
full scan on a table and avoid a sort operation in a query. However, =
there is an=20
increased cost because a large table is accessed through an index and =
single=20
block reads, as opposed to faster access through a full table =
scan.</P><A=20
name=3D74593></A>
<P class=3DBP>For more information on the <CODE>USE_MERGE</CODE> hint, =
see <A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/hi=
ntsref.htm#5664">"USE_MERGE"</A><A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/hi=
ntsref.htm#5664"></A>.</P><A=20
name=3D45485></A>
<H3 class=3DH2><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Cartesian=20
Joins</FONT></H3><A name=3D71856></A>
<P class=3DBP>A Cartesian join is used when one or more of the tables =
does not=20
have any join conditions to any other tables in the statement. The =
optimizer=20
joins every row from one data source with every row from the other data =
source,=20
creating the Cartesian product of the two sets.</P><A name=3D71866></A>
<H4 class=3DH3><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">When the=20
Optimizer Uses Cartesian Joins</FONT></H4><A name=3D75702></A>
<P class=3DBP>The optimizer uses Cartesian joins when it is asked to =
join two=20
tables with no join conditions. In some cases, a common filter condition =
between=20
the two tables could be picked up by the optimizer as a possible join =
condition.=20
In other cases, the optimizer may decide to generate a Cartesian product =
of two=20
very small tables that are both joined to the same large table.</P><A=20
name=3D72204></A>
<H4 class=3DH3><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Cartesian=20
Join Hints</FONT></H4><A name=3D71838></A>
<P class=3DBP>Applying the <CODE>ORDERED</CODE> hint, causes the =
optimizer uses a=20
Cartesian join. By specifying a table before its join table is =
specified, the=20
optimizer does a Cartesian join. For more information on the=20
<CODE>ORDERED</CODE> hint, see <A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/hi=
ntsref.htm#5555">"ORDERED"</A><A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/hi=
ntsref.htm#5555"></A>.</P><A=20
name=3D50020></A>
<H3 class=3DH2><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Outer=20
Joins</FONT></H3><A name=3D76920></A>
<P class=3DBP>An outer join extends the result of a simple join. An =
outer join=20
returns all rows that satisfy the join condition and also returns some =
or all of=20
those rows from one table for which no rows from the other satisfy the =
join=20
condition.</P><A name=3D77042></A>
<H4 class=3DH3><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Nested Loop=20
Outer Joins</FONT></H4><A name=3D77043></A>
<P class=3DBP>This operation is used when an outer join is used between =
two=20
tables. The outer join returns the outer (preserved) table rows, even =
when there=20
are no corresponding rows in the inner (optional) table.</P><A =
name=3D77044></A>
<P class=3DBP>In a regular outer join, the optimizer chooses the order =
of tables=20
(driving and driven) based on the cost. However, in a nested loop outer =
join,=20
the order of tables is determined by the join condition. The outer =
table, with=20
rows that are being preserved, is used to drive to the inner =
table.</P><A=20
name=3D77045></A>
<P class=3DBP>The optimizer uses nested loop joins to process an outer =
join in the=20
following circumstances:</P>
<UL class=3DLB1>
  <LI class=3DLB1 type=3Ddisc><A name=3D77046></A>It is possible to =
drive from the=20
  outer table to inner table.=20
  <LI class=3DLB1 type=3Ddisc><A name=3D77047></A>Data volume is low =
enough to make=20
  the nested loop method efficient.</LI></UL><A name=3D77196></A>
<P class=3DBP>For an example of a nested loop outer join, you can add =
the=20
<CODE>USE_NL</CODE> hint to <A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#76956">Example&nbsp;14-8</A>=20
to ensure that a nested loop is used. For example:</P><PRE class=3DCE><A =
name=3D77054></A>SELECT /*+ USE_NL(c o) */ cust_last_name, =
sum(nvl2(o.customer_id,0,1)) "Count"
</PRE><A name=3D76945></A>
<H4 class=3DH3><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Hash Join=20
Outer Joins</FONT></H4><A name=3D76946></A>
<P class=3DBP>The optimizer uses hash joins for processing an outer join =
if the=20
data volume is high enough to make the hash join method efficient or if =
it is=20
not possible to drive from the outer table to inner table.</P><A =
name=3D78672></A>
<P class=3DBP>The order of tables is determined by the cost. The outer =
table,=20
including preserved rows, may be used to build the hash table, or it may =
be used=20
to probe one.</P><A name=3D76951></A>
<P class=3DBP><A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#76956">Example&nbsp;14-8</A>=20
shows a typical hash join outer join query. In this example, all the =
customers=20
with credit limits greater than 1000 are queried. An outer join is =
needed so=20
that you do not miss the customers who do not have any orders.</P><A=20
name=3D76956></A>
<H4 class=3DET><FONT face=3D"Arial, Helvetica, sans-serif"><EM>Example =
14-8 Hash=20
Join Outer Joins</EM></FONT></H4><PRE class=3DCE><A =
name=3D76957></A>SELECT cust_last_name, sum(nvl2(o.customer_id,0,1)) =
"Count"
<A name=3D76958></A>  FROM customers c, orders o
<A name=3D76959></A> WHERE c.credit_limit &gt; 1000
<A name=3D76960></A>   AND c.customer_id =3D o.customer_id(+)
<A name=3D76961></A> GROUP BY cust_last_name;
<A name=3D76962></A>
</PRE><PRE class=3DCEM><A =
name=3D76963></A>--------------------------------------------------------=
-----------------
<A name=3D76964></A>| Id  | Operation            |  Name       | Rows  | =
Bytes | Cost (%CPU)|
<A =
name=3D76965></A>--------------------------------------------------------=
-----------------
<A name=3D76966></A>|   0 | SELECT STATEMENT     |             |   168 | =
 3192 |    11  (28)|
<A name=3D76967></A>|   1 |  SORT GROUP BY       |             |   168 | =
 3192 |    11  (28)|
<A name=3D76968></A>|*  2 |   HASH JOIN OUTER    |             |   260 | =
 4940 |    10  (20)|
<A name=3D76969></A>|*  3 |    TABLE ACCESS FULL | CUSTOMERS   |   260 | =
 3900 |     6  (17)|
<A name=3D76970></A>|*  4 |    TABLE ACCESS FULL | ORDERS      |   105 | =
  420 |     4  (25)|
<A =
name=3D76971></A>--------------------------------------------------------=
-----------------
<A name=3D76972></A>
<A name=3D76973></A>Predicate Information (identified by operation id):
<A name=3D76974></A>---------------------------------------------------
<A name=3D76975></A>
<A name=3D76976></A>   2 - =
access("C"."CUSTOMER_ID"=3D"O"."CUSTOMER_ID"(+))
<A name=3D76977></A>   3 - filter("C"."CREDIT_LIMIT"&gt;1000)
<A name=3D76978></A>   4 - filter("O"."CUSTOMER_ID"(+)&gt;0)
<A name=3D76979></A>
</PRE><A name=3D76980></A>
<P class=3DBP>The query looks for customers which satisfy various =
conditions. An=20
outer join returns <CODE>NULL</CODE> for the inner table columns along =
with the=20
outer (preserved) table rows when it does not find any corresponding =
rows in the=20
inner table. This operation finds all the <CODE>customers</CODE> rows =
that do=20
not have any <CODE>orders</CODE> rows.</P><A name=3D76981></A>
<P class=3DBP>In this case, the outer join condition is the =
following:</P><PRE class=3DCE><A name=3D76982></A>customers.customer_id =
=3D orders.customer_id(+)
<A name=3D76983></A>
</PRE><A name=3D76984></A>
<P class=3DBP>The components of this condition represent the =
following:</P>
<UL class=3DLB1>
  <LI class=3DLB1 type=3Ddisc><A name=3D76985></A>The outer table is=20
  <CODE>customers</CODE>.=20
  <LI class=3DLB1 type=3Ddisc><A name=3D76986></A>The inner table is=20
  <CODE>orders</CODE>.=20
  <LI class=3DLB1 type=3Ddisc><A name=3D76987></A>The join preserves the =

  <CODE>customers</CODE> rows, including those rows without a =
corresponding row=20
  in <CODE>orders</CODE>.</LI></UL><A name=3D76990></A>
<P class=3DBP>You could use a <CODE>NOT</CODE> <CODE>EXISTS</CODE> =
subquery to=20
return the rows. However, because you are querying all the rows in the =
table,=20
the hash join performs better (unless the <CODE>NOT</CODE> =
<CODE>EXISTS</CODE>=20
subquery is not nested).</P><A name=3D76994></A>
<P class=3DBP>In <A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#76996">Example&nbsp;14-9</A>,=20
the outer join is to a multitable view. The optimizer cannot drive into =
the view=20
like in a normal join or push the predicates, so it builds the entire =
row set of=20
the view.</P><A name=3D76996></A>
<H4 class=3DET><FONT face=3D"Arial, Helvetica, sans-serif"><EM>Example =
14-9 Outer=20
Join to a Multitable View</EM></FONT></H4><PRE class=3DCE><A =
name=3D76997></A>SELECT c.cust_last_name, sum(revenue)
<A name=3D76998></A>  FROM customers c, v_orders o
<A name=3D76999></A> WHERE c.credit_limit &gt; 2000
<A name=3D77000></A>   AND o.customer_id(+) =3D c.customer_id
<A name=3D77001></A> GROUP BY c.cust_last_name;
<A name=3D77002></A>
</PRE><PRE class=3DCEM><A =
name=3D77003></A>--------------------------------------------------------=
--------------------
<A name=3D77004></A>| Id  | Operation              |  Name        | Rows =
 | Bytes | Cost (%CPU)|
<A =
name=3D77005></A>--------------------------------------------------------=
--------------------
<A name=3D77006></A>|   0 | SELECT STATEMENT       |              |   =
144 |  4608 |    16  (32)|
<A name=3D77007></A>|   1 |  SORT GROUP BY         |              |   =
144 |  4608 |    16  (32)|
<A name=3D77008></A>|*  2 |   HASH JOIN OUTER      |              |   =
663 | 21216 |    15  (27)|
<A name=3D77009></A>|*  3 |    TABLE ACCESS FULL   | CUSTOMERS    |   =
195 |  2925 |     6  (17)|
<A name=3D77010></A>|   4 |    VIEW                | V_ORDERS     |   =
665 | 11305 |            |
<A name=3D77011></A>|   5 |     SORT GROUP BY      |              |   =
665 | 15960 |     9  (34)|
<A name=3D77012></A>|*  6 |      HASH JOIN         |              |   =
665 | 15960 |     8  (25)|
<A name=3D77013></A>|*  7 |       TABLE ACCESS FULL| ORDERS       |   =
105 |   840 |     4  (25)|
<A name=3D77014></A>|   8 |       TABLE ACCESS FULL| ORDER_ITEMS  |   =
665 | 10640 |     4  (25)|
<A =
name=3D77015></A>--------------------------------------------------------=
--------------------
<A name=3D77016></A>
<A name=3D77017></A>Predicate Information (identified by operation id):
<A name=3D77018></A>---------------------------------------------------
<A name=3D77019></A>   2 - =
access("O"."CUSTOMER_ID"(+)=3D"C"."CUSTOMER_ID")
<A name=3D77020></A>   3 - filter("C"."CREDIT_LIMIT"&gt;2000)
<A name=3D77021></A>   6 - access("O"."ORDER_ID"=3D"L"."ORDER_ID")
<A name=3D77022></A>   7 - filter("O"."CUSTOMER_ID"&gt;0)
<A name=3D77023></A>
</PRE><A name=3D77024></A>
<P class=3DBP>The view definition is as follows:</P><PRE class=3DCE><A =
name=3D77025></A>CREATE OR REPLACE view v_orders AS
<A name=3D77026></A>SELECT l.product_id, SUM(l.quantity*unit_price) =
revenue,=20
<A name=3D77027></A>       o.order_id, o.customer_id
<A name=3D77028></A>  FROM orders o, order_items l
<A name=3D77029></A> WHERE o.order_id =3D l.order_id
<A name=3D77030></A> GROUP BY l.product_id, o.order_id, o.customer_id;
</PRE><A name=3D76932></A>
<H4 class=3DH3><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Sort Merge=20
Outer Joins</FONT></H4><A name=3D76933></A>
<P class=3DBP>When an outer join cannot drive from the outer (preserved) =
table to=20
the inner (optional) table, it cannot use a hash join or nested loop =
joins. Then=20
it uses the sort merge outer join for performing the join =
operation.</P><A=20
name=3D76934></A>
<P class=3DBP>The optimizer uses sort merge for an outer join:</P>
<UL class=3DLB1>
  <LI class=3DLB1 type=3Ddisc><A name=3D78528></A>If a nested loop join =
is=20
  inefficient. A nested loop join can be inefficient because of data =
volumes.=20
  <LI class=3DLB1 type=3Ddisc><A name=3D78534></A>The optimizer finds it =
is cheaper to=20
  use a sort merge over a hash join because of sorts already required by =
other=20
  operations.</LI></UL><A name=3D76913></A>
<H4 class=3DH3><FONT color=3D#330099 face=3D"Arial, Helvetica, =
sans-serif">Full Outer=20
Joins</FONT></H4><A name=3D50021></A>
<P class=3DBP>A full outer join acts like a combination of the left and =
right=20
outer joins. In addition to the inner join, rows from both tables that =
have not=20
been returned in the result of the inner join are preserved and extended =
with=20
nulls. In other words, full outer joins let you join tables together, =
yet still=20
show rows that do not have corresponding rows in the joined =
tables.</P><A=20
name=3D76631></A>
<P class=3DBP>The query in <A=20
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/op=
timops.htm#50022">Example&nbsp;14-10</A>=20
retrieves all departments and all employees in each department, but also =

includes:</P>
<UL class=3DLB1>
  <LI class=3DLB1 type=3Ddisc><A name=3D60293></A>Any employees without =
departments=20
  <LI class=3DLB1 type=3Ddisc><A name=3D60294></A>Any departments =
without=20
  employees</LI></UL><A name=3D50022></A>
<H4 class=3DET><FONT face=3D"Arial, Helvetica, sans-serif"><EM>Example =
14-10 Full=20
Outer Join</EM></FONT></H4><PRE class=3DCE><A name=3D60288></A>SELECT =
d.department_id, e.employee_id
<A name=3D50171></A>  FROM employees e
<A name=3D50172></A>  FULL OUTER JOIN departments d
<A name=3D50173></A>    ON e.department_id =3D d.department_id
<A name=3D50174></A> ORDER BY d.department_id;
<A name=3D50195></A>
</PRE><A name=3D50176></A>
<P class=3DBP>The statement produces the following output:</P><PRE =
class=3DCE><A name=3D64407></A>DEPARTMENT_ID EMPLOYEE_ID
<A name=3D64408></A>------------- -----------
<A name=3D64409></A>           10         200
<A name=3D64410></A>           20         201
<A name=3D64411></A>           20         202
<A name=3D64412></A>           30         114
<A name=3D64413></A>           30         115
<A name=3D64414></A>           30         116
<A name=3D76523></A>...
<A name=3D76518></A>          270
<A name=3D76519></A>          280
<A name=3D76520></A>                      178
<A name=3D76521></A>                      207
<A name=3D76522></A>
<A name=3D64533></A>125 rows selected.
</PRE><A name=3D47149></A></DIV>
<DIV class=3Dfooter>
<HR>

<TABLE cellSpacing=3D0 summary=3D"" cellPadding=3D0 width=3D"100%">
  <TBODY>
  <TR>
    <TD style=3D"WIDTH: 33%" align=3Dleft>
      <TABLE cellSpacing=3D0 summary=3D"layout table" cellPadding=3D0 =
width=3D90=20
      align=3Dleft>
        <TBODY>
        <TR>
          <TD vAlign=3Dtop align=3Dmiddle><A=20
            =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/sq=
l_tune.htm"><IMG=20
            border=3D0 alt=3D"Go to previous page"=20
            =
src=3D"http://download.oracle.com/docs/cd/B14117_01/dcommon/gifs/larrow.g=
if"><BR><FONT=20
            size=3D-2>Previous</FONT></A></TD>
          <TD vAlign=3Dtop align=3Dmiddle><A=20
            =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/st=
ats.htm"><IMG=20
            border=3D0 alt=3D"Go to next page"=20
            =
src=3D"http://download.oracle.com/docs/cd/B14117_01/dcommon/gifs/rarrow.g=
if"><BR><FONT=20
            size=3D-2>Next</FONT></A></TD></TR></TBODY></TABLE></TD>
    <TD style=3D"WIDTH: 34%" align=3Dmiddle><IMG alt=3DOracle=20
      =
src=3D"http://download.oracle.com/docs/cd/B14117_01/dcommon/gifs/oracle.g=
if"><BR><A=20
      =
href=3D"http://download.oracle.com/docs/cd/B14117_01/dcommon/html/cpyr.ht=
m"><FONT=20
      size=3D-2>Copyright =A9 2000, 2003 Oracle =
Corporation</FONT></A><BR><FONT=20
      size=3D-2>All Rights Reserved.</FONT></TD>
    <TD style=3D"WIDTH: 33%" align=3Dright>
      <TABLE cellSpacing=3D0 summary=3D"" cellPadding=3D0 width=3D270>
        <TBODY>
        <TR>
          <TD vAlign=3Dtop align=3Dmiddle><A=20
            =
href=3D"http://download.oracle.com/docs/cd/B14117_01/index.htm"><IMG=20
            border=3D0 alt=3D"Go to Documentation Home"=20
            =
src=3D"http://download.oracle.com/docs/cd/B14117_01/dcommon/gifs/prodicon=
.gif"><BR><FONT=20
            size=3D-2>Home</FONT></A></TD>
          <TD vAlign=3Dtop align=3Dmiddle><A=20
            =
href=3D"http://download.oracle.com/docs/cd/B14117_01/nav/portal_3.htm"><I=
MG=20
            border=3D0 alt=3D"Go to Book List"=20
            =
src=3D"http://download.oracle.com/docs/cd/B14117_01/dcommon/gifs/bookicon=
.gif"><BR><FONT=20
            size=3D-2>Book List</FONT></A></TD>
          <TD vAlign=3Dtop align=3Dmiddle><A=20
            =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/to=
c.htm"><IMG=20
            border=3D0 alt=3D"Go to Table of Contents"=20
            =
src=3D"http://download.oracle.com/docs/cd/B14117_01/dcommon/gifs/conticon=
.gif"><BR><FONT=20
            size=3D-2>Contents</FONT></A></TD>
          <TD vAlign=3Dtop align=3Dmiddle><A=20
            =
href=3D"http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/in=
dex.htm"><IMG=20
            border=3D0 alt=3D"Go to Index"=20
            =
src=3D"http://download.oracle.com/docs/cd/B14117_01/dcommon/gifs/indxicon=
.gif"><BR><FONT=20
            size=3D-2>Index</FONT></A></TD>
          <TD vAlign=3Dtop align=3Dmiddle><A=20
            =
href=3D"http://download.oracle.com/docs/cd/B14117_01/mix.101/b12039/toc.h=
tm"><IMG=20
            border=3D0 alt=3D"Go to Master Index"=20
            =
src=3D"http://download.oracle.com/docs/cd/B14117_01/dcommon/gifs/mix.gif"=
><BR><FONT=20
            size=3D-2>Master&nbsp;Index</FONT></A></TD>
          <TD vAlign=3Dtop align=3Dmiddle><A=20
            =
href=3D"http://download.oracle.com/docs/cd/B14117_01/dcommon/html/feedbac=
k.htm"><IMG=20
            border=3D0 alt=3D"Go to Feedback page"=20
            =
src=3D"http://download.oracle.com/docs/cd/B14117_01/dcommon/gifs/feedback=
.gif"><BR><FONT=20
            =
size=3D-2>Feedback</FONT></A></TD></TR></TBODY></TABLE></TD></TR></TBODY>=
</TABLE></DIV></BODY></HTML>

------=_NextPart_000_0017_01CAC89A.55990190
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://download.oracle.com/docs/cd/B14117_01/dcommon/gifs/prodicon.gif

R0lGODlhHgAeAOYAAP///4SEhLW1td7e3ittsZSUlAQoTwMJIYyMjHuLlAtumufn5yAgJAYmLGZm
ZiwlKwAAZqysrDMzM8zMzDw9QQEJBwAAMzOZzABmzDMzzA5jvQAAAPf39wBmmSlKXHh6rU9aliUh
vxIOo1BNWTNmmQAAzLq/vwAzZgCZzNrW1pqx3AAAme/v8U6SuQAzM6Gp+2ZmzJnMzJmZmYiUuVpn
azMzmZilsZSMjDOZmWbM/2aZ/2Zm/5nM/97e52aZmZmZzDNmZl9f3+/3/5lm/2YzmTMzZko5KQAz
mQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5
BAAAAAAALAAAAAAeAB4AQAf/gACCg4SFhoeGCRoEIA0bFhlDHw8HCjkqNBIFJgITA4gJBKIGGyM/
LyAHByQ5MR4MDgEFAp+IggsCMggIBb27vL4FESYLtgMTKRMCMzAwIAwMPioxJCMTtoOhGhgGFRYi
JSsHDQooCgawsrSgRScGqhYQEBbjBu4ND7Gztdj9/v8TbhT7N8iGKAKkLIQI8qzShRYeKEzgQJED
KFEkXHgLkaHGOAUPPeTjte6QNgwnvIET16CDOXT6SiYigIFbBQgcRRxwARLHiXT7+g2IcCOA0aNI
jwbtx2LBgAELojqFGvXpAosEs2bloALGBwpGBAgBYAJBCn89bHyYEYCCgRA7niY5bAFEor9QBDJu
wNnxY0gKtFIMYHGRkYSbGXTI7XAhBo0HAWTIkFlIG8KbKz+i6ACTJL/KNG1CAAdB8zmglAlp00DK
QIYMpcldQIj6s+qDpEa8eEFEFQ4eKl7FtJ2NhIYj3SysKBG7AwbOtREJGPHggQQKFCRIsJ59u4QR
Rpcai4Dg6C7z5QN4ZqosQgQB8AW4j+/eRArCWvPr9xcIADs=

------=_NextPart_000_0017_01CAC89A.55990190
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://download.oracle.com/docs/cd/B14117_01/dcommon/gifs/bookicon.gif

R0lGODlhHgAeAPcAAP///4SEhPf39+/v75SUlMbGxoyMjN7e3pycnOfn56WlpbW1tb29va2trdbW
1gAAIQAASgAAUgAAWikpKQAAQs7Oznt7ewAAAAAAMQAACAgIGAAAEACM51paWnNzcwBzxgAAKUpK
QkJCQgAIMQgIECGc5zExMWtraxgYGN7e1jlCSkJSWkJCSoSEe0pCQlJSUgAAOSkpOcbGvQgxUhAQ
MTFChO/v52NjYwAIIQAxWhgYShgpKQAAYyEpSlKlzkpzjJyclIyEjEJCMZSMjFpaUgAYtRAhMRA5
7wgQKRgpMTlKWjFa3jFS1hAhKQBKexghMUJCUjlKnFKcxlJzlJyMhBgpSgBzvRBKcwAQvQBrtaWc
nAhCaxiMziEhIWNaWlKl1kJ7pTEpMYR7c0JKUkpKSt7WzhAQIUJCORAxxrW1rVpaQntzayE5UggQ
MSGExhAQGCE5WtbWziEhGClKzu/n5zlCQjE5Sjk5MQAAGDEpIVpSUikhIRAQCAAQITExOQAAa1Jz
jAB7zlJKSgAIGL21rYxza0pre0JKSufv7xghIa21tYSMjAAhpVJCOQAICEpSa0p7lBgYQmNjWgAQ
rQhCcwhKe+fe3ggICIyMlBBC9zExKYSEjBgYIRghSkJzjEqczhgQEFpSSjlCjDFSzgghtQBCexAQ
SiEhSjE5UgBjrRgYECGc3ko5QgAYOYR7e2trcxA593NrYzlSrd7W3jk5OaWtpa2lpa2tpUpKOQAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAAAAAAALAAAAAAeAB4A
QAj/AAEIHEiwoMGDCAE06IRmSY1IMCBI4PEHxgU5LRYcEJAQAIMVTgJxKCFlCpxWI0Yg8bNGhoMG
BBQUSMCxo0ABBxgoIGAggE8DMRlUODCgZsIGISZoeIABBAkhCgbYHJjABRswnnZcoMCIVA81aWws
eDGhQwADCipI7XiAigpKpQaJqbBIRBcTHTz8RKDR6NSbA4r+TZjgxp0QBNYOHljg1aNTGChImBwB
xJsQQBz4RXjA1Z4NEbAcYSLK1IMMKG4ocrAg5kyElljl+FDCB6AkF3JzitHmwQMNE/RYQPA6IYMx
W6xw4GKoUSgENgAUeHFpwomYCxwoRjhggYpEoCZY/wgw3ufZoBsHC0jgQCeCBgUc0FxMf3GBACJU
acigCcF29QsIQgIeFEAQQQQYkIALEHH815ECqMgShQ4YGBjBRBRoQEQD6dmUwAk0TALLKDXoIBEF
D2wQRgsN3MJAhwYNYAELShixAQRFZDJHD3ycUUsKMhAwHgF9HVRVDm588cMOjowAAQ2SaLGJHTig
IMIJBhCXwEF0eDFDFiP58MMTGWSwwQMgPGDGIQEQEISWCRWwQiUfcLDKJ5BUgUMMsRCCyCwIEEAA
XxXMh5AtLFzxQSpNFJLCAQUYQAsKZXkAVANqJSRAGUNAMUMfeZhgQh1k6GVeli9udtAADGDCk3k/
ZR/ZAAPaDTaAAwUsgIABQL1XAFGq/jUApPEJVt+xAgUEADs=

------=_NextPart_000_0017_01CAC89A.55990190
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://download.oracle.com/docs/cd/B14117_01/dcommon/gifs/conticon.gif

R0lGODlhHgAeAOYAAP///wAAOYyMjAAIQvf39+fn5+/v7wAAQgAAMdbW1r29va2trcbGxs7OzqWl
pd7e3pycnJSUlFpaWoSEhGtra7W1tRgYIWNjY3t7ewAIOSFCtTExOTk5OQAAKa2tpSEhIRg5rWNj
awAIMYSElCE5pWt7tQAAEAAAIVJSUjExMSEpWiFCpb29tRgpWiExc5SUjBgYMQgAKXt7cykxOUpK
Sjk5QhgYGEJCUggIGEJCQiFCvQAIKVpjcwgYe2uEzhAxpTk5YwgIOQgppYSEpQAQYwgQKTE5Sikp
KQgQIdbW3muExiEhOSE5nEJCWkJKSkI5UggxtSEhKQAIShA5tSlKvQgxpVJac1pSUlpaQhAYMRAI
IQgIEGtrY3Nzc2NjWmNztQgICCkpOVpjaxAxrQgYawgAMSFCxoSEnDk5UqWcnBAQIRAhayFKzkJK
Wjk5MXt7lHNzaxghUkJCSmt7vQAYhHuEpXuEnN7e1ufn3lpaYxgpcwAAGDk5WmNjUgAAAAAAACH5
BAAAAAAALAAAAAAeAB4AQAf/gACCg4SFhoeFDy9ccjgIBwMBkgMDkB0WEgsNBQSIggkhKiQaQiBK
bxtgFl4edwAEFRQYAhMCDgyehQQPCg4QEAsKCQUGnbmDDQIXMCcbDsbHghU1a1MaXyM3CAgBGRmU
lQEIJjaZm9CHDxcuREYeLBQ0NBIXtQIRERAOFQnR/v8Ao/GSsAHGtgCUdoSZIIxTrgozXPgYciMG
N0kIIx04cMmcw0IN8rRYoeMHiBJn+HA7EOCECRxuZDAooOCepgLpKKhgwoaOGjh4DBhIsABDjiMo
7AmAoOAYAwkfOHShZU/fggoMhhkI+MoAMXRcw0YrQIGDA7HIFISwgETEgB0bvyB89WcgDQoOWUQ8
YhkAkogoF26CJaTACY86TWL0xZhxY0fBhxTUIENlzognZbh5y/hNCgJMEGaChajHzBgSJUagOUiJ
pUstbWRgiABZEAEGYkbqqHLSDpAgHfZs+XCBRbECDSLY7Fcogc5RUFZYwdLnxQMAQyOk+EDB3i1E
D0LE0dBjiQcASRxQSMHhAoZZAuJ/95SARxEbV1CkyNE9fj5gFQizVTS79BLfPftk9UAxXBnwAAMK
ZDUXWhRWKEggADs=

------=_NextPart_000_0017_01CAC89A.55990190
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://download.oracle.com/docs/cd/B14117_01/dcommon/gifs/indxicon.gif

R0lGODlhHgAeANUAAP///62trff390pKSrW1tVpaWu/v7zk5OUJCQmtra3NzcwAAAJSUlAgICN7e
3r29vSEhIYSEhNbW1sbGxhAQEHt7ezExMaWlpWNjY5ycnOfn5ykpKVJSUhgYGM7OzoyMjHtze62l
rXNrcwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAAAAAAALAAAAAAeAB4AQAb/QIBw
SCwaj8eBxQISOBMHhHQ63Sw+SMBh4kkovuDwlwGINCAFhiErkBDeDw/hEZhPuHWCRJDt+48HBABO
fwAVDRsJGWtFAwcJIggLkwsDCQgNkxSWAxsWaYyFoqOkSA4hEakEDqVEgYNOsbKyAB8UCgChrg8a
D3dvwMEEAQK2aGpGr0IGzKEGGsxCh8e6QxIZFQgWA9wF2gccjgWOCAMYF9Wt6uvs7ewPFxgDBQUY
HAkXAfr7+xkSWRYyQBuiQYKDgwgPSkjQoEKWLQQOcJtIkRuCBGUaDAjwgE+RLQ/uYaBHsiQ9A2ao
JXvgIMOFfPz4XXhQhoLKj4JGKTgDKlkAQiETIHTocOBfgA0UOiBYU8FmzyIaMGVagODAggaZKGjT
dEAiB2SmGCTAkIBBgAoVxiaIkC+BWwb/SnksMted3VFBAAA7

------=_NextPart_000_0017_01CAC89A.55990190
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://download.oracle.com/docs/cd/B14117_01/dcommon/gifs/mix.gif

R0lGODlhHgAeANUAAP////f3962trVpaWkJCQkpKSpSUlN7e3mtra+/v7zk5OQgICLW1tXNzc4SE
hAAAACEhITExMRAQEGNjY6WlpZycnNbW1r29vXt7e1JSUikpKefn54yMjMbGxq2lrRgYGHtze87O
znNrcwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAAAAAAALAAAAAAeAB4AQAb/QIBw
SCwaj8ZCJAIKOBEKgnQ61Tw4Cw2ikhAqGAAnsojJbgcGdBdQUCBEhIf8UUAQFnJJvaCJoMdCSkxO
AVBUh1YcRYJNT1GHVVdmFWpeHSEIDZqbnJoGAA4LEGhoFoCnqEcHHg6tDAepSKutDgyEt7cAHBIN
AGtDs664w7q8EqMGa19hw83FDcekyV4XGxcdHQza29wCAbvIaBMUymBCCei/CRvoQmXIE0gVGAQR
BfcD9QoZbQNtBAXixRqI6gKFCQUGDJiQAQEFARAjRqxgCkmECuyGbLBwoKPHjhYQLMBwxCBChQwd
SlxZIVQBAReKXMwoZOPHjyFHiqoEwGTCiIUNH66c6FIAsjUzf9m8CVLkO2nKsim4R7XqPQIIQC14
GW4aAAUdLjScoLCsWYUJQnXN4FXBhQMVKAgdKoBCTAfR0hgwUPGruVgNdhpgW0SBACEdIHz4oMCU
AA0SPhDogiEvkjt4HhBQ8GABHgn18iiYShiQAQQTEBgQgAEDagQOHiKYTbA2kSAAOw==

------=_NextPart_000_0017_01CAC89A.55990190
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://download.oracle.com/docs/cd/B14117_01/dcommon/gifs/feedback.gif

R0lGODlhHgAeAPcAAP///SclKGiocOry2v3/0398hf78/4i5mGZkeD9BTrm4ys/R/9b/4jU6lGRm
ZURHSMTJvvz8+lRkUf//+/X+/2NgZ//89w8qEDZEi0NcP/31/r29vP7//+Pk4vz//8v/2JiZqOrs
8Hx8e6q3qjs9RZ2dnTZKVd311YSFg//4/uP4/+vr6f/6/7K/rez+9O3y9WaGZf/+/8rKw+j9/pCR
jPr5/vTy7evx7UE9PMbGxENPrwocCP379v3/8q2yvdrb1vn59f//+v///6WlpPr9+isqRqKjnP7/
+MLDzWxvbjIxM/79+d3d2vr7+fr///j//zs8PfX18vL//v7+/PX+7ZaWluz85fLs//ny/tTU0svL
yayrqvj//fvx8vP84v/7+XV1d/n/6vz8//z/+I6Oj1tcXLm7tu3/+Pj3//Hx/u/t7fn+8pGRkv/1
+vT/+fz6/+3///b66fH/7Ozz5vDw+PH2+fHy73JtfeP/8f7+/vv//fP/9//7/GBeYv7+/5SVkO72
+fH2/+75//b1+un5//H+6v7/7tLazfv89jdKpouMh/H08rKnrv7/+vr/5v7/6vf2/PDu8v38+ImJ
ivb/8OPw+Pz+/f/8/fr17/L56vL57P/++amqorGysfj8/3SGbEJUX/P++M3M3PL6/u/w/4uKnM7N
0kM5UcHP0sDF24+Qi/X79/Dj/3RxhJOTlFicYYaGiCwua/ns/zEkKy83Oufv8sDCvWGMcLex03h4
dXJ8e/v9/+nr+HWghPn77VdWUkdVnEFDlkpMiY2OieLn/+j2//P5yenx/1lOVP39+zMtT/f68Sca
Ifb29PTz8cnX2vPz9dTK0vTw+4V4f+b+4N756ufo5WxflIW/jd7k1u7+5/n3+NfY1v/z+MC2vv3w
/3lrqOHi3fz/+//+/BchIPX5/D1lQ1ZMZOfy9EVefP348kdUQvv9/EpIVVRTWSYtIC8hXsq/xcvT
yC83XlZbcZiNkzw7N9/4/6CSz+fd5aOrroqSlfb+6UBNQJeXmN7p6yH5BAAAAAAALAAAAAAeAB4A
QAj/AJcdiWGgoIEYiII8cjRhwqAYZ85cutSGBRcXe/ZYsJAiRaYeY+zs8kdCQZgwITz0yLSrFQss
usj1G3FoTqQYLKR5uBGhWRQAALjlCuCkjqAnJkzAUeEO0kFoADYoEYHizx9OMoBq1SqJh4VNSyxg
spFji78SnXIwWbG1oQdPPXrEiWOgxjg+C/AF6IPglD5ALDQYYLFIDxcufPiwYGGpCRIShyhRstIg
mBw5OhrAgfMmEp5bAhh82oEsnqg0FKRw4AAgWYQmPHis6FAGyos6tShE6qOkDxgyJfxVqWJkyAYm
QYI0XO3Bg5PnTpIlazgl2RSgESIk2ypEiB8DYxrF/z0SpIaBKzmlxdgWsVvFFKG4uHHz5UtHR16a
o/FzwxauIsYQwMo1BaSAQDsFIJHFCnqskkceBcVAkAGaQNAPFYE4UQglaQhDhRWEUJACC9VUc8sF
67QQjQYxpPECIAM8csQP9BQxCgUzzAAMBvfco0Mii1jCwAECvFLICdMwA4ICz1DQBAdNOBMBANsw
UdsTFFBQCShwEASJGUqAwcYkNAxDgyJGQMABEVMCEMESEwABhBo5/IIDDg+4AgsKKFQxRCdm2KJF
ONbY0dAEQHW32mrXJWcBDxHYoYYzTURw3VZAHXGEQW+IEQN5MQLRSAw1uHBGCl2w0MYNXGS0UUd+
1P8QXg++IDJQDRpggQYJSmxxhhSqdmNRKPPV15EH5RgiVw8xDOLMD+DAw4IBKZxDwj75sJBCG0QY
hphiLODXHB0hmJGEMhoQQIAs39zRCiR3BFBBJ9zcoMeDEcZAxRziiONDArzswk9+L2TTwy6kYMHC
E0nsIMEI8higBhaX3OABGgZA8A4EmjhBwRpyEBOLBNpIAawGeJzBgDkXSMCINzWg8dxqgSDxzhof
khJMBtQQo4MJM8QQQi8HYIPNCZ/gUI8PovyDziOGrHFEKgjMcwwcMxSDQTozLJBIGTcw8IEAH1AD
wyyMlFKKD6jYAZQdQAAggwgPvHAUIaAohUYMb9SlIEQ7AZCBgiJ/0DCEDBws4jYAUfwUQhK0AFKJ
yYRIaIoSSRRA1R+q0EADVuyw1kQTAEzAQ2vhOPBAHU6MQkIfuUwyJnBDbLFBDj9EQQRrrSWzhCRg
STKBDbnYI8MQ/pBRhSudbKEFNx0gIj2imAK1xPWbgKUOJh1kkYMWTBTaJlCHUq/oolNMsUkQ2QNQ
KVDJvI9pcstx0JwnTjiXHZxbpV99dwEBADs=

------=_NextPart_000_0017_01CAC89A.55990190
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://download.oracle.com/docs/cd/B14117_01/dcommon/gifs/larrow.gif

R0lGODdhHgAeANUAAP///4yMjKWlpbW1tb29vcbGxs7Ozt7e3ufn5+/v7/f39+fn7+/v9/f3/8bG
zs7O1tbW3t7e57W1vaWlra2ttb29xoyMlJSUnJycpYSEjOfn987O3t7e78bG1rW1xr29znt7jLW1
1nNzjK2t1pycxpSUxlpahHt7tXt7vVpajHNztVpalGNjrUpKhEpKjFJSnEJChEpKlEpKpTk5nDEx
jDExlCkpjCEhhBgYjAgIhAAAewAAhAAAAAAAAAAAAAAAACwAAAAAHgAeAAAG/0CAcEgsGo/IpHLJ
bDqf0Kh02tRwqMXGSJZjYAENDgqn06kUjaliWy7nNhEFNDxut2OBCCPNXMvsdjsgFBEJfEh0ZIB2
MAEOhYdZbIuLLSsnIXtHCzWUnm0nhkYNCgslM592NDEvJAlyRQoJERUYIjA5qS4CFAavRgoIFxnE
xCY3noIZAwuwRLIRBMPFGbe5gC4YBc2jpREPtRbUGcd2OR8Hv92zEA8OFNPF1mUshc5ZCgwLEe0O
EhjiqKWwkQOCqCSkGCRAcKBdhQnxMgTw0OHgEgWy9vX7F5CQRSYJF/J78OBfHk1RMCZYgCCCywNx
sJCSlSABAzRfhMyMlLPnkwEgADs=

------=_NextPart_000_0017_01CAC89A.55990190
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://download.oracle.com/docs/cd/B14117_01/dcommon/gifs/rarrow.gif

R0lGODdhHgAeANUAAP///4yMjKWlpbW1tb29vcbGxs7Ozt7e3ufn5+/v7/f39+fn7+/v9/f3/8bG
zs7O1tbW3t7e57W1vaWlra2ttb29xoyMlJSUnJycpYSEjOfn987O3t7e78bG1rW1xr29znt7jLW1
1nNzjK2t1pycxpSUxlpahHt7tXt7vVpajHNztVpalGNjrUpKhEpKjFJSnEJChEpKlEpKpTk5nDEx
jDExlCkpjCEhhBgYjAgIhAAAewAAhAAAAAAAAAAAAAAAACwAAAAAHgAeAAAG9UCAcEgsGo/IpHLJ
bDqf0KjUydFMk4ycbNS4EhsKlU6HQ3G6V0VkkxuPt4opIxKIud3lMzQRoYB2d3dwTnwOATCBgXlo
WCEnKy2JkluMRgknkpluNQtICSQvMTSadzMlCwqVQwkGFAIupDkwIhgVEQlxRgsDGX+ZNyYZwsIX
CLlFCwUYsIGyIsPEBLfHRAkHH21uwNAZFrUPEaiqQnwsY87cFxQODxDT4+QQOTYp3N4S7O4LDKlJ
CR0eAkC7MKFCuwMIEvCDV62PsHv5wuGipmROAAwSHrSLkHAhFDUHIohEsGDiFDAMEqhU0M8LADAt
XcqcmSQIADs=

------=_NextPart_000_0017_01CAC89A.55990190
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/pfgrf184.gif

R0lGODdh8AFIAfcAAAAAAAAAPwAAfwAAwAAA/wAqAAAqPwAqfwAqwAAq/wBVAABVPwBVfwBVwABV
/wB/AAB/PwB/fwB/wAB//wCqAACqPwCqfwCqwACq/wDVAADVPwDVfwDVwADV/wD/AAD/PwD/fwD/
wAD//yoAACoAPyoAfyoAwCoA/yoqACoqPyoqfyoqwCoq/ypVACpVPypVfypVwCpV/yp/ACp/Pyp/
fyp/wCp//yqqACqqPyqqfyqqwCqq/yrVACrVPyrVfyrVwCrV/yr/ACr/Pyr/fyr/wCr//1UAAFUA
P1UAf1UAwFUA/1UqAFUqP1Uqf1UqwFUq/1VVAFVVP1VVf1VVwFVV/1V/AFV/P1V/f1V/wFV//1Wq
AFWqP1Wqf1WqwFWq/1XVAFXVP1XVf1XVwFXV/1X/AFX/P1X/f1X/wFX//38AAH8AP38Af38AwH8A
/38qAH8qP38qf38qwH8q/39VAH9VP39Vf39VwH9V/39/AH9/P39/f39/wH9//3+qAH+qP3+qf3+q
wH+q/3/VAH/VP3/Vf3/VwH/V/3//AH//P3//f3//wH///6oAAKoAP6oAf6oAwKoA/6oqAKoqP6oq
f6oqwKoq/6pVAKpVP6pVf6pVwKpV/6p/AKp/P6p/f6p/wKp//6qqAKqqP6qqf6qqwKqq/6rVAKrV
P6rVf6rVwKrV/6r/AKr/P6r/f6r/wKr//9UAANUAP9UAf9UAwNUA/9UqANUqP9Uqf9UqwNUq/9VV
ANVVP9VVf9VVwNVV/9V/ANV/P9V/f9V/wNV//9WqANWqP9Wqf9WqwNWq/9XVANXVP9XVf9XVwNXV
/9X/ANX/P9X/f9X/wNX///8AAP8AP/8Af/8AwP8A//8qAP8qP/8qf/8qwP8q//9VAP9VP/9Vf/9V
wP9V//9/AP9/P/9/f/9/wP9///+qAP+qP/+qf/+qwP+q///VAP/VP//Vf//VwP/V////AP//P///
f///wP////8AAP8AP/8Af/8AwAAAACoqKlVVVX9/f6qqqtXV1f///ywAAAAA8AFIAQAI/wD/CRxI
sKDBgwgTKlzIsKHDhxAjSpxIsaLFixgzatzIsaPHjyBDihTZjx+/kSNHjhw5cuTIkSNHjhw5cqC+
fPlGjhw5cuTIkSNHjhw5cuTIgfry5TOYL1++fPr8ZcxncF++fPr8jRw5cuTIkSNHjhw5ciRGffny
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
YkSJEylWtHgRY0aNCPXly4cw38B8AvP5++cvn8B8AvP94zcw3798//Tt++cvn8B8A/MJzCcwnz5+
Avn507fvn798BPXt+9cvn8B8//rl+6ePn0B+/v7lG8gvH7+NCvv187dx48aNGzdu3Lhx48aNGxHq
y5cPYb6B+QTyy5dPnz5+//IJzPfPX758+fr9y/fPn758+foJzDf/MJ/AfALz+dOXLx+/f/705dOn
j6A/ffn05RO4L58+ff/86cuXj5/AfATz+duosF8/fxs3bty4cePGjRs3bty4EaG+fPk2bpSYT6K/
fBsX+vO3cePGjRs3bty4cePGjRsT6suXb+NGifki9svXb+PGjRs3bty4caOMAPLnD+A/gQMJFjR4
EGFChQsZNnT40KA/f/786cuXz58/f/4gQoQIESJEiBAhQoQIESJEiBAhQoQIESJEgv769YMIESJE
iBAhOuQHMJ/AgQP3AfwncCDBggYPIkyocCHDhg4fQowocSLFihYvYsyosaC/fv02bty4cSLAfAIH
DgT4T+BAggUN/x5EmFDhQoYNHT6EGFHiRIoVLV7EmFGjQX/9+m3cuHHjRH4A8wkcmI8fwH8CBxIs
aPAgwoQKFzJs6PAhxIgSJ1KsaPEixowaDfrr12/jxo0bKQLMJ3BgPoD/BA4kWNDgQYQJFS5k2NDh
w4T9+vmDCBEiRIgQIUKECBEiRIgQB/rzBxEiRIgQIUKE2A9gPoEC+QH8J3AgwYIGDyJMqHAhw4YO
Hybs188fRIgQIUKECBEiRIgQIUKECBEiRIgQIUKEaBBgPoECAf4TOJBgQYMHESZUuJBhQ4cPFfbr
5w8iRIgQIUKECBEiRIgQIUKECBEiRIgQIUI02C9fvnz9IEKECP8RIkSIEAX26+cPIkSIECFChAgR
IkSIECFChAgRIkSIECFCPKgvXz6IECFChAgRIsSB/fr5gwgRIkSIECFChAgRIkSIECFChAgRIkSI
EA/6y9cPIkSIECFChAgRIkSIECFChAgRIkSIECFChAgRIkSIECFCdMgPIkSIECFChAgRIkSIECFC
hAgRIkSIECFCTOivXz+IECFChAgRIkSIECFChAgRIkSIECFChAgRIkSIECFChAixob9+/SBChAgR
IkSIECFChAgRIkSIECFChAgRIkSIECFChAgRIsSG/vr1gwgRIkSIECGCCCKIIIIIIogggggiiCCC
CCKIIIIIIoj/IIIIIogaAshfv34A/wkcSLCgwYMIEypcyLChw4cQI0qcSLGixYX+/F28ePHixYsX
L16k6K9fv4sXLx4E6E/gQIIFDR5EmFDhQoYNHRIE+E/gQIIFDR5EmFDhQob/+vXz17AgQH8CBxIs
aPAgwoQKFzJs6JAgwH8CBxIsaPAgwoQKFzJsmNCfP4cOHTp0aFAfwHwCBxIsaPAgwoQKFzJs6HAg
P4D/BA4kWNDgQYQJFS5k2K+fP4YG9QHMJ3AgwYIGDyJMqHAhw4YOB/ID+E/gQIIFDR5EmFDhQoYN
HT6EGFGiQX38Jk6cOHHiQn38Jk6cOFFgv37+JOrjN3HixIkT/xfq4zdx4sSJEydOnDjRoD5+EydO
nDhxoT5+EydOnCiwXz9/EvXxmzhx4sSJC/Xxmzhx4sSJEydOnGhQH7+JEydOnLhQH7+JEydOFNiv
nz+J+vhNnDhx4sSF+vhNnDhx4sSJEydONKiP38SJEydOXKiP38SJEydOJKiP38SJEydOXKiP38SJ
EydOnDhx4kSD+vhNnDhx4sSF+vhNnDhx4kSC+vhNnDhx4sSF+vhNnDhx4sSB/vr1mzhx4kR9/CZO
nDhx4kJ9/CZOnDhxIkF9/CZOnDhx4kJ9/CZOnDhx4kB//fpNnDhxoj5+EydOnGiihQDSxw/gP4ED
CRY0eBBhQv+FCxk2RKiPn0OHDh06dOgQoT5+Dh06dOjQoUN//fo5dOjQoUOD+vg5dOjQoUOHDhHq
4+fQoUOHDh06/KePn0OHDh06dOgQoT5+Dh06dOjQoUN//fo5dOjQoUOD+vg5dOjQoUOHDhHq4+fQ
oUOHDhH68+fPIUF9/Bw6dOjQoUOHCPXxc+jQoUOHDh3669fPoUOHDh0a1MfPoUOHDh06dIhQHz+H
Dh06dIiwXz9/Dgnq4+fQoUOHDh06RKiPn0OHDh06dOjQoUOHDh0m1MfPoUOHDh06dIhQHz+HDh06
dIiwXz9/Dgnq4+fQoUOHDh06RKiPn0OHDh06dOjQoUOHDh3/JtTHz6FDhw4dOnSIUB8/hw4dOnSI
EKB+/fwB/CdwIMGCA/XxA/hP4ECCBQ0eRJhQ4UKGDR3+08fv4cOHDx8+fPjw4cOHDPXxe/jw4cOH
Dx/+08fv4cOHBPMpzPdQYL9+/h4O1Mfv4cOHDx8+fPhPH7+HDx8+fPjw4cOHDx8y1Mfv4cOHDx8+
fPhPH7+HDw/mQ5hPYb6HBf35e0hQH7+HDx8+fPjw4T99/B4+fPjw4cOHDx8+fMhQH7+HDx8+fPjw
4T99/B4+/OdPX758/vTl0/ePX758/f7py6fvHz9/+vLl8/dPXz59//j945cvnz9/+vLl8/ewoT5+
Dx8+fPjw/+HDf/r4PXz48OHDhwn9+Xv48OHDh//08Xv48OHDhw8f/tPH7+HDf/n8/eO371++f/70
CcwnMJ/AfPn8/eO3T2A+gfn4Adz3z1++fP7+8dsH8J/AgQQLGjyoj9/BgwcPHjx48ODBgwcPHjx4
8J8+fgcPHjx48ODBgwcPHjx48KC/fv0OHjx48ODBgwcPHjSoj9/BgwcPHjx48ODBgwcPHjx48J8+
fgcPHjw4UN8+fwPzEfSXT2A+gfn07fNHMJ/AfPkG+tO3z9/BgwcPCtTH7+DBgwcPHjx48ODBgwcP
Hjz4Tx+/gwcPHjx48ODBgwcPHjx40F+/fgcPHjx48ODBg/8HDxrUx+/gwYMHDx48ePDgwYMHDx48
+E8fv4MHDx4k2G9fPn7/8v3rp48fv3wC8wnM96/fvnz8BOYTmC9fwX778vE7ePDgQX38Dh48ePDg
wYMHDx48ePDgwYP/9PE7ePDgwYMHDx48ePDgwYMH/fUD2A/gP4EDCRY0eBBhQoUJ+S3Ux2/hQoUA
8wkU6A/gP4EDB+YD+E/gQIIFDR5EmFDhQH38Fi5MyG9gvn/5/uXz989fPoH5BObjNzCfwHwC8+nb
JzAfv4H5Fi40qI/fwoUJ8+XLl4/fwHwJ8y1cuHDhwn/6+C1cuHDhwoULFyr016/fwoULFy5MmC8f
v4T6+C3/XKgw38J8CxPmW7hw4UF9/BYW3LdwoL98+fL1+5ePH798+fTp4/cvH79/+fzly5evn8B8
/P7l86cvX75+/vLly9fvYL9+/hYe1Mdv4cKE+Qbq65cw38KFCxcuJKiP38KFCxcuXLhw4UJ//hYu
XLhwYcJ8+fLl63dQH7+FCxXmK+hPX758/vTl0/ePn0B9+/L105ePn0B++fL1+6cvn75/+/Ll8/dP
Hz9+Cxci1Mdv4cB9+fIB/CdwIMGCBg8iTKjQYL9+/hYe1Mdv4cKE+Qb60yeQ3z9++fL505dP3z9+
Avfly+dPoL59+fgJ5JcvX79/+vjx29dPYL6FCw/q47dw/+HChQsXLly4cOHChQsXLgSYT+DAfgD/
CRSojx/AfwIHEixo8CDBfAXz+fvHb9+/fALzCcznz1++fv7y/fOnT2A+gfn+7dv3z9++f/n4IUSI
8KA+fggJ8suXL18+hAgRIkSIEGHBfv38IUQoUB8/hAgRHsxHMJ/AfPz2/fOX718+gfn+7dv3z98+
gfn4/cv3z58+gfn+5eP3r9++f/34IUSIsKA+fggRIkSIECFChAgRIkSIECFCgf306dOnz98/fwD1
CRTo75+/gQL9/fM3UKC/f/4GCvT3z99AgPkEDsynz9+/f//08QP4T+BAggUNHiQIMJ9Agf707fP3
79+/fP///uX79y/fv3/5/v3L9+/fv3/+8v37l+9fvn///uX7lw/gP4EDCRY0eJCgPn4IBfIDmE/g
QID/BA4kWNDgQYQJFRrs18/fwoP6+C1cmDAfwXwC8+Ub6O9fPoH5/uUbmE9gPoH5CPrL9y/fwHz/
9vlbuPCgPn4LFy5cuHDhwoULFy78xy9fvnz5/P3zBzCfQIH+/vkbKNDfP38DBfr752+gQH///A0c
OHCgvn//9PED+E/gQIIFDR4kmM9gv335+P3LJzCfwHwC8wnM96+fPn788gnM9y/fwHz/8iFEiBCh
Pn4I+wHMJ3CgQID6BA4kWNDgQYQJFS5kSDAfP4D/BA7/JFjQ4MGB+Qb60ycwX76C+QTm+5dvYD6B
+QTm+9dPHz9++f7lG7jPXz6ECBEa1McPIUKECBEiRIgQIUKECBEiRCiQX758+fL5++cPYD6BAv39
8zdQoL9//gYK9PfP30CB/v75GzhwoMB9//7908cP4D+BAwkWNHiQYL6C/Abm+5dPYD6B+QTmE5jv
Xz5///zlE5jvn759//zl+5cPIUKECPXxO6gPYD6BAwkWNHgQYUKFCxk2zMcP4D+BAwkWNHhwYL6B
+/oJzKdvn8B8//IJzPdP375//vIJzCcw3798/v75y/cv30B++fghRIjQoD5+CBEiRIgQIUKECBEi
RIgQ/yFCgfzy5cvHbyBAfgIF/vv3b6DAf//+DRT479+/gQL//fs3EGA+gQP3AfwnUKA+fgD/CRxI
sKDBgwQB5hMokJ+/gf3+5eP3L9+/f/n+/cv371++f/wE6tPH718+fv70Cez3Lx/AfwIHEixo8CBB
ffwQ8gOYT+BAggUNHkSYUOFChg35AfwncCDBggYPDsyXL18+fgPz+dOXL1+/f/n4/cv3z5++fPn6
CcwnMN8/fvny6dPHLx/BfP4QIkRoUB8/hAgRIkSIECFChAgRIhTor18/hAgN+vPnDyFChAgP5suX
L58+fwb18UOIECFChAgRIkSIECFChAL18UMocB/AfP8CBwL8J3AgwYIGDyJMqHAhQ4L6+DVs2LBh
Q4T+8jVsWFAfv4YNGzZs2LDhQX/9+jVs2LAhw3z59PlDqI9fw4YNGzZs2LChQH38GOrLly9fvoYN
GzZs2JCgPn4NGzZs2PBgv3z9GjYsqI9fw4YNGzZs2PCgv379Gib0589fw4YN8/VTqI9fw4YNGzZs
2LChQH38GvrTly9fw4YNGzZsSFAfv4YNGzZs2LBhQ4H6+DVs2LBhw4YND/rr168hQn758ulr2LAh
Q338GjZs2LBhw4YNBerj11Cgv3wNGzZsmNCfv4YG9fFr2LBhw4YNGzYUqI9fw4YNGzZs2PCgv379
GiL/5Jcvn76GDRsy1MevYcOGDRs2bNhQoD5+DRs2bNiwYb9+/gD+EziQYMGB+vgB/CdwIMGCBg8i
TKhwIcOGDv/p4/fw4cOHDx8m9OfvoUF++fLpe/jwoUF9/B4+fPjw4cOH//Txe/jw4cOHA/v18/dw
oD5+Dx8+fPjw4cN/+vg9fPjw4cOHDx8K5Jcvn76HDx8a1Mfv4cOHDx8+fPhPH7+HDx8+fDiwXz9/
Dwfq4/fw4cOHDx8+/KeP38OHDx8+fPjwoUB++fLpe/jwoUF9/B4+fPjw4cOH//Txe/jw4cOHA/v1
8/dwoD5+Dx8+fPjw4cN/+vg9fPjw4cOHDx8O9OfP/9/Dhw8N6uP38OHDhw8fPvynj9/Dhw8fPhzY
r5+/hwP18Xv48OHDhw8f/tPH7+HDhw8fPnz48OHDhwz18Xv48OHDhw8f/tPH7+HDhw8fPpQQQPr4
AfwncCDBggYPIkyocCHDhg7/6eP38OHDhw8fPnw40J8/fw8fPjSoj9/Dhw8fPnz48J8+fg8fPnz4
8GFCffwePnz48OHDh//08Xv48OHDhw8R+uvX76FBfvny6Xv48KFBffwePnz48OHDh//08Xv48OHD
hw8T6uP38OHDhw8fPvynj9/Dhw8fPnyI0F+/fg8N8suXT9/Dhw8N6uP38OHDhw8fPvynj9/Dhw8f
Pv98mFAfv4cPHz58+PDhP338Hj58+PDhQ4T++vV7aJBfvnz6Hj58aFAfv4cPHz58+PDhP338Hj58
+PDhw4T6+D18+PDhw4cP/+nj9/Dhw4cPHyL016/fQ4P88uXT9/DhQ4P6+D18+PDhw4cP/+nj9/Dh
w4cPBwLkTyDAfwIHEiw4UB8/gP8EDiRY0OBBhAkVLmTY0OE/ffwePnz48OFDhP769XtokF++fPoe
PnxoUB+/hw8fPnz48OE/ffwePnz48OHAfv38PRyoj9/Dhw8fPnz48J8+fg8fPnz48OHDhwP9+fP3
8OFDg/r4PXz48OHDhw//6eP38OHDhw8H9uvn7+H/QH38Hj58+PDhw4f/9PF7+PDhw4cPHz58+PAh
Q338Hj58+PDhw4f/9PF7+PDhw4cD+/Xz93CgPn4PHz58+PDhw3/6+D18+PDhw4cPHw7058/fw4cP
Derj9/Dhw4cPHz78p4/fw4cPHz4c2K+fv4cD9fF7+PDhw4cPH/7Tx+/hw4cPHz58+FAgv3z59D18
+NCgPn4PHz58+PDhw3/6+D18+PDhw4EA8ucP4D+BAwkWJKiPH8B/AgcSLGjwIMKEChcybOjwnz5+
Dx8+fPjw4cOHAvnly6fv4cOHBvXtA+hP4ECCBQ0eRJhQ4UKGDR3608cP4D+BAwkWNHgQYUKFCxk2
/0Sobx9AfwIHEixo8CDChAoXMmzo0J8+fgD/CRxIsKDBgwgTKlzIsCFCf/4cHuSXL58+hw4dJtQH
MJ/AgQQLGjyIMKHChQwbOhzID+A/gQMJFjR4EGFChQsZNkSoD2A+gQMJFjR4EGFChQsZNnQ4kB/A
fwIHEixo8CDChAoXMmx40F+/fg4P8suXT59Dhw4dOnTo8KC+fPkcOnTo0KFDhw4dOnTo0KFDhw4d
OnTo0KFDhw4dKvTXr5/Dg/zy5dPn0KFDhw4dOjyoL18+hw4dOnTo0KFDhw4dOnTo0KFDhw4dOnTo
0KFDhwr99evnEKE/f/4cOnTo0KFDhwf15cvn0P+hQ4cOHTp06NChQ4cOHTp06NChQ4cOHTp06FCh
v379HDp06NChQ4cOHRLUly+fQ4cOHTp06NChw4L9+vlz6NChQ4cOHTp06NChQ4cOHToc6M+fQ4T+
/Plz6NChQ4cOHR7Uly+fQ4cOHTp06NChw4L9+vlz6NChQ4cOHTp06NChQ4cOHTp0yJBfvnz6HDp0
6NChQw4dBJC+fPkA/hM4kGBBgwcRJlS4kGFDhw8X9uvnDyJEiBAhQoQIESJEiBAhQoSokF++fPog
QoQIESLEhPry5YMIESJEiBAhQhzYr58/iBAhQoQIESJEiBAhQoQIEaJCfvny6YMIESJEiBAT6sv/
l+/gvnz59PmDCBHiv3wQIUKEWLBfP38QIUKECBEiRIgQIUKECBEiRIX88uXTBxEiRIgQISbUly+f
wXz8BPbL5w8ixIb5IBLMBxEiRIgQIUKECBEiRIgQIUKECBEiRH758umDCBEiRIgQE+rLl6/gPn4E
+e37l09gPoH88uXzJ1AfP377+gnM15Bfvnz+/vnTly+fP3359P3jJ1Dfvnz99OXjJ5Bfvnz9/unL
p49fvnz+/vnTly+fP4gQIYIIIogggggiiCCCCCKIIIKoIYD89esH8J/AgQQLGvznz5+/gwcPHjx4
8ODBgwcPHjx48KC+fPkK5jOY718+gfn+8csn/5CfwHz8/vXb968fP4P5CvLLJ5Dfv3z+/vHb9y+f
wHwC8/nzl6+fv3z//OkTmE9gPn75BPL7l8/fP377AP4TOJBgQYMHESZUuJBhQ4cPIUaUOJFiRYsQ
/fXrd/HixYsXH+rLl69gPoP5/uUTmO9fPn4C+QnMNzDfv33+DOYrmI+fQH7/9O3zNzCfwHwC8wnM
JzAfQX/5BObLx08gv3/69vm7ePHixYsXL168ePGiRH/9+ln058/fxYsXLzbUly9fQX39CPrT9y+f
wHz/AOYTKNDfv3z//v3b5y/fv3///vEbmE/fv3//Bgr096/fvnz8/uX79y/fv3/5/v3L9+9fvv9/
/fTx45fv37+BA/3967cvHz+A/wQOJFjQ4EGECRUuZNjQ4UOIESVOpFjRIkR//fpV5Jcvn76LFy9e
bKgvX76C/fLxE6hPX79/+f71y/dPHz+B/Pz9yzeQXz5+B/MV1MdPID9//Abm+5dPYD6B+QTmE5jv
Xz5///zlE5hPHz+B/PzxG5jvYkR//i5evHjx4sWLFy9S9NevX0V++fLpu3jx4sWG+vLlM9hvX758
+vT5+7cvnz59//zpy5ePn8B8BPP5O5ivoD99+fLx++cvX758/f7l4/cvn8B8AvMJzPePX758+vTx
+5dvn758+fj985cvX75+FyP26+fv4sWLFy//Xrx48SJFf/4q8suXT9/FixcvNtSXLx/DfhH95bt4
8eLFg/36+bt48eLFixcvXrx4kSJAfvny6QP4T+BAggUNHkSYUOFChg0d6suXz6HDf/3y9XPo0KFD
hw4d/uvXz59Dhw4dOnTo0KFDhw4dOnTo0KFDhvzy5dPn0KFDhw4dOjyoL18+hw4dOnTo0KFDhwX7
9fPn0KFDhw4dOnTo0KFDhw4dOnTosKE/f/4cOnTo0KFDhwf15cvn0KFDhw4dOnTosGC/fv4cOnTo
0KFDhw4dOnTo0KFDhw4dOnTo0KFDhw4dFtwHMJ/AgQP1AfwncCDBggYPIkyocCHDhg4fQowo/3Ei
xYoWL2LMqHHjQH/+/HHkyFEiwHwCBw4E+E/gQIIFDR5EmFDhQoYNHT6EGFHiRIoVLV7EmFGjQX/9
+lXkly+fvo0bN1bcBzCfwIH59gH8J3AgwYIGDyJMqHAhw4YOH0KMKHEixYoWL2LMqNGgv379KvLL
l0/fxo0bLQLMJ3BgPoD/BA4kWNDgQYQJFS5k2NDhQ4gRJU6kWNHiRYwZNR70169fRX758unbuHGj
RX4A8wkUyA/gP4EDCRY0eBBhQoULGTZ0+BBiRIkTKVa0eBFjRo0H/fXrV5Ffvnz6Nm7ceBFgPoEC
Af4TOJBgQYMHESZUuJBhQ4cPFfrz5w8iRP+IECFChAgRIkSIECFCFOivXz+IBfnly6cPIkSIECFC
RMgvX758/CBChAgRIkSIEAX26+cPIkSIECFChAgRIkSIECFChLjQnz9/ECFChAgRYsJ8+fJBhAgR
IkSIECEO7NfPH0SIECFChAgRIkSIECFChAgRIkSIECFChHiwXz5+ECFChAgRIkSIA/v18wcRIkSI
ECFChAgRIkSIECFCXOjPnz+IECFChAhRoT6IECFChAgRIkSC/fr5gwgRIkSIECFChAgRIkSIECEq
5Jcvnz6IECFChAgRIkSIECFChAjxoT9/ECFChAgRIkSIECFChAgRIsSF/PLl0wcRIkSIECH/QoQI
ESJEiBAhgggiiCCCCCKIIIIIIogggggiiAoCyJ8/gP8EDiRY0CC/fPn0AfwncCDBggYPIkyocCHD
hg4fQowocSLFihYvYsyocSPHjh4H+uvXryK/fPn0ffz48ePHjx8/fvz48ePHjx8H+uvXryK/fPn0
faTID6A+gQMJFjR4EGFChQsZNnQ4sB/AfwIHEixo8CDChAoXMmzo8CHEiBInUqxo8SLGg/769bPo
z5+/jBn/6dMHkJ/AgQQLGjyIMKHChQwbOuSXjx/AfwIHEixo8CDChAoXMmzo8CHEiBInUqxo8SLG
g/769cuYMeM/ffwyZsyY0aA+fhkzZhzY/6+fv4wZM2bMmDFjxowC/fmz6M+fv4wZ/+njlzFjxowG
9fHLmDHjwH79/GXMmDFjxowZM2bMyC9fPn0ZM/7Txy9jxowZDerjlzFjxoH9+vnLmDFjxowZM2bM
mJFfvnz6Mmb8p49fxowZMxrUxy9jxowD+/XzlzFjxowZM2bMmDEjv3z59GXM+E8fv4wZM2Y0qI9f
xowZB/br5y9jxowZM2bMmDFjRn758unLmPGfPn4ZM2bMaFAfv4wZM2bMmDFjxowZM2bMaJBfvnz6
Mmb8p49fxowZMxrUxy9jxowZM2bMmDFjxowZD/rr1w/gP4EDCRY0+M+fP38HDx48ePDgQf+B+vgd
PHjw4MGDBw8ePHjw4MGDB//p4wfwn8CBBAsaPIgwocKFDBs6fAgxosSJFCtavIjxoL9+/TJmzPhP
H7+MGTNmNKiPX8aMGTNmzJgxY8aMGTMe9Nevn0V//vxlzPhPH7+MGTNmNKiPX8aMGTNmzJgxY8aM
GTMe9NevX0V++fLpy5jxnz5+GTNmzGhQH7+MGTMO9OcvY8aMGTNmzJgxo0B//fpV5Jcvn76MGf/p
45cxY8aMBvXxy5gx48B+/fxlzJgxY8aMGTNmFOjPX0V++fLpy5jxnz5+GSfmy5cvnz5///JlzEhQ
H7+MGTMO7NfPX8aMGTNmzJgxY8aM/PL/5dOXMeM/ffwyTsw3kJ++f/kyZiSoj1/GjBkH9uvnL2PG
jBkzZsyYMWNGfvny6cuY8Z8+fhkn5gP4T+C/fP/y/eOXL18/gfr25eMH8J/AgQQLGjyI8KA+fgkT
JkyYMGHChAb79fMH8J/AgQQLGjyIMKHChQwbOnwIMaLEiRQrUvTnz59Fiwf18bNoMd9Afvr+5fOn
T2A+gfn4/ctnsaI+fhYtWmTYr58/ixYtWrRo0aJFixYtWrQ4UR8/ixbz5cuXT5/AfAP95ROYT2A+
ixX18bNo0aJFixYtWrRo0aJFixYtCvTnz59Fiwf18bNoMZ/BfP308eOXT2A+gfksVtTH/8+iRYsW
LVq0aNGiRYsWLVb0169fRX758umzaPGgPn4WLeYzmC+fv3/+8gnMJzCfxYr6+Fm0aNGiRYsWLVq0
aNGixYr++vWryC9fPn0WLR7Ux8+ixXwG8/HLl0+fPn7/8gnMZ7GiPn4WLVq0aNGiRYsWLVq0aLGi
v379KvLLl0+fRYsH9fED+E/gQIIFDR5EmFDhQoYNHf7Tx+/hw4cPHz58+PDhw4cPHz58+PDhw4cP
D/rr1++hQX758un7B1CfQIH9/v0bKLDfv38DBfb792+gwH7//g0U2O/fv4EC+/37JzAfP4D/BA4k
WNDgQYQJFS5k2NDhP338Hj58+PDhQP9//vw9fPjw4cOHDx8+fPjw4cOHD//569fvoUF++fLp+wcw
n0CB/P79GyiQ379/AwXy+/dvoEB+//4NFMjv37+BAvn9+zeQH8B/AgcSLGjwIMKEChcybOjwnz5+
Dx8+fPhwYL9+/h4+fPjw4cOHDx8+fPjw4cOHDxXyy8dPIMB8AgXy+/dvoEB+//4NFMjv37+BAvn9
+zdQIL9//wYK5Pfv30B+AP8JHEiwoMGDCBMqXMiwocN/+vg9fPjw4cOB/fr5e/jw4cOHDx8+fPjw
4cOHDx8+VOiPnz+BAPkJFOjv37+BAv39+zdQoL9//wYK9Pfv30CB/v79GyjQ379/AvX/8QP4T+BA
ggUNHiS4L18+ff4QIkSIECFChAgL6uOHECFChAgRIkSI0GC/fv4A/hM4kGBBgwcRJlS4kGFDhw8h
RpQ4kWJFixcxFtTHL6PBfPwE9suXkWC+jA718cuYMePAfv38ZcyYMWPGjBkzZsyYMWNBffwyFtzH
j2A/f//45cvnT6C+ffn4CeSXL58/gfr48eOXL1+/f/ry6fu3L18+fwL18eOXcaA+fhkzZhzoz1/G
jBkzZsyYMWPGjBkzGtTHL2PBfAf55RPIT2A+fv/y/eOXTyA/gfn4+dMnMJ/AfP/27fvnb5/AfPwy
EtTHL2PGjBkzZsyYMWPGjBkR+vOX/zFjxn/6+GUsmG+gvnz58uXjJ5CfwHwC8/3Lx08gP4H5CPrL
JzDfv3wD8wnMl7GgPn4ZM2bMmDFjxowZM2bMeNBfv34ZM2b8p49fxoIA9fX79+/fv34A8wkc6O9f
vn//8v0bKNDfv3z/+unjxy/fv3/5/uX79+9fvn//8gH8J3AgwYIGDwrUxw/gP4EDCRY0eBBhQoUL
GTZ0+BBiRIkTKVa0eBHjQX/9+mXMmPGfPn4ZC/bLx0+gP3359PETyM/fv3wC8/3Tx08gP3//8v3L
5++fv3wC8/3Tt++fv3wC82UsqI9fxowZM2bMmDFjxowZMx70169fxowZ/+njl9FgP/99+fLp46fP
n758+fgJzCcw3z9/+vLl4ycw3z9++fLp08fvXz5+/vTly9dPYL6MBfXxy5gxY8aMGTNmzJgxY8aD
/vr1y5gx4z99/DJmzJjRoD5+GTNmHNivn7+MGTNmzJgxY8aMAv35y5gx4z99/DJmzJjRoD5+GTNm
HNivn7+MGTNmzJgxY8aMGTNmLKiPX8aMGTMa1McvY8aMA/v185cxY8aMGTNmzJgxo4wyKgggffwA
/hM4kGBBgwcRJlS4kGFDh//08Xv48OHDhwP79fP38OHDhw8fPnz48OHDhw8fPnz48OHDhwX18Xv4
8OHDhw8f/tPH7+HDhw8fDuzXz9//w4cPHz58+PDhw4cPHz58+PDhw4cPHxbUx+/hw4cPHz58+E8f
v4cPHz58+PDhw4cPHz58+PDhw4cPHz58+PDhw4cL9fF7+PDhw4cPH/7Tx+/hw4cPHz58+PDhw4cP
Hz58+PDhw4cPD/rr1+/hw4cPH/7Tx+/hw4cPHz58+E8fv4cPHz58+PDhw4cPHz58+PDhw4cPHz48
6K9fv4cPHz58+E8fv4cPHz58+PDhP338Hj58+PDhw4cPHz58+PDhw4cPHz58+PCgv379Hj58+PDh
P30A+QH8J3AgwYIGDyJMqHAhw4YO/+nj9/Dhw4cPHz58+PDhw4cPHz58+PDhw4cH//316/fw4cOH
D//p4/fw4cOHDx8+/KeP38OHDx8+HOjP38OHDx8+fPjw4cOHDx8+fPhQoL9+/R4+fPjw4T99/B4+
fPjw4cOH//Txe/jw4cOHA/v18/fw4cOHDx8+fPjw4cOHDx8+FOjP38OHDx8+/KeP38OHDx8+fPjw
nz5+Dx8+fPhwYL9+/h4+fPjw4cOHDx8+fPjw4cOHDx8+fPiwoD5+Dx8+fPjw4cN/+vg9fPjw4cOB
/fr5e/jw4cOHDx8+fPjw4cOHDx8+fPjw4cOC+vIB1CdwIMGCBg8iTKhwIcOGDvXl4wfwn8CBBAsa
PIgwocKFDPv188eQIUOGDBkyZP/IkCFDhgwZMmTIkCFDhgwZMmTIsGA/gPwEDiRY0OBBhAkR5suX
T6FChQoVCvQH8J/AgQQLGjyIMKHChQz79fMH8J/AgQQLGjyIMKHChQwbOnwIMaLEiRQrWryIMaNG
hPry5du4cePGjRs3bty4cePGjRs3bty48aC+fPk2bty4cePGjRs3bty4cWNCf/36bdy4caNFffny
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
9+XL5++fPn//8vH7x48fwXwD+/X7ty9fPn8C8wnMJ1AfP3788uXz949fvnz+CO7jR7CfP4H88uXz
J1Dfvnz8BPLLl8/fP338//j945cvX79/+vLp+7cvXz5/AvXx48eP38aNGzdu3Lhx48aNGzduVKgv
Xz6D+gTm+7dv3z9/+wrmG9iP3799+/752/ePH79/+fb901dwnz5+/gTu2/fP3z6B+QTmE5iPH799
//zl45dPID+C+RDyA5jv3z9+//7l4/cv3z9++f794/cvH79//vT9+5fv3798//bt++dv379/+fj9
66cP4D+BAwkWNHgQYUKFCxk2dPgQYkSJEylWtHgRY0aNCvXly2cwn8B8//INzFcQYD6BAvv9y/fv
3798//zt67cv3798AP8JHNiPn758/fINzCcwn8B8AvP9yzfQXz5+AvkN/P+Xb6C+fPny/cvHTyA/
gfkE5vuXj59Afv/yDRToL5/AfP/yDcwnMN/AfAD/CRxIsKDBgwgTKlzIsKHDhxAjSpxIsaLFixgz
alSoL18+g/kE5vuXb2C+gvkG8tP3L9/AfALz8eunjx8/gv78DfSXL9/AfALzCcwnMN+/fAQB5hMo
0N+/f//09fv379+/fvn+DRTo71++f//y/Rso0F++f//66ePHL9+/f/n+5fv371++f//y/fv3Lx/A
fwIHEixo8CDChAoXMmzo8CHEiBInUqxo8SLGjBoV6suXz2A+gfn+6dv3z1++gvkG+tP3T9++f/7y
CdSX7x8/ff0I9tM3sF//Pn37/vnLJzDfv375BOb7p2+fwHz6+Ank529gv3z8BPrTl++fPn4C+fn7
l09gvn/6+Ank5y+fwHz+/vnLJzDfP337/vnLJzDfwH0bN27cuHHjxo0bN27cuFGhvnz5DOoTmI+f
P3358vUrmI9gvn/+9OXL108gP33//OUzyC9fvnz7/vnTly9fP4H78unTJzDfP3/68uXr509fvnz8
CvbTly+fPn76/vnTly8fP4H5BOb7509fvnz8/uUTyC9fPn36+P3Lx8+fvnz5+gnMJ7Bfv40bN27c
uHHjRhtttNFGGykEkL58+QD+EziQXz+A/wQOJFjQ4EGECRUuZNjQ4UOB//ogQoQIESJEiBAhQoQI
ESJEiBAhQoQIESJEhfry5Tu4DyJEiBAhQoSokB9EiBAhQoQIESJEiBAhQoQIESJEiBAhQoSoUF++
fBAhQoQIESJEiBAhQoQIESJEiBAhQoQIESJEiBAhQoQIEWJDffnyQYQIESJEiBAhQoQIESJEiBAh
QoQIESJEiBAhQoQIESJEiA315csHESJEiBAhQoQIESJEiBAhQoQIESJEiBAhQoQIESJEiBAhJuzH
jx+/fPny8ePHjx9EiBAhQoQIESJEiBAhQoQIESJEiBAhQoQIESJEiBAhQoRYkB/AfAIHDuQH8J/A
gQQLGjyIMKHChQwbOv98CDGixIkUK1q8iDGjxo0cO3qsCDCfwIEDAf4TOJBgQYMHESZUuJBhQ4cP
IUaUOJFiRYsXMWbUuJFjR48W+wHMJ3BgPn4A/wkcSLCgwYMIEypcyLChw4cQI0qcSLGixYsYM2rc
yLGjx4sA8wkcmA/gP4EDCRY0eBBhQoULGTZ0+BBiRIkTKVa0eBFjRo0bOXb0iLEfwHwCBfYD+E/g
QIIFDR5EmFDhQoYNHT6EGFHiRIoVLV7EmFHjRo4dPWbUly9fvnwfP378+PHjx48fP378+PHjR43+
8uXL1+/jx48fP378+PHjx48fP378uFFfPn0fP378+PHjx48fP378+PGW40eO/vL5+/jx48ePHz9+
/Pjx48ePHz927Afwn8CBBAsaPIgwocKFDBs6fAgxosSJFCtavIgxo8aNHDt6/AgypMiRJEuaPIky
pcqVLFu6fAkzpsyZNGvavIkzp86dPHv6/Ak0qNChRIsaPYo0qdKlTJs6fQo1qtSpVKtavYo1q9at
XLt6/Qo2rNixZMuaPYs2rdq1JwMCADs7

------=_NextPart_000_0017_01CAC89A.55990190
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://download.oracle.com/docs/cd/B14117_01/server.101/b10752/pfgrf197.gif

R0lGODdh8AGAAPcAAAAAAAAAPwAAfwAAwAAA/wAqAAAqPwAqfwAqwAAq/wBVAABVPwBVfwBVwABV
/wB/AAB/PwB/fwB/wAB//wCqAACqPwCqfwCqwACq/wDVAADVPwDVfwDVwADV/wD/AAD/PwD/fwD/
wAD//yoAACoAPyoAfyoAwCoA/yoqACoqPyoqfyoqwCoq/ypVACpVPypVfypVwCpV/yp/ACp/Pyp/
fyp/wCp//yqqACqqPyqqfyqqwCqq/yrVACrVPyrVfyrVwCrV/yr/ACr/Pyr/fyr/wCr//1UAAFUA
P1UAf1UAwFUA/1UqAFUqP1Uqf1UqwFUq/1VVAFVVP1VVf1VVwFVV/1V/AFV/P1V/f1V/wFV//1Wq
AFWqP1Wqf1WqwFWq/1XVAFXVP1XVf1XVwFXV/1X/AFX/P1X/f1X/wFX//38AAH8AP38Af38AwH8A
/38qAH8qP38qf38qwH8q/39VAH9VP39Vf39VwH9V/39/AH9/P39/f39/wH9//3+qAH+qP3+qf3+q
wH+q/3/VAH/VP3/Vf3/VwH/V/3//AH//P3//f3//wH///6oAAKoAP6oAf6oAwKoA/6oqAKoqP6oq
f6oqwKoq/6pVAKpVP6pVf6pVwKpV/6p/AKp/P6p/f6p/wKp//6qqAKqqP6qqf6qqwKqq/6rVAKrV
P6rVf6rVwKrV/6r/AKr/P6r/f6r/wKr//9UAANUAP9UAf9UAwNUA/9UqANUqP9Uqf9UqwNUq/9VV
ANVVP9VVf9VVwNVV/9V/ANV/P9V/f9V/wNV//9WqANWqP9Wqf9WqwNWq/9XVANXVP9XVf9XVwNXV
/9X/ANX/P9X/f9X/wNX///8AAP8AP/8Af/8AwP8A//8qAP8qP/8qf/8qwP8q//9VAP9VP/9Vf/9V
wP9V//9/AP9/P/9/f/9/wP9///+qAP+qP/+qf/+qwP+q///VAP/VP//Vf//VwP/V////AP//P///
f///wP////8AAP8AP/8Af/8AwAAAACoqKlVVVX9/f6qqqtXV1f///ywAAAAA8AGAAAAI/wD/CRxI
sKDBgwgTKlyocB/AfAIHEixo8CDChAoXDgT4T+BAggUNHkSYUOFChg0dPoQYUeJEihUtXsSYUeNG
jhT17QPoT+BAggUNHkSYUOFCfvkA/hM4kGBBgwcRJlS4kGFDhw8hRpQ4kWJFixcxZtS4kSNFffw6
dkToL1/Hjh07duzYsWPHjh07duxIUR+/jh0R+svXsWPHjh07duzYsWPHjh07UtTHr2NHhP7ydezY
sWPHjh07duzYsWPHjhT18evYEaG/fB07duzYsWPHjh07duzYsSNFffw6dkToL1/Hjh07duzYsWPH
jh07duxIUR+/jh0R+svXsWPHjh07dv/s2LFjx44dO1LUx69jR4T+8nXs2LFjx44dO3bs2LFjx44U
9fHr2BGhv3wdO3Y0mC+fxXwH+XXs2LFjx44dO3bsqFAfv4X58vn75y9fvo4EAeYTKNAfwH8CBw70
lw/gP4EDCRY0eBBhQoULGTYUmC+fQ4T5Cvbbl8+hQ4cOHTp06NChQ4cOHTp06NChQ4cOHRrUx29h
vnz9/vXLl8+hw4L58jX0l8+hQ4cOHTpMmC8fwX358vH7ty+fwHz8/u3Ll4+fwHwE/enTl8+hQ4cO
HTp06NChQ4cOHTp06NChQ4cOHRrUx29hvnz8/vHLl8+hw4L58jX0l8+hQ4cOHTpMmC//38B9+fz5
y8evX75//vL525fPn798/P7lO5jPoUOHDh06dOjQoUOHDh06dOjQoUOHDh0a1MdvYb58+/7ty5fP
ocOC+fLly6dPob98Dh06dOjQYcJ8+Qbm0ycwX75/+frxy/cvnz6B+fL9y3cwn0OHDh06dOjQoUOH
Dh06dOjQIYcccsghhwwCSB8/gP8EDiT4L18+ff705ctXsGDBggULDsyXr2DBgf7yAfwncCDBggYP
IkyocCHDhgLz5RuYT1++fPn0/du3Tx+/f/n05cuXT9+/fAfzOXTo0KFDhw4dOnTo0KFDhw4dOnTo
0KFDg/r4LcyXj98+fvnyOXRYMF++/4b+8jl06NChQ4cJ8+UbqI+fQH39/vXLl8/fP338BOrr9y/f
wXwOHTp06NChQ4cOHTp06NChQ4cOHTp06NCgPn4L8+Xjl49fvnwOHRbMl6+hv3wOHTp06NBhQoD5
BArsp08gv3///gn898+fPoH8/v3LB/CfwIH/8gH8J3AgwYIGDyJMqHAhw4YOH0KMKHEixYoWL2LU
x29hvnz98vXLlw9jwnz5GvrLhxEjRowYMWLEiBEjRowYMWLEiFGiPn4YMUr0lw8jRowYMWLEiBEj
RowYMWLEiBGjRH38MGKU6C8fRowYMWLEiBEjRowYMWLEiBEjRon6+GHEKNFfPowYMf9ixIgRI0aM
GDFixIgRI0aMEvXxw4hRor98GDFixIgRI0aMGDFixIgRI0aMGCXq44cRo0R/+TBixIgRI0aMGDFi
xIgRI0aMGDFK1McPI0aJ/vJhxIgRI0aMGDFixIgRI0aMGDFilKiPH0aMEv3lw4gRI0aMGDFixIgR
I0aMGDFixChRHz+MGCX6y4cRI0aMGDFixIgRI0aMGDFihBFGEgGkjx/AfwIHEixo8CDChAoX+ssH
8J/AgQQLGjyIMKHChQwbOnwIMaLEiRQrWryIMaPGjRwp6ssHUJ/AgQQLGjyIMKHChfryAfwncCDB
ggYPIkyocCHDhg4fQowocSLFihb/L2LMqHEjR4r9APITOJBgQYMF9+XLl2/fwYH78uXLt+/gwYMC
Af4TOJBgQYMHESZUuJBhQ4cPIUaUOJFiRYsXMWbUuJFjx4j98uXL54+hv3z58vnz6NGjR48ePXr0
6NGjR48ePV7sly9fPn8O/eXLl8+fR48ePXr06NGjR48ePXr06LFiv3z58vmD6C9fvnz+PHr06NGj
R48ePXr06NGjR48T++XLl8+fRH/58uXz59GjR48ePXr06NGjR48ePXqM2C9fvnz+KPrLly+fP48e
PXr06NGjR48ePXr06NHjw3758uXzZ9Ffvnz5/Hn06NGjR48ePXr06NGjR48eG/bL/5cvnz+M/vLl
y+fPo0ePHj169OjRo0ePHj169LiwX758+fxp9JcvXz5/Hj169OjRo0ePHj169OjRo8eE/fLly+eP
o798APPl8wfwn8CBBAsaPIgwocKFDBs6fAgxosSJFCtavIgxo8aNHDta7JcvXz5/Hv3ly5fPn0eP
Hj169OjRo0ePHj169OixYL98+fL58yjQX758+fx59OjRo0ePHj169OjRo0ePHgf2y5cvnz+PBP3l
y5fPn0ePHj169OjRo0ePHj169OjxX798+fL582jQX758+fx59OjRo0ePHj169OjRo0ePHfvly5fP
n0eE/vLly+fPo0ePHj169OjRo/9Hjx49etzYL1++fP48KvSXL18+fx49evTo0aNHjx49evTo0WPG
fvny5fPnkaG/fPny+fPo0aNHjx49evTo0aNHjx4v9suXL58/jw795cuXz59Hjx49evTo0aNHjx49
evRYsV++fPn8eYQIkL98+fL5A/hP4ECCBQ0eRJhQ4UKGDR0+hBhR4kSKFS1exJhR40aOHQn2y5cv
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
H0F++ipWJMhPn0N+A/vly+dPIL98+fZVVMhvYL98+fwJ5Jcv3z6C/PRVJJgvX8V/+Qj2y+evXz59
FStWrFixYsWKFStK5KePYb99+Qbm6+dv379++fzxy7evIsJ++/INzNfP375++fzxy7dvID99FSsS
5KePYb99+Qbm6+dv379++fzxy7ev4sF++/INzNfP375//fL545dv30B++ioSzJeP4L58+fj925dP
YD5+//bly8dPYD6C/P/yCcyXr2LFihUrVqxYsWJFifz0LfSnT1++gfkE5vvXj98/f/n2VTzoT5++
fAPzCcwHsB+/f/7y7fv37x8/fQD/CRxIsKDBgwgT/uOnT+E/f/r05RuYT2C+f/34/fOXb59ChQf9
6dOXb2A+gfn+9eP3z1++fQP56VOosGC+fAP35fPnLx+/fvn++cvnb18+f/7y8fuX76C/fPsA/hM4
kGBBgwcRJlS4kGFDhw8hRpQ4kaJEfvoQ+tu3b2C+gfkE5hvYb58+fw/57evXMN/AfALzCey3T5+/
gfz0VaxIkJ++g/727SOYb2A+gfkG9tunz99Dfvv6Mcw3MJ/AfAP77dP/528gP30VCebLNzCfPoH5
8v3L149fvn/59AnMl+9fPoP98u2rWLFixYoVK1asWHEiP30G+eXLt6/fwHwD8wnMN5Bfvnz9Hvrb
ly8fv3/88uXLl08fwXwD8wnMJ5Bfvnz9BvLTV7EiQX76CvLLl29fP4L5BuYTmG8gv3z5+j30ty9f
Pn7/+OXLly+fvoH5BuYTmG8gv3z5+g3kp68iwXz5BubTly9fPn3/9u3Tx+9fPn358uXT9y9fQX4A
8/ED+E/gQIIFDR5EmFDhQoYNHT6EGFHiRIoU+ekryC+fPn8F8w3MJzDfP3/+BObLJ1FfPn0K8w3M
JzCfP38C8+UbyE9f/8WKBPnpI8gvnz5/BvMNzCcw3z9//gTmyydRXz59CfMNzCcw3z9//gTmyzeQ
n76KBPPlG6iPn0B9/f71y5fP3z99/ATq6/cvH8F++fhVrFixYsWKFStWrFiRnz6D/PLl29dvYL6B
+vz5y/dvX75//vLle+hvX758+/zxy5cvXz59BPMN1OfPX759+f75y5dvID99FSsS5KevIL98+fb1
I5hvoD5//vL925fvn798+R7625cv3z5//PLly5dP38B8A/X585fv3758//zlyzeQn76KBAHmEyiw
nz6B/P79+yfw3z9/+gTy+/cv379///7tGygQ4D+BAwkWNHgQYUKFC/8ZNnT4EGJEiRMpSuSnD2G/
ffoG5hvYL1++fgL15cu3DyK/ff0a5hvYL1++fv/05cu3jyA/fRUrEuSn72C/ffoI5hvYL1++fgL1
5cu3DyK/ff0Y5hvYL1++fgL15cu3jyA/fRUrVqxYsWLFihUrVqxY8SE/fRUrVnTIT1/FigT56atY
saJDfvoqVqxYsWLFihUrVqxYseJDfvoqVqzokJ++ihUJ8tNXsWJFh/z0VaxYsWLFihUrVqxYsWLF
h/z0VaxY0SE/fRUrEuSnr2LFig756atYsWLFihUrVqxYsWLFig/56atYsaJDfvoqViTIT1/FihUd
8tNXsWLFihUrVqz/WLFixYoVH/LTV7FiRYf89FWsSBAgfvoA/hM4kGBBgwcRJlS4cCE/fQwZMmTI
kCFDhgwZMmTIkCFDhgwZMmTIkCFDhvz0MWTIkCFDhgX56WPIkKFCfvoYMmTIkCHDgvz0MWTIkCFD
hgwZMmTIkCFDhgwZMmTIkCFDhgwZ8tPHkCFDhgwZFuSnjyFDhgr56WPIkCFDhgwL8tPHkCFDhgwZ
MmTIkCFDhgwZMmTIkCFDhgwZMmTITx9DhgwZMmRYkJ8+hgwZKuSnjyFDhgwZMizITx9DhgwZMmTI
kCFDhgwZMmTIkCFDhgwZMmTIkCE/fQwZMmTIkGFBfvoYMmSokJ8+/4YMGTJkyLAgP30MGTJkyJAh
Q4YMGTJkyJAhQ4YMGTJkyJAhQ4b88gHUJ3AgwYIGDyJMqHDhwnz6AP4TOJBgQYMHESb8xy8fQH0C
BxIsaPAgwoQKFy7Mpw/gP4EDCRY0eBBhQoULGTZ0+BBiRIkTKVa0eJGhP4D8BA4kWNDgQYQJFS5k
KBDgP4EDCRY0eBBhwn/+APITOJBgQYMHESZUuJChQID/BA4kWNDgQYQJFS5k2NDhQ4gRJU6kWNHi
RYwZNW7k2NHjR5AhRY4kWdLkSZQpVa5k2dLlS5gxZc6kWdPmTZw5de7k2dPnT6BBhQ4lWtToUaRJ
lS5l2tTpU6hRpShOpVrV6lWsWbVu5drV61ewYcWOJVvW7Fm0adWuZdvW7Vu4ceXO5RkQADs7

------=_NextPart_000_0017_01CAC89A.55990190
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://download.oracle.com/docs/cd/B14117_01/dcommon/gifs/oracle.gif

R0lGODlhSwAJAKIAAP///94AIe97lPe1vecIOe9Kc//e5wAAACH5BAAAAAAALAAAAABLAAkAQAPT
CCAV9LAMNaB1U+kRitaGYD3BUAlfahQjUQ5o6AZ0TWQcCjbFGugql2HQqNUGhpmRhiIqj4pOatrJ
hQQwxk+RJBgUDZSgNN1sp+OlQ6oYe8rJwPD8MbDBP6EmXAbk+g8ZfXxwLCZnFXQLHXFrjC6CKX9T
XZFlDQQFmptFTQ6cmpB1M0B+LqAFnqUfiagCQxwEfRQ/k3V3bn5stlO8Zj0msCYad2UcEltppHs/
Bs4VXr6sir8mWNdfXKcC3N0iUrZxOl1fWdwNJg+p3ljH7Nzpme8ZCQA7

------=_NextPart_000_0017_01CAC89A.55990190
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://download.oracle.com/docs/cd/B14117_01/dcommon/css/doccd.css

H1 {
	FONT-FAMILY: Arial, Helvetica, sans-serif; BACKGROUND: white; COLOR: =
#309
}
H2 {
	FONT-FAMILY: Arial, Helvetica, sans-serif; BACKGROUND: white; COLOR: =
#309
}
H3 {
	FONT-FAMILY: Arial, Helvetica, sans-serif; BACKGROUND: white; COLOR: =
#309
}
H4 {
	FONT-FAMILY: Arial, Helvetica, sans-serif; BACKGROUND: white; COLOR: =
#309
}
H5 {
	FONT-FAMILY: Arial, Helvetica, sans-serif; BACKGROUND: white; COLOR: =
#309
}
H6 {
	FONT-FAMILY: Arial, Helvetica, sans-serif; BACKGROUND: white; COLOR: =
#309
}
TH {
	FONT-FAMILY: Arial, Helvetica, sans-serif
}
.ProductTitle {
	FONT-FAMILY: Arial, Helvetica, sans-serif
}
.BookTitle {
	FONT-FAMILY: Arial, Helvetica, sans-serif
}
.VersionNumber {
	FONT-FAMILY: Arial, Helvetica, sans-serif
}
.PrintDate {
	FONT-FAMILY: Arial, Helvetica, sans-serif; FONT-SIZE: smaller
}
.PartNumber {
	FONT-FAMILY: Arial, Helvetica, sans-serif; FONT-SIZE: smaller
}

------=_NextPart_000_0017_01CAC89A.55990190--
